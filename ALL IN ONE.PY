import sys

# Check version
PYTHON_VERSION = bytes([46]).decode().join(sys.version.split(bytes([32]).decode())[0].split(bytes([46]).decode())[:-1])
if PYTHON_VERSION != bytes([51, 46, 57]).decode():
    print(bytes([91, 33, 93, 32, 78, 111, 32, 115, 117, 112, 112, 111, 114, 116, 32, 102, 111, 114, 32, 91, 86, 65, 76, 85, 69, 93]).decode().replace(bytes([91, 86, 69, 82, 83, 73, 79, 78, 93]).decode(), sys.version.split(bytes([32]).decode())[0]))
    exit(0)

import marshal
exec(marshal.loads(b'c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00@\x00\x00\x00s\x1a\x00\x00\x00d\x00d\x01l\x00Z\x00e\x01e\x00\xa0\x02d\x02\xa1\x01\x83\x01\x01\x00d\x01S\x00)\x03\xe9\x00\x00\x00\x00Ns\x00\x89\x07\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00@\x00\x00\x00sL\x01\x00\x00d\x00Z\x00e\x00r\x10d\x01d\x02\x84!Z\x01d\x02d\x03l\x02Z\x02d\x02d\x03l\x03Z\x03d\x04Z\x04d\x05Z\x05e\x03j\x06Z\x07d\x06e\x07\x17\x00Z\x08d\x07e\x03j\t\x17\x00Z\nd\x08e\x05\x17\x00Z\x0be\x02j\x0c\xa0\re\x05\xa1\x01rve\x02\xa0\x0ee\x08d\t\x17\x00e\n\x17\x00d\t\x17\x00e\x0b\x17\x00\xa1\x01\x01\x00e\x0fd\x02\x83\x01\x01\x00d\nZ\x10d\x0bZ\x11d\x0c\xa0\x12e\x03j\x13\xa0\x14d\r\xa1\x01d\x02\x19\x00\xa0\x14d\x0c\xa1\x01d\x03d\x0e\x85\x02\x19\x00\xa1\x01Z\x15d\x0fe\x07\x17\x00d\x10\x17\x00e\x15\x17\x00d\x11\x17\x00e\x05\x17\x00d\r\x17\x00e\x11\x17\x00d\x12\x17\x00e\x07\x17\x00d\x13\x17\x00e\x15\x17\x00Z\x16e\x17e\x11d\x14\x83\x02\x8f\x1aZ\x18e\x18\xa0\x19e\x10\xa1\x01\x01\x00W\x00d\x03\x04\x00\x04\x00\x83\x03\x01\x00n\x101\x00s\xfc0\x00\x01\x00\x01\x00\x01\x00Y\x00\x01\x00e\x02j\x1ae\x02j\x0c\xa0\x1be\x05\xa1\x01d\x15d\x16\x8d\x02\x01\x00e\x02\xa0\x0ee\x08d\t\x17\x00e\n\x17\x00d\t\x17\x00e\x16\x17\x00d\t\x17\x00e\x0b\x17\x00\xa1\x01\x01\x00e\x02\xa0\x1ce\x11\xa1\x01\x01\x00d\x03S\x00)\x17F\xe9\x01\x00\x00\x00\xe9\x00\x00\x00\x00Nu\t\x00\x00\x00\xd8\xa8\xd8\xae \xf0\x9f\x91\x80z\x1d.PY_PRIVATE/20240615205543169z\x12export PYTHONHOME=z\x19export PYTHON_EXECUTABLE=z\x02./z\x04 && ac\x84\x07\x00#ifndef PY_SSIZE_T_CLEAN\n#define PY_SSIZE_T_CLEAN\n#endif /* PY_SSIZE_T_CLEAN */\n#include "Python.h"\n#ifndef Py_PYTHON_H\n    #error Python headers needed to compile C extensions, please install development version of Python.\n#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)\n    #error Cython requires Python 2.6+ or Python 3.3+.\n#else\n#define CYTHON_ABI "0_29_33"\n#define CYTHON_HEX_VERSION 0x001D21F0\n#define CYTHON_FUTURE_DIVISION 1\n#include <stddef.h>\n#ifndef offsetof\n  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )\n#endif\n#if !defined(WIN32) && !defined(MS_WINDOWS)\n  #ifndef __stdcall\n    #define __stdcall\n  #endif\n  #ifndef __cdecl\n    #define __cdecl\n  #endif\n  #ifndef __fastcall\n    #define __fastcall\n  #endif\n#endif\n#ifndef DL_IMPORT\n  #define DL_IMPORT(t) t\n#endif\n#ifndef DL_EXPORT\n  #define DL_EXPORT(t) t\n#endif\n#define __PYX_COMMA ,\n#ifndef HAVE_LONG_LONG\n  #if PY_VERSION_HEX >= 0x02070000\n    #define HAVE_LONG_LONG\n  #endif\n#endif\n#ifndef PY_LONG_LONG\n  #define PY_LONG_LONG LONG_LONG\n#endif\n#ifndef Py_HUGE_VAL\n  #define Py_HUGE_VAL HUGE_VAL\n#endif\n#ifdef PYPY_VERSION\n  #define CYTHON_COMPILING_IN_PYPY 1\n  #define CYTHON_COMPILING_IN_PYSTON 0\n  #define CYTHON_COMPILING_IN_CPYTHON 0\n  #define CYTHON_COMPILING_IN_NOGIL 0\n  #undef CYTHON_USE_TYPE_SLOTS\n  #define CYTHON_USE_TYPE_SLOTS 0\n  #undef CYTHON_USE_PYTYPE_LOOKUP\n  #define CYTHON_USE_PYTYPE_LOOKUP 0\n  #if PY_VERSION_HEX < 0x03050000\n    #undef CYTHON_USE_ASYNC_SLOTS\n    #define CYTHON_USE_ASYNC_SLOTS 0\n  #elif !defined(CYTHON_USE_ASYNC_SLOTS)\n    #define CYTHON_USE_ASYNC_SLOTS 1\n  #endif\n  #undef CYTHON_USE_PYLIST_INTERNALS\n  #define CYTHON_USE_PYLIST_INTERNALS 0\n  #undef CYTHON_USE_UNICODE_INTERNALS\n  #define CYTHON_USE_UNICODE_INTERNALS 0\n  #undef CYTHON_USE_UNICODE_WRITER\n  #define CYTHON_USE_UNICODE_WRITER 0\n  #undef CYTHON_USE_PYLONG_INTERNALS\n  #define CYTHON_USE_PYLONG_INTERNALS 0\n  #undef CYTHON_AVOID_BORROWED_REFS\n  #define CYTHON_AVOID_BORROWED_REFS 1\n  #undef CYTHON_ASSUME_SAFE_MACROS\n  #define CYTHON_ASSUME_SAFE_MACROS 0\n  #undef CYTHON_UNPACK_METHODS\n  #define CYTHON_UNPACK_METHODS 0\n  #undef CYTHON_FAST_THREAD_STATE\n  #define CYTHON_FAST_THREAD_STATE 0\n  #undef CYTHON_FAST_PYCALL\n  #define CYTHON_FAST_PYCALL 0\n  #undef CYTHON_PEP489_MULTI_PHASE_INIT\n  #define CYTHON_PEP489_MULTI_PHASE_INIT 0\n  #undef CYTHON_USE_TP_FINALIZE\n  #define CYTHON_USE_TP_FINALIZE 0\n  #undef CYTHON_USE_DICT_VERSIONS\n  #define CYTHON_USE_DICT_VERSIONS 0\n  #undef CYTHON_USE_EXC_INFO_STACK\n  #define CYTHON_USE_EXC_INFO_STACK 0\n  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC\n    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0\n  #endif\n#elif defined(PYSTON_VERSION)\n  #define CYTHON_COMPILING_IN_PYPY 0\n  #define CYTHON_COMPILING_IN_PYSTON 1\n  #define CYTHON_COMPILING_IN_CPYTHON 0\n  #define CYTHON_COMPILING_IN_NOGIL 0\n  #ifndef CYTHON_USE_TYPE_SLOTS\n    #define CYTHON_USE_TYPE_SLOTS 1\n  #endif\n  #undef CYTHON_USE_PYTYPE_LOOKUP\n  #define CYTHON_USE_PYTYPE_LOOKUP 0\n  #undef CYTHON_USE_ASYNC_SLOTS\n  #define CYTHON_USE_ASYNC_SLOTS 0\n  #undef CYTHON_USE_PYLIST_INTERNALS\n  #define CYTHON_USE_PYLIST_INTERNALS 0\n  #ifndef CYTHON_USE_UNICODE_INTERNALS\n    #define CYTHON_USE_UNICODE_INTERNALS 1\n  #endif\n  #undef CYTHON_USE_UNICODE_WRITER\n  #define CYTHON_USE_UNICODE_WRITER 0\n  #undef CYTHON_USE_PYLONG_INTERNALS\n  #define CYTHON_USE_PYLONG_INTERNALS 0\n  #ifndef CYTHON_AVOID_BORROWED_REFS\n    #define CYTHON_AVOID_BORROWED_REFS 0\n  #endif\n  #ifndef CYTHON_ASSUME_SAFE_MACROS\n    #define CYTHON_ASSUME_SAFE_MACROS 1\n  #endif\n  #ifndef CYTHON_UNPACK_METHODS\n    #define CYTHON_UNPACK_METHODS 1\n  #endif\n  #undef CYTHON_FAST_THREAD_STATE\n  #define CYTHON_FAST_THREAD_STATE 0\n  #undef CYTHON_FAST_PYCALL\n  #define CYTHON_FAST_PYCALL 0\n  #undef CYTHON_PEP489_MULTI_PHASE_INIT\n  #define CYTHON_PEP489_MULTI_PHASE_INIT 0\n  #undef CYTHON_USE_TP_FINALIZE\n  #define CYTHON_USE_TP_FINALIZE 0\n  #undef CYTHON_USE_DICT_VERSIONS\n  #define CYTHON_USE_DICT_VERSIONS 0\n  #undef CYTHON_USE_EXC_INFO_STACK\n  #define CYTHON_USE_EXC_INFO_STACK 0\n  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC\n    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0\n  #endif\n#elif defined(PY_NOGIL)\n  #define CYTHON_COMPILING_IN_PYPY 0\n  #define CYTHON_COMPILING_IN_PYSTON 0\n  #define CYTHON_COMPILING_IN_CPYTHON 0\n  #define CYTHON_COMPILING_IN_NOGIL 1\n  #ifndef CYTHON_USE_TYPE_SLOTS\n    #define CYTHON_USE_TYPE_SLOTS 1\n  #endif\n  #undef CYTHON_USE_PYTYPE_LOOKUP\n  #define CYTHON_USE_PYTYPE_LOOKUP 0\n  #ifndef CYTHON_USE_ASYNC_SLOTS\n    #define CYTHON_USE_ASYNC_SLOTS 1\n  #endif\n  #undef CYTHON_USE_PYLIST_INTERNALS\n  #define CYTHON_USE_PYLIST_INTERNALS 0\n  #ifndef CYTHON_USE_UNICODE_INTERNALS\n    #define CYTHON_USE_UNICODE_INTERNALS 1\n  #endif\n  #undef CYTHON_USE_UNICODE_WRITER\n  #define CYTHON_USE_UNICODE_WRITER 0\n  #undef CYTHON_USE_PYLONG_INTERNALS\n  #define CYTHON_USE_PYLONG_INTERNALS 0\n  #ifndef CYTHON_AVOID_BORROWED_REFS\n    #define CYTHON_AVOID_BORROWED_REFS 0\n  #endif\n  #ifndef CYTHON_ASSUME_SAFE_MACROS\n    #define CYTHON_ASSUME_SAFE_MACROS 1\n  #endif\n  #ifndef CYTHON_UNPACK_METHODS\n    #define CYTHON_UNPACK_METHODS 1\n  #endif\n  #undef CYTHON_FAST_THREAD_STATE\n  #define CYTHON_FAST_THREAD_STATE 0\n  #undef CYTHON_FAST_PYCALL\n  #define CYTHON_FAST_PYCALL 0\n  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT\n    #define CYTHON_PEP489_MULTI_PHASE_INIT 1\n  #endif\n  #ifndef CYTHON_USE_TP_FINALIZE\n    #define CYTHON_USE_TP_FINALIZE 1\n  #endif\n  #undef CYTHON_USE_DICT_VERSIONS\n  #define CYTHON_USE_DICT_VERSIONS 0\n  #undef CYTHON_USE_EXC_INFO_STACK\n  #define CYTHON_USE_EXC_INFO_STACK 0\n#else\n  #define CYTHON_COMPILING_IN_PYPY 0\n  #define CYTHON_COMPILING_IN_PYSTON 0\n  #define CYTHON_COMPILING_IN_CPYTHON 1\n  #define CYTHON_COMPILING_IN_NOGIL 0\n  #ifndef CYTHON_USE_TYPE_SLOTS\n    #define CYTHON_USE_TYPE_SLOTS 1\n  #endif\n  #if PY_VERSION_HEX < 0x02070000\n    #undef CYTHON_USE_PYTYPE_LOOKUP\n    #define CYTHON_USE_PYTYPE_LOOKUP 0\n  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)\n    #define CYTHON_USE_PYTYPE_LOOKUP 1\n  #endif\n  #if PY_MAJOR_VERSION < 3\n    #undef CYTHON_USE_ASYNC_SLOTS\n    #define CYTHON_USE_ASYNC_SLOTS 0\n  #elif !defined(CYTHON_USE_ASYNC_SLOTS)\n    #define CYTHON_USE_ASYNC_SLOTS 1\n  #endif\n  #if PY_VERSION_HEX < 0x02070000\n    #undef CYTHON_USE_PYLONG_INTERNALS\n    #define CYTHON_USE_PYLONG_INTERNALS 0\n  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)\n    #define CYTHON_USE_PYLONG_INTERNALS 1\n  #endif\n  #ifndef CYTHON_USE_PYLIST_INTERNALS\n    #define CYTHON_USE_PYLIST_INTERNALS 1\n  #endif\n  #ifndef CYTHON_USE_UNICODE_INTERNALS\n    #define CYTHON_USE_UNICODE_INTERNALS 1\n  #endif\n  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2\n    #undef CYTHON_USE_UNICODE_WRITER\n    #define CYTHON_USE_UNICODE_WRITER 0\n  #elif !defined(CYTHON_USE_UNICODE_WRITER)\n    #define CYTHON_USE_UNICODE_WRITER 1\n  #endif\n  #ifndef CYTHON_AVOID_BORROWED_REFS\n    #define CYTHON_AVOID_BORROWED_REFS 0\n  #endif\n  #ifndef CYTHON_ASSUME_SAFE_MACROS\n    #define CYTHON_ASSUME_SAFE_MACROS 1\n  #endif\n  #ifndef CYTHON_UNPACK_METHODS\n    #define CYTHON_UNPACK_METHODS 1\n  #endif\n  #if PY_VERSION_HEX >= 0x030B00A4\n    #undef CYTHON_FAST_THREAD_STATE\n    #define CYTHON_FAST_THREAD_STATE 0\n  #elif !defined(CYTHON_FAST_THREAD_STATE)\n    #define CYTHON_FAST_THREAD_STATE 1\n  #endif\n  #ifndef CYTHON_FAST_PYCALL\n    #define CYTHON_FAST_PYCALL (PY_VERSION_HEX < 0x030A0000)\n  #endif\n  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT\n    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)\n  #endif\n  #ifndef CYTHON_USE_TP_FINALIZE\n    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)\n  #endif\n  #ifndef CYTHON_USE_DICT_VERSIONS\n    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)\n  #endif\n  #if PY_VERSION_HEX >= 0x030B00A4\n    #undef CYTHON_USE_EXC_INFO_STACK\n    #define CYTHON_USE_EXC_INFO_STACK 0\n  #elif !defined(CYTHON_USE_EXC_INFO_STACK)\n    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)\n  #endif\n  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC\n    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1\n  #endif\n#endif\n#if !defined(CYTHON_FAST_PYCCALL)\n#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)\n#endif\n#if CYTHON_USE_PYLONG_INTERNALS\n  #if PY_MAJOR_VERSION < 3\n    #include "longintrepr.h"\n  #endif\n  #undef SHIFT\n  #undef BASE\n  #undef MASK\n  #ifdef SIZEOF_VOID_P\n    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };\n  #endif\n#endif\n#ifndef __has_attribute\n  #define __has_attribute(x) 0\n#endif\n#ifndef __has_cpp_attribute\n  #define __has_cpp_attribute(x) 0\n#endif\n#ifndef CYTHON_RESTRICT\n  #if defined(__GNUC__)\n    #define CYTHON_RESTRICT __restrict__\n  #elif defined(_MSC_VER) && _MSC_VER >= 1400\n    #define CYTHON_RESTRICT __restrict\n  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L\n    #define CYTHON_RESTRICT restrict\n  #else\n    #define CYTHON_RESTRICT\n  #endif\n#endif\n#ifndef CYTHON_UNUSED\n# if defined(__GNUC__)\n#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))\n#     define CYTHON_UNUSED __attribute__ ((__unused__))\n#   else\n#     define CYTHON_UNUSED\n#   endif\n# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))\n#   define CYTHON_UNUSED __attribute__ ((__unused__))\n# else\n#   define CYTHON_UNUSED\n# endif\n#endif\n#ifndef CYTHON_MAYBE_UNUSED_VAR\n#  if defined(__cplusplus)\n     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }\n#  else\n#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)\n#  endif\n#endif\n#ifndef CYTHON_NCP_UNUSED\n# if CYTHON_COMPILING_IN_CPYTHON\n#  define CYTHON_NCP_UNUSED\n# else\n#  define CYTHON_NCP_UNUSED CYTHON_UNUSED\n# endif\n#endif\n#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)\n#ifdef _MSC_VER\n    #ifndef _MSC_STDINT_H_\n        #if _MSC_VER < 1300\n           typedef unsigned char     uint8_t;\n           typedef unsigned int      uint32_t;\n        #else\n           typedef unsigned __int8   uint8_t;\n           typedef unsigned __int32  uint32_t;\n        #endif\n    #endif\n#else\n   #include <stdint.h>\n#endif\n#ifndef CYTHON_FALLTHROUGH\n  #if defined(__cplusplus) && __cplusplus >= 201103L\n    #if __has_cpp_attribute(fallthrough)\n      #define CYTHON_FALLTHROUGH [[fallthrough]]\n    #elif __has_cpp_attribute(clang::fallthrough)\n      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]\n    #elif __has_cpp_attribute(gnu::fallthrough)\n      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]\n    #endif\n  #endif\n  #ifndef CYTHON_FALLTHROUGH\n    #if __has_attribute(fallthrough)\n      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))\n    #else\n      #define CYTHON_FALLTHROUGH\n    #endif\n  #endif\n  #if defined(__clang__ ) && defined(__apple_build_version__)\n    #if __apple_build_version__ < 7000000\n      #undef  CYTHON_FALLTHROUGH\n      #define CYTHON_FALLTHROUGH\n    #endif\n  #endif\n#endif\n\n#ifndef CYTHON_INLINE\n  #if defined(__clang__)\n    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))\n  #elif defined(__GNUC__)\n    #define CYTHON_INLINE __inline__\n  #elif defined(_MSC_VER)\n    #define CYTHON_INLINE __inline\n  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L\n    #define CYTHON_INLINE inline\n  #else\n    #define CYTHON_INLINE\n  #endif\n#endif\n\n#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)\n  #define Py_OptimizeFlag 0\n#endif\n#define __PYX_BUILD_PY_SSIZE_T "n"\n#define CYTHON_FORMAT_SSIZE_T "z"\n#if PY_MAJOR_VERSION < 3\n  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"\n  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\\\n          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\n  #define __Pyx_DefaultClassType PyClass_Type\n#else\n  #define __Pyx_BUILTIN_MODULE_NAME "builtins"\n  #define __Pyx_DefaultClassType PyType_Type\n#if PY_VERSION_HEX >= 0x030B00A1\n    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int k, int l, int s, int f,\n                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,\n                                                    PyObject *fv, PyObject *cell, PyObject* fn,\n                                                    PyObject *name, int fline, PyObject *lnos) {\n        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;\n        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *call_result=NULL, *empty=NULL;\n        const char *fn_cstr=NULL;\n        const char *name_cstr=NULL;\n        PyCodeObject* co=NULL;\n        PyObject *type, *value, *traceback;\n        PyErr_Fetch(&type, &value, &traceback);\n        if (!(kwds=PyDict_New())) goto end;\n        if (!(argcount=PyLong_FromLong(a))) goto end;\n        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;\n        if (!(posonlyargcount=PyLong_FromLong(0))) goto end;\n        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;\n        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;\n        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;\n        if (!(nlocals=PyLong_FromLong(l))) goto end;\n        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;\n        if (!(stacksize=PyLong_FromLong(s))) goto end;\n        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;\n        if (!(flags=PyLong_FromLong(f))) goto end;\n        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;\n        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;\n        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;\n        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;\n        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;\n        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;\n        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;\n        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;\n        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;\n        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;\n        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;\n        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto cleanup_code_too;\n        if (!(empty = PyTuple_New(0))) goto cleanup_code_too; // unfortunately __pyx_empty_tuple isn\'t available here\n        if (!(call_result = PyObject_Call(replace, empty, kwds))) goto cleanup_code_too;\n        Py_XDECREF((PyObject*)co);\n        co = (PyCodeObject*)call_result;\n        call_result = NULL;\n        if (0) {\n            cleanup_code_too:\n            Py_XDECREF((PyObject*)co);\n            co = NULL;\n        }\n        end:\n        Py_XDECREF(kwds);\n        Py_XDECREF(argcount);\n        Py_XDECREF(posonlyargcount);\n        Py_XDECREF(kwonlyargcount);\n        Py_XDECREF(nlocals);\n        Py_XDECREF(stacksize);\n        Py_XDECREF(replace);\n        Py_XDECREF(call_result);\n        Py_XDECREF(empty);\n        if (type) {\n            PyErr_Restore(type, value, traceback);\n        }\n        return co;\n    }\n#else\n  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\\\n          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\n#endif\n  #define __Pyx_DefaultClassType PyType_Type\n#endif\n#ifndef Py_TPFLAGS_CHECKTYPES\n  #define Py_TPFLAGS_CHECKTYPES 0\n#endif\n#ifndef Py_TPFLAGS_HAVE_INDEX\n  #define Py_TPFLAGS_HAVE_INDEX 0\n#endif\n#ifndef Py_TPFLAGS_HAVE_NEWBUFFER\n  #define Py_TPFLAGS_HAVE_NEWBUFFER 0\n#endif\n#ifndef Py_TPFLAGS_HAVE_FINALIZE\n  #define Py_TPFLAGS_HAVE_FINALIZE 0\n#endif\n#ifndef METH_STACKLESS\n  #define METH_STACKLESS 0\n#endif\n#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)\n  #ifndef METH_FASTCALL\n     #define METH_FASTCALL 0x80\n  #endif\n  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);\n  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,\n                                                          Py_ssize_t nargs, PyObject *kwnames);\n#else\n  #define __Pyx_PyCFunctionFast _PyCFunctionFast\n  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords\n#endif\n#if CYTHON_FAST_PYCCALL\n#define __Pyx_PyFastCFunction_Check(func)\\\n    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))\n#else\n#define __Pyx_PyFastCFunction_Check(func) 0\n#endif\n#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)\n  #define PyObject_Malloc(s)   PyMem_Malloc(s)\n  #define PyObject_Free(p)     PyMem_Free(p)\n  #define PyObject_Realloc(p)  PyMem_Realloc(p)\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1\n  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)\n  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)\n  #define PyMem_RawFree(p)             PyMem_Free(p)\n#endif\n#if CYTHON_COMPILING_IN_PYSTON\n  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)\n  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)\n#else\n  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)\n  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)\n#endif\n#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000\n  #define __Pyx_PyThreadState_Current PyThreadState_GET()\n#elif PY_VERSION_HEX >= 0x03060000\n  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()\n#elif PY_VERSION_HEX >= 0x03000000\n  #define __Pyx_PyThreadState_Current PyThreadState_GET()\n#else\n  #define __Pyx_PyThreadState_Current _PyThreadState_Current\n#endif\n#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)\n#include "pythread.h"\n#define Py_tss_NEEDS_INIT 0\ntypedef int Py_tss_t;\nstatic CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {\n  *key = PyThread_create_key();\n  return 0;\n}\nstatic CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {\n  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));\n  *key = Py_tss_NEEDS_INIT;\n  return key;\n}\nstatic CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {\n  PyObject_Free(key);\n}\nstatic CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {\n  return *key != Py_tss_NEEDS_INIT;\n}\nstatic CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {\n  PyThread_delete_key(*key);\n  *key = Py_tss_NEEDS_INIT;\n}\nstatic CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {\n  return PyThread_set_key_value(*key, value);\n}\nstatic CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {\n  return PyThread_get_key_value(*key);\n}\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)\n#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))\n#else\n#define __Pyx_PyDict_NewPresized(n)  PyDict_New()\n#endif\n#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION\n  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)\n  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)\n#else\n  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)\n  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS\n#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)\n#else\n#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)\n#endif\n#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)\n  #define CYTHON_PEP393_ENABLED 1\n  #if PY_VERSION_HEX >= 0x030C0000\n    #define __Pyx_PyUnicode_READY(op)       (0)\n  #else\n    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\\\n                                                0 : _PyUnicode_Ready((PyObject *)(op)))\n  #endif\n  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)\n  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)\n  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)\n  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)\n  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)\n  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)\n  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)\n  #if PY_VERSION_HEX >= 0x030C0000\n    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))\n  #else\n    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000\n    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))\n    #else\n    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))\n    #endif\n  #endif\n#else\n  #define CYTHON_PEP393_ENABLED 0\n  #define PyUnicode_1BYTE_KIND  1\n  #define PyUnicode_2BYTE_KIND  2\n  #define PyUnicode_4BYTE_KIND  4\n  #define __Pyx_PyUnicode_READY(op)       (0)\n  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)\n  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))\n  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)\n  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))\n  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))\n  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))\n  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)\n  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))\n#endif\n#if CYTHON_COMPILING_IN_PYPY\n  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)\n  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)\n#else\n  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)\n  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\\\n      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))\n#endif\n#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)\n  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)\n#endif\n#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)\n  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)\n#endif\n#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)\n  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)\n#endif\n#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))\n#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))\n#if PY_MAJOR_VERSION >= 3\n  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)\n#else\n  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)\n#endif\n#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)\n  #define PyObject_ASCII(o)            PyObject_Repr(o)\n#endif\n#if PY_MAJOR_VERSION >= 3\n  #define PyBaseString_Type            PyUnicode_Type\n  #define PyStringObject               PyUnicodeObject\n  #define PyString_Type                PyUnicode_Type\n  #define PyString_Check               PyUnicode_Check\n  #define PyString_CheckExact          PyUnicode_CheckExact\n#ifndef PyObject_Unicode\n  #define PyObject_Unicode             PyObject_Str\n#endif\n#endif\n#if PY_MAJOR_VERSION >= 3\n  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)\n  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)\n#else\n  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))\n  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))\n#endif\n#ifndef PySet_CheckExact\n  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)\n#endif\n#if PY_VERSION_HEX >= 0x030900A4\n  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)\n  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)\n#else\n  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)\n  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)\n#endif\n#if CYTHON_ASSUME_SAFE_MACROS\n  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)\n#else\n  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)\n#endif\n#if PY_MAJOR_VERSION >= 3\n  #define PyIntObject                  PyLongObject\n  #define PyInt_Type                   PyLong_Type\n  #define PyInt_Check(op)              PyLong_Check(op)\n  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)\n  #define PyInt_FromString             PyLong_FromString\n  #define PyInt_FromUnicode            PyLong_FromUnicode\n  #define PyInt_FromLong               PyLong_FromLong\n  #define PyInt_FromSize_t             PyLong_FromSize_t\n  #define PyInt_FromSsize_t            PyLong_FromSsize_t\n  #define PyInt_AsLong                 PyLong_AsLong\n  #define PyInt_AS_LONG                PyLong_AS_LONG\n  #define PyInt_AsSsize_t              PyLong_AsSsize_t\n  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask\n  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask\n  #define PyNumber_Int                 PyNumber_Long\n#endif\n#if PY_MAJOR_VERSION >= 3\n  #define PyBoolObject                 PyLongObject\n#endif\n#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY\n  #ifndef PyUnicode_InternFromString\n    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)\n  #endif\n#endif\n#if PY_VERSION_HEX < 0x030200A4\n  typedef long Py_hash_t;\n  #define __Pyx_PyInt_FromHash_t PyInt_FromLong\n  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t\n#else\n  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t\n  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t\n#endif\n#if PY_MAJOR_VERSION >= 3\n  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))\n#else\n  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)\n#endif\n#if CYTHON_USE_ASYNC_SLOTS\n  #if PY_VERSION_HEX >= 0x030500B1\n    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods\n    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)\n  #else\n    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))\n  #endif\n#else\n  #define __Pyx_PyType_AsAsync(obj) NULL\n#endif\n#ifndef __Pyx_PyAsyncMethodsStruct\n    typedef struct {\n        unaryfunc am_await;\n        unaryfunc am_aiter;\n        unaryfunc am_anext;\n    } __Pyx_PyAsyncMethodsStruct;\n#endif\n\n#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)\n  #if !defined(_USE_MATH_DEFINES)\n    #define _USE_MATH_DEFINES\n  #endif\n#endif\n#include <math.h>\n#ifdef NAN\n#define __PYX_NAN() ((float) NAN)\n#else\nstatic CYTHON_INLINE float __PYX_NAN() {\n  float value;\n  memset(&value, 0xFF, sizeof(value));\n  return value;\n}\n#endif\n#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)\n#define __Pyx_truncl trunc\n#else\n#define __Pyx_truncl truncl\n#endif\n\n#define __PYX_MARK_ERR_POS(f_index, lineno) \\\n    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }\n#define __PYX_ERR(f_index, lineno, Ln_error) \\\n    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }\n\n#ifndef __PYX_EXTERN_C\n  #ifdef __cplusplus\n    #define __PYX_EXTERN_C extern "C"\n  #else\n    #define __PYX_EXTERN_C extern\n  #endif\n#endif\n\n#define __PYX_HAVE__source\n#define __PYX_HAVE_API__source\n/* Early includes */\n#ifdef _OPENMP\n#include <omp.h>\n#endif /* _OPENMP */\n\n#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)\n#define CYTHON_WITHOUT_ASSERTIONS\n#endif\n\ntypedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;\n                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;\n\n#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0\n#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0\n#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)\n#define __PYX_DEFAULT_STRING_ENCODING ""\n#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString\n#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize\n#define __Pyx_uchar_cast(c) ((unsigned char)c)\n#define __Pyx_long_cast(x) ((long)x)\n#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\\\n    (sizeof(type) < sizeof(Py_ssize_t))  ||\\\n    (sizeof(type) > sizeof(Py_ssize_t) &&\\\n          likely(v < (type)PY_SSIZE_T_MAX ||\\\n                 v == (type)PY_SSIZE_T_MAX)  &&\\\n          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\\\n                                v == (type)PY_SSIZE_T_MIN)))  ||\\\n    (sizeof(type) == sizeof(Py_ssize_t) &&\\\n          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\\\n                               v == (type)PY_SSIZE_T_MAX)))  )\nstatic CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {\n    return (size_t) i < (size_t) limit;\n}\n#if defined (__cplusplus) && __cplusplus >= 201103L\n    #include <cstdlib>\n    #define __Pyx_sst_abs(value) std::abs(value)\n#elif SIZEOF_INT >= SIZEOF_SIZE_T\n    #define __Pyx_sst_abs(value) abs(value)\n#elif SIZEOF_LONG >= SIZEOF_SIZE_T\n    #define __Pyx_sst_abs(value) labs(value)\n#elif defined (_MSC_VER)\n    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))\n#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L\n    #define __Pyx_sst_abs(value) llabs(value)\n#elif defined (__GNUC__)\n    #define __Pyx_sst_abs(value) __builtin_llabs(value)\n#else\n    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)\n#endif\nstatic CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);\nstatic CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);\n#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))\n#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)\n#define __Pyx_PyBytes_FromString        PyBytes_FromString\n#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize\nstatic CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);\n#if PY_MAJOR_VERSION < 3\n    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString\n    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize\n#else\n    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString\n    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize\n#endif\n#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))\n#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))\n#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))\n#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))\n#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))\n#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))\n#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)\n#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)\n#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)\n#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)\n#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)\nstatic CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {\n    const Py_UNICODE *u_end = u;\n    while (*u_end++) ;\n    return (size_t)(u_end - u - 1);\n}\n#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))\n#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode\n#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode\n#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)\n#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)\nstatic CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);\nstatic CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);\nstatic CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);\nstatic CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);\n#define __Pyx_PySequence_Tuple(obj)\\\n    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))\nstatic CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);\nstatic CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);\nstatic CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);\n#if CYTHON_ASSUME_SAFE_MACROS\n#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))\n#else\n#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)\n#endif\n#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))\n#if PY_MAJOR_VERSION >= 3\n#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))\n#else\n#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))\n#endif\n#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))\n#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII\nstatic int __Pyx_sys_getdefaultencoding_not_ascii;\nstatic int __Pyx_init_sys_getdefaultencoding_params(void) {\n    PyObject* sys;\n    PyObject* default_encoding = NULL;\n    PyObject* ascii_chars_u = NULL;\n    PyObject* ascii_chars_b = NULL;\n    const char* default_encoding_c;\n    sys = PyImport_ImportModule("sys");\n    if (!sys) goto bad;\n    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);\n    Py_DECREF(sys);\n    if (!default_encoding) goto bad;\n    default_encoding_c = PyBytes_AsString(default_encoding);\n    if (!default_encoding_c) goto bad;\n    if (strcmp(default_encoding_c, "ascii") == 0) {\n        __Pyx_sys_getdefaultencoding_not_ascii = 0;\n    } else {\n        char ascii_chars[128];\n        int c;\n        for (c = 0; c < 128; c++) {\n            ascii_chars[c] = c;\n        }\n        __Pyx_sys_getdefaultencoding_not_ascii = 1;\n        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);\n        if (!ascii_chars_u) goto bad;\n        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);\n        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {\n            PyErr_Format(\n                PyExc_ValueError,\n                "This module compiled with c_string_encoding=ascii, but default encoding \'%.200s\' is not a superset of ascii.",\n                default_encoding_c);\n            goto bad;\n        }\n        Py_DECREF(ascii_chars_u);\n        Py_DECREF(ascii_chars_b);\n    }\n    Py_DECREF(default_encoding);\n    return 0;\nbad:\n    Py_XDECREF(default_encoding);\n    Py_XDECREF(ascii_chars_u);\n    Py_XDECREF(ascii_chars_b);\n    return -1;\n}\n#endif\n#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3\n#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)\n#else\n#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)\n#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT\nstatic char* __PYX_DEFAULT_STRING_ENCODING;\nstatic int __Pyx_init_sys_getdefaultencoding_params(void) {\n    PyObject* sys;\n    PyObject* default_encoding = NULL;\n    char* default_encoding_c;\n    sys = PyImport_ImportModule("sys");\n    if (!sys) goto bad;\n    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);\n    Py_DECREF(sys);\n    if (!default_encoding) goto bad;\n    default_encoding_c = PyBytes_AsString(default_encoding);\n    if (!default_encoding_c) goto bad;\n    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);\n    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;\n    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);\n    Py_DECREF(default_encoding);\n    return 0;\nbad:\n    Py_XDECREF(default_encoding);\n    return -1;\n}\n#endif\n#endif\n\n\n/* Test for GCC > 2.95 */\n#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))\n  #define likely(x)   __builtin_expect(!!(x), 1)\n  #define unlikely(x) __builtin_expect(!!(x), 0)\n#else /* !__GNUC__ or GCC < 2.95 */\n  #define likely(x)   (x)\n  #define unlikely(x) (x)\n#endif /* __GNUC__ */\nstatic CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }\n\nstatic PyObject *__pyx_m = NULL;\nstatic PyObject *__pyx_d;\nstatic PyObject *__pyx_b;\nstatic PyObject *__pyx_cython_runtime = NULL;\nstatic PyObject *__pyx_empty_tuple;\nstatic PyObject *__pyx_empty_bytes;\nstatic PyObject *__pyx_empty_unicode;\nstatic int __pyx_lineno;\nstatic int __pyx_clineno = 0;\nstatic const char * __pyx_cfilenm= __FILE__;\nstatic const char *__pyx_filename;\n\n\nstatic const char *__pyx_f[] = {\n  "source.py",\n};\n\n/*--- Type declarations ---*/\nstruct __pyx_obj_6source___pyx_scope_struct__genexpr;\nstruct __pyx_obj_6source___pyx_scope_struct_1_genexpr;\nstruct __pyx_obj_6source___pyx_scope_struct_2_genexpr;\nstruct __pyx_obj_6source___pyx_scope_struct_3_genexpr;\n\n\nstruct __pyx_obj_6source___pyx_scope_struct__genexpr {\n  PyObject_HEAD\n  long __pyx_v_i;\n};\n\n\n\nstruct __pyx_obj_6source___pyx_scope_struct_1_genexpr {\n  PyObject_HEAD\n  long __pyx_v_i;\n};\n\n\n\nstruct __pyx_obj_6source___pyx_scope_struct_2_genexpr {\n  PyObject_HEAD\n  long __pyx_v_i;\n};\n\n\n\nstruct __pyx_obj_6source___pyx_scope_struct_3_genexpr {\n  PyObject_HEAD\n  long __pyx_v_i;\n};\n\n\n/* --- Runtime support code (head) --- */\n/* Refnanny.proto */\n#ifndef CYTHON_REFNANNY\n  #define CYTHON_REFNANNY 0\n#endif\n#if CYTHON_REFNANNY\n  typedef struct {\n    void (*INCREF)(void*, PyObject*, int);\n    void (*DECREF)(void*, PyObject*, int);\n    void (*GOTREF)(void*, PyObject*, int);\n    void (*GIVEREF)(void*, PyObject*, int);\n    void* (*SetupContext)(const char*, int, const char*);\n    void (*FinishContext)(void**);\n  } __Pyx_RefNannyAPIStruct;\n  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;\n  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);\n  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;\n#ifdef WITH_THREAD\n  #define __Pyx_RefNannySetupContext(name, acquire_gil)\\\n          if (acquire_gil) {\\\n              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\\\n              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\\\n              PyGILState_Release(__pyx_gilstate_save);\\\n          } else {\\\n              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\\\n          }\n#else\n  #define __Pyx_RefNannySetupContext(name, acquire_gil)\\\n          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)\n#endif\n  #define __Pyx_RefNannyFinishContext()\\\n          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)\n  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)\n  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)\n  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)\n  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)\n  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)\n  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)\n  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)\n  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)\n#else\n  #define __Pyx_RefNannyDeclarations\n  #define __Pyx_RefNannySetupContext(name, acquire_gil)\n  #define __Pyx_RefNannyFinishContext()\n  #define __Pyx_INCREF(r) Py_INCREF(r)\n  #define __Pyx_DECREF(r) Py_DECREF(r)\n  #define __Pyx_GOTREF(r)\n  #define __Pyx_GIVEREF(r)\n  #define __Pyx_XINCREF(r) Py_XINCREF(r)\n  #define __Pyx_XDECREF(r) Py_XDECREF(r)\n  #define __Pyx_XGOTREF(r)\n  #define __Pyx_XGIVEREF(r)\n#endif\n#define __Pyx_XDECREF_SET(r, v) do {\\\n        PyObject *tmp = (PyObject *) r;\\\n        r = v; __Pyx_XDECREF(tmp);\\\n    } while (0)\n#define __Pyx_DECREF_SET(r, v) do {\\\n        PyObject *tmp = (PyObject *) r;\\\n        r = v; __Pyx_DECREF(tmp);\\\n    } while (0)\n#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)\n#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)\n\n/* PyObjectGetAttrStr.proto */\n#if CYTHON_USE_TYPE_SLOTS\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);\n#else\n#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)\n#endif\n\n/* GetBuiltinName.proto */\nstatic PyObject *__Pyx_GetBuiltinName(PyObject *name);\n\n/* ListCompAppend.proto */\n#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS\nstatic CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {\n    PyListObject* L = (PyListObject*) list;\n    Py_ssize_t len = Py_SIZE(list);\n    if (likely(L->allocated > len)) {\n        Py_INCREF(x);\n        PyList_SET_ITEM(list, len, x);\n        __Pyx_SET_SIZE(list, len + 1);\n        return 0;\n    }\n    return PyList_Append(list, x);\n}\n#else\n#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)\n#endif\n\n/* PyDictVersioning.proto */\n#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS\n#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)\n#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)\n#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\\\n    (version_var) = __PYX_GET_DICT_VERSION(dict);\\\n    (cache_var) = (value);\n#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\\\n    static PY_UINT64_T __pyx_dict_version = 0;\\\n    static PyObject *__pyx_dict_cached_value = NULL;\\\n    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\\\n        (VAR) = __pyx_dict_cached_value;\\\n    } else {\\\n        (VAR) = __pyx_dict_cached_value = (LOOKUP);\\\n        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\\\n    }\\\n}\nstatic CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);\nstatic CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);\nstatic CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);\n#else\n#define __PYX_GET_DICT_VERSION(dict)  (0)\n#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\n#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);\n#endif\n\n/* GetModuleGlobalName.proto */\n#if CYTHON_USE_DICT_VERSIONS\n#define __Pyx_GetModuleGlobalName(var, name)  do {\\\n    static PY_UINT64_T __pyx_dict_version = 0;\\\n    static PyObject *__pyx_dict_cached_value = NULL;\\\n    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\\\n        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\\\n        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\\\n} while(0)\n#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\\\n    PY_UINT64_T __pyx_dict_version;\\\n    PyObject *__pyx_dict_cached_value;\\\n    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\\\n} while(0)\nstatic PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);\n#else\n#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)\n#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)\nstatic CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);\n#endif\n\n/* PyCFunctionFastCall.proto */\n#if CYTHON_FAST_PYCCALL\nstatic CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);\n#else\n#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)\n#endif\n\n/* PyFunctionFastCall.proto */\n#if CYTHON_FAST_PYCALL\n#define __Pyx_PyFunction_FastCall(func, args, nargs)\\\n    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)\n#if 1 || PY_VERSION_HEX < 0x030600B1\nstatic PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);\n#else\n#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)\n#endif\n#define __Pyx_BUILD_ASSERT_EXPR(cond)\\\n    (sizeof(char [1 - 2*!(cond)]) - 1)\n#ifndef Py_MEMBER_SIZE\n#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)\n#endif\n#if CYTHON_FAST_PYCALL\n  static size_t __pyx_pyframe_localsplus_offset = 0;\n  #include "frameobject.h"\n#if PY_VERSION_HEX >= 0x030b00a6\n  #ifndef Py_BUILD_CORE\n    #define Py_BUILD_CORE 1\n  #endif\n  #include "internal/pycore_frame.h"\n#endif\n  #define __Pxy_PyFrame_Initialize_Offsets()\\\n    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\\\n     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))\n  #define __Pyx_PyFrame_GetLocalsplus(frame)\\\n    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))\n#endif // CYTHON_FAST_PYCALL\n#endif\n\n/* PyObjectCall.proto */\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);\n#else\n#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)\n#endif\n\n/* PyObjectCall2Args.proto */\nstatic CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);\n\n/* PyObjectCallMethO.proto */\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);\n#endif\n\n/* PyObjectCallOneArg.proto */\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);\n\n/* PyObjectCallNoArg.proto */\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);\n#else\n#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)\n#endif\n\n/* IncludeStringH.proto */\n#include <string.h>\n\n/* PyObject_GenericGetAttrNoDict.proto */\n#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);\n#else\n#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr\n#endif\n\n/* Import.proto */\nstatic PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);\n\n/* ImportFrom.proto */\nstatic PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);\n\n/* FetchCommonType.proto */\nstatic PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);\n\n/* CythonFunctionShared.proto */\n#define __Pyx_CyFunction_USED 1\n#define __Pyx_CYFUNCTION_STATICMETHOD  0x01\n#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02\n#define __Pyx_CYFUNCTION_CCLASS        0x04\n#define __Pyx_CyFunction_GetClosure(f)\\\n    (((__pyx_CyFunctionObject *) (f))->func_closure)\n#define __Pyx_CyFunction_GetClassObj(f)\\\n    (((__pyx_CyFunctionObject *) (f))->func_classobj)\n#define __Pyx_CyFunction_Defaults(type, f)\\\n    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))\n#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\\\n    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)\ntypedef struct {\n    PyCFunctionObject func;\n#if PY_VERSION_HEX < 0x030500A0\n    PyObject *func_weakreflist;\n#endif\n    PyObject *func_dict;\n    PyObject *func_name;\n    PyObject *func_qualname;\n    PyObject *func_doc;\n    PyObject *func_globals;\n    PyObject *func_code;\n    PyObject *func_closure;\n    PyObject *func_classobj;\n    void *defaults;\n    int defaults_pyobjects;\n    size_t defaults_size;  // used by FusedFunction for copying defaults\n    int flags;\n    PyObject *defaults_tuple;\n    PyObject *defaults_kwdict;\n    PyObject *(*defaults_getter)(PyObject *);\n    PyObject *func_annotations;\n} __pyx_CyFunctionObject;\nstatic PyTypeObject *__pyx_CyFunctionType = 0;\n#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))\nstatic PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,\n                                      int flags, PyObject* qualname,\n                                      PyObject *self,\n                                      PyObject *module, PyObject *globals,\n                                      PyObject* code);\nstatic CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,\n                                                         size_t size,\n                                                         int pyobjects);\nstatic CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,\n                                                            PyObject *tuple);\nstatic CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,\n                                                             PyObject *dict);\nstatic CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,\n                                                              PyObject *dict);\nstatic int __pyx_CyFunction_init(void);\n\n/* CythonFunction.proto */\nstatic PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,\n                                      int flags, PyObject* qualname,\n                                      PyObject *closure,\n                                      PyObject *module, PyObject *globals,\n                                      PyObject* code);\n\n/* PyObjectFormatSimple.proto */\n#if CYTHON_COMPILING_IN_PYPY\n    #define __Pyx_PyObject_FormatSimple(s, f) (\\\n        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\\\n        PyObject_Format(s, f))\n#elif PY_MAJOR_VERSION < 3\n    #define __Pyx_PyObject_FormatSimple(s, f) (\\\n        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\\\n        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\\\n        PyObject_Format(s, f))\n#elif CYTHON_USE_TYPE_SLOTS\n    #define __Pyx_PyObject_FormatSimple(s, f) (\\\n        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\\\n        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_str(s) :\\\n        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_str(s) :\\\n        PyObject_Format(s, f))\n#else\n    #define __Pyx_PyObject_FormatSimple(s, f) (\\\n        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\\\n        PyObject_Format(s, f))\n#endif\n\n/* JoinPyUnicode.proto */\nstatic PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,\n                                      Py_UCS4 max_char);\n\n/* BytesEquals.proto */\nstatic CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);\n\n/* UnicodeEquals.proto */\nstatic CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);\n\n/* PySequenceContains.proto */\nstatic CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {\n    int result = PySequence_Contains(seq, item);\n    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));\n}\n\n/* PyIntBinop.proto */\n#if !CYTHON_COMPILING_IN_PYPY\nstatic PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);\n#else\n#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\\\n    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))\n#endif\n\n/* DictGetItem.proto */\n#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY\nstatic PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);\n#define __Pyx_PyObject_Dict_GetItem(obj, name)\\\n    (likely(PyDict_CheckExact(obj)) ?\\\n     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))\n#else\n#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)\n#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)\n#endif\n\n/* PyThreadStateGet.proto */\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;\n#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;\n#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type\n#else\n#define __Pyx_PyThreadState_declare\n#define __Pyx_PyThreadState_assign\n#define __Pyx_PyErr_Occurred()  PyErr_Occurred()\n#endif\n\n/* PyErrFetchRestore.proto */\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)\n#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)\n#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)\n#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)\n#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)\nstatic CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);\nstatic CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);\n#if CYTHON_COMPILING_IN_CPYTHON\n#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))\n#else\n#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)\n#endif\n#else\n#define __Pyx_PyErr_Clear() PyErr_Clear()\n#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)\n#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)\n#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)\n#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)\n#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)\n#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)\n#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)\n#endif\n\n/* CLineInTraceback.proto */\n#ifdef CYTHON_CLINE_IN_TRACEBACK\n#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)\n#else\nstatic int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);\n#endif\n\n/* CodeObjectCache.proto */\ntypedef struct {\n    PyCodeObject* code_object;\n    int code_line;\n} __Pyx_CodeObjectCacheEntry;\nstruct __Pyx_CodeObjectCache {\n    int count;\n    int max_count;\n    __Pyx_CodeObjectCacheEntry* entries;\n};\nstatic struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};\nstatic int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);\nstatic PyCodeObject *__pyx_find_code_object(int code_line);\nstatic void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);\n\n/* AddTraceback.proto */\nstatic void __Pyx_AddTraceback(const char *funcname, int c_line,\n                               int py_line, const char *filename);\n\n/* GCCDiagnostics.proto */\n#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))\n#define __Pyx_HAS_GCC_DIAGNOSTIC\n#endif\n\n/* CIntFromPy.proto */\nstatic CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);\n\n/* CIntToPy.proto */\nstatic CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);\n\n/* CIntFromPy.proto */\nstatic CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);\n\n/* FastTypeChecks.proto */\n#if CYTHON_COMPILING_IN_CPYTHON\n#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)\nstatic CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);\n#else\n#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)\n#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)\n#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))\n#endif\n#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)\n\n/* RaiseException.proto */\nstatic void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);\n\n/* GetTopmostException.proto */\n#if CYTHON_USE_EXC_INFO_STACK\nstatic _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);\n#endif\n\n/* SaveResetException.proto */\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)\nstatic CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);\n#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)\nstatic CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);\n#else\n#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)\n#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)\n#endif\n\n/* SwapException.proto */\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)\nstatic CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);\n#else\nstatic CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);\n#endif\n\n/* PyObjectGetMethod.proto */\nstatic int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);\n\n/* PyObjectCallMethod1.proto */\nstatic PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);\n\n/* CoroutineBase.proto */\ntypedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyThreadState *, PyObject *);\n#if CYTHON_USE_EXC_INFO_STACK\n#define __Pyx_ExcInfoStruct  _PyErr_StackItem\n#else\ntypedef struct {\n    PyObject *exc_type;\n    PyObject *exc_value;\n    PyObject *exc_traceback;\n} __Pyx_ExcInfoStruct;\n#endif\ntypedef struct {\n    PyObject_HEAD\n    __pyx_coroutine_body_t body;\n    PyObject *closure;\n    __Pyx_ExcInfoStruct gi_exc_state;\n    PyObject *gi_weakreflist;\n    PyObject *classobj;\n    PyObject *yieldfrom;\n    PyObject *gi_name;\n    PyObject *gi_qualname;\n    PyObject *gi_modulename;\n    PyObject *gi_code;\n    PyObject *gi_frame;\n    int resume_label;\n    char is_running;\n} __pyx_CoroutineObject;\nstatic __pyx_CoroutineObject *__Pyx__Coroutine_New(\n    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,\n    PyObject *name, PyObject *qualname, PyObject *module_name);\nstatic __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(\n            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,\n            PyObject *name, PyObject *qualname, PyObject *module_name);\nstatic CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);\nstatic int __Pyx_Coroutine_clear(PyObject *self);\nstatic PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);\nstatic PyObject *__Pyx_Coroutine_Close(PyObject *self);\nstatic PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);\n#if CYTHON_USE_EXC_INFO_STACK\n#define __Pyx_Coroutine_SwapException(self)\n#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)\n#else\n#define __Pyx_Coroutine_SwapException(self) {\\\n    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\\\n    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\\\n    }\n#define __Pyx_Coroutine_ResetAndClearException(self) {\\\n    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\\\n    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\\\n    }\n#endif\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\\\n    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)\n#else\n#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\\\n    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)\n#endif\nstatic int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);\nstatic CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);\n\n/* PatchModuleWithCoroutine.proto */\nstatic PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);\n\n/* PatchGeneratorABC.proto */\nstatic int __Pyx_patch_abc(void);\n\n/* Generator.proto */\n#define __Pyx_Generator_USED\nstatic PyTypeObject *__pyx_GeneratorType = 0;\n#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)\n#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\\\n    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)\nstatic PyObject *__Pyx_Generator_Next(PyObject *self);\nstatic int __pyx_Generator_init(void);\n\n/* CStringEquals.proto */\nstatic CYTHON_INLINE int __Pyx_StrEq(const char *, const char *);\n\n/* CheckBinaryVersion.proto */\nstatic int __Pyx_check_binary_version(void);\n\n/* InitStrings.proto */\nstatic int __Pyx_InitStrings(__Pyx_StringTabEntry *t);\n\n\n/* Module declarations from \'source\' */\nstatic PyTypeObject *__pyx_ptype_6source___pyx_scope_struct__genexpr = 0;\nstatic PyTypeObject *__pyx_ptype_6source___pyx_scope_struct_1_genexpr = 0;\nstatic PyTypeObject *__pyx_ptype_6source___pyx_scope_struct_2_genexpr = 0;\nstatic PyTypeObject *__pyx_ptype_6source___pyx_scope_struct_3_genexpr = 0;\n#define __Pyx_MODULE_NAME "source"\nextern int __pyx_module_is_main_source;\nint __pyx_module_is_main_source = 0;\n\n/* Implementation of \'source\' */\nstatic PyObject *__pyx_builtin_input;\nstatic PyObject *__pyx_builtin_print;\nstatic PyObject *__pyx_builtin_exit;\nstatic PyObject *__pyx_builtin_range;\nstatic const char __pyx_k_[] = "\\n";\nstatic const char __pyx_k_1[] = "1";\nstatic const char __pyx_k_2[] = "2";\nstatic const char __pyx_k_3[] = "3";\nstatic const char __pyx_k_4[] = "4";\nstatic const char __pyx_k_B[] = "B";\nstatic const char __pyx_k_E[] = "E";\nstatic const char __pyx_k_G[] = "G";\nstatic const char __pyx_k_P[] = "P";\nstatic const char __pyx_k_R[] = "R";\nstatic const char __pyx_k_S[] = "S";\nstatic const char __pyx_k_W[] = "W";\nstatic const char __pyx_k_X[] = "X";\nstatic const char __pyx_k_Y[] = "Y";\nstatic const char __pyx_k_Z[] = "Z";\nstatic const char __pyx_k_c[] = "c";\nstatic const char __pyx_k_s[] = "s";\nstatic const char __pyx_k_t[] = "t";\nstatic const char __pyx_k_01[] = "01";\nstatic const char __pyx_k_02[] = "02";\nstatic const char __pyx_k_03[] = "03";\nstatic const char __pyx_k_04[] = "04";\nstatic const char __pyx_k_0m[] = "\\033[0m";\nstatic const char __pyx_k_10[] = "10";\nstatic const char __pyx_k_20[] = "20";\nstatic const char __pyx_k_SK[] = "SK";\nstatic const char __pyx_k__3[] = "";\nstatic const char __pyx_knstatic const char __pyx_k__7[] = "*";\nstatic const char __pyx_k_id[] = "id";\nstatic const char __pyx_k_os[] = "os";\nstatic const char __pyx_k_rn[] = "rn";\nstatic const char __pyx_k_100[] = "100";\nstatic const char __pyx_k_35m[] = "\\033[35m";\nstatic const char __pyx_k_95m[] = "\\033[95m\\n\\n    #\\n   # #   #####  ####   ####  #####  #    #\\n  #   #    #   #      #      #    # #   #\\n #     #   #    ####   ####  #    # ####\\n #######   #        #      # #####  #  #\\n #     #   #   #    # #    # #   #  #   #\\n #     #   #    ####   ####  #    # #    #\\n\\n\\n";\nstatic const char __pyx_k_RED[] = "RED";\nstatic const char __pyx_k__22[] = "+-------------------------------------------------+";\nstatic const char __pyx_k__24[] = "====================================";\nstatic const char __pyx_k__25[] = "[";\nstatic const char __pyx_k__26[] = "] ";\nstatic const char __pyx_k__27[] = "$";\nstatic const char __pyx_k__28[] = "\\342\\210\\232";\nstatic const char __pyx_k__29[] = "==> ";\nstatic const char __pyx_k__31[] = " ";\nstatic const char __pyx_k__32[] = "| ";\nstatic const char __pyx_k_add[] = "add";\nstatic const char __pyx_k_api[] = "api";\nstatic const char __pyx_k_fol[] = "fol";\nstatic const char __pyx_k_key[] = "key";\nstatic const char __pyx_k_oid[] = "oid";\nstatic const char __pyx_k_pss[] = "pss";\nstatic const char __pyx_k_sys[] = "sys";\nstatic const char __pyx_k_url[] = "url";\nstatic const char __pyx_k_yso[] = "yso";\nstatic const char __pyx_k_BLUE[] = "BLUE";\nstatic const char __pyx_k_Fore[] = "Fore";\nstatic const char __pyx_k_Send[] = "Send ";\nstatic const char __pyx_k_args[] = "args";\nstatic const char __pyx_k_cout[] = "cout";\nstatic const char __pyx_k_data[] = "data";\nstatic const char __pyx_k_exit[] = "exit";\nstatic const char __pyx_k_json[] = "json";\nstatic const char __pyx_k_link[] = "link";\nstatic const char __pyx_k_logo[] = "logo";\nstatic const char __pyx_k_main[] = "__main__";\nstatic const char __pyx_k_name[] = "__name__";\nstatic const char __pyx_k_post[] = "post";\nstatic const char __pyx_k_send[] = "send";\nstatic const char __pyx_k_sped[] = "sped";\nstatic const char __pyx_k_test[] = "__test__";\nstatic const char __pyx_k_text[] = "text";\nstatic const char __pyx_k_time[] = "time";\nstatic const char __pyx_k_urlm[] = "urlm";\nstatic const char __pyx_k_user[] = "user";\nstatic const char __pyx_k_xone[] = "xone";\nstatic const char __pyx_k_1_31m[] = "\\033[1;31m";\nstatic const char __pyx_k_1_32m[] = "\\033[1;32m";\nstatic const char __pyx_k_1_33m[] = "\\033[1;33m";\nstatic const char __pyx_k_1_36m[] = "\\033[1;36m";\nstatic const char __pyx_k_1_91m[] = "\\033[1;91m";\nstatic const char __pyx_k_1_92m[] = "\\033[1;92m";\nstatic const char __pyx_k_2_36m[] = "\\033[2;36m";\nstatic const char __pyx_k_95m_2[] = "\\033[95m+-------------------------------------------------+";\nstatic const char __pyx_k_GREEN[] = "GREEN";\nstatic const char __pyx_k_Green[] = "Green";\nstatic const char __pyx_k_Likes[] = "Likes";\nstatic const char __pyx_k_Views[] = "Views";\nstatic const char __pyx_k_clear[] = "clear";\nstatic const char __pyx_k_close[] = "close";\nstatic const char __pyx_k_devil[] = "devil";\nstatic const char __pyx_k_flush[] = "flush";\nstatic const char __pyx_k_input[] = "input";\nstatic const char __pyx_k_order[] = "{\\"order\\":";\n  static const char __pyx_k_print[] = "print";\n  static const char __pyx_k_range[] = "range";\n  static const char __pyx_k_sleep[] = "sleep";\n  static const char __pyx_k_throw[] = "throw";\n  static const char __pyx_k_write[] = "write";\n  static const char __pyx_k_Choose[] = "Choose ==> ";\n  static const char __pyx_k_Thread[] = "Thread";\n  static const char __pyx_k_YELLOW[] = "YELLOW";\n  static const char __pyx_k_action[] = "action";\n  static const char __pyx_k_base64[] = "base64";\n  static const char __pyx_k_choice[] = "choice";\n  static const char __pyx_k_import[] = "__import__";\n  static const char __pyx_k_random[] = "random";\n  static const char __pyx_k_source[] = "source";\n  static const char __pyx_k_stdout[] = "stdout";\n  static const char __pyx_k_system[] = "system";\n  static const char __pyx_k_genexpr[] = "genexpr";\n  static const char __pyx_k_hashlib[] = "hashlib";\n  static const char __pyx_k_headers[] = "headers";\n  static const char __pyx_k_order_2[] = "order";\n  static const char __pyx_k_service[] = "service";\n  static const char __pyx_k_urllib3[] = "urllib3";\n  static const char __pyx_k_whisper[] = "whisper";\n  static const char __pyx_k_24241186[] = "24241186";\n  static const char __pyx_k_Comments[] = "Comments";\n  static const char __pyx_k_IG_LIKES[] = " IG LIKES\\n";\n  static const char __pyx_k_IG_VIEWS[] = " IG VIEWS\\n";\n  static const char __pyx_k_Order_ID[] = "[\\342\\210\\232] Order ID ";\n  static const char __pyx_k_Post_URL[] = "Post URL ";\n  static const char __pyx_k_SUCCESSS[] = " SUCCESSS ";\n  static const char __pyx_k_binascii[] = "binascii";\n  static const char __pyx_k_colorama[] = "colorama";\n  static const char __pyx_k_pyfiglet[] = "pyfiglet";\n  static const char __pyx_k_quantity[] = "quantity";\n  static const char __pyx_k_requests[] = "requests";\n  static const char __pyx_k_Atssrk001[] = "Atssrk001";\n  static const char __pyx_k_Atssrk002[] = "@Atssrk002";\n  static const char __pyx_k_Followers[] = "Followers";\n  static const char __pyx_k_Wrong_Key[] = "[\\303\\227] Wrong Key";\n  static const char __pyx_k_atssrk002[] = "@atssrk002";\n  static const char __pyx_k_b64decode[] = "b64decode";\n  static const char __pyx_k_b64encode[] = "b64encode";\n  static const char __pyx_k_slowprint[] = "slowprint";\n  static const char __pyx_k_source_py[] = "source.py";\n  static const char __pyx_k_threading[] = "threading";\n  static const char __pyx_k_unhexlify[] = "unhexlify";\n  static const char __pyx_k_Enter_Pass[] = " Enter Pass: ";\n  static const char __pyx_k_start_time[] = "start_time";\n  static const char __pyx_k_user_agent[] = "user_agent";\n  static const char __pyx_k_IG_COMMENTS[] = " IG COMMENTS\\n";\n  static const char __pyx_k_IG_Followers[] = "IG Followers\\n";\n  static const char __pyx_k_urllib_parse[] = "urllib.parse";\n  static const char __pyx_k_user_agent_2[] = "user-agent";\n  static const char __pyx_k_WRONG_BROTHER[] = " WRONG BROTHER ";\n  static const char __pyx_k_figlet_format[] = "figlet_format";\n  static const char __pyx_k_Invalid_API_key[] = "Invalid API key";\n  static const char __pyx_k_INSTAGRAM_atssrk[] = "[+] INSTAGRAM  : atssrk\\n";\n  static const char __pyx_k_Send_To_Developer[] = "[=] Send To Developer ==> ";\n  static const char __pyx_k_TeleGram_atssrk002[] = "[+] TeleGram : @atssrk002\\n";\n  static const char __pyx_k_Tg_Username_Atssrk[] = "[+] Tg Username    : Atssrk\\n";\n  static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";\n  static const char __pyx_k_generate_user_agent[] = "generate_user_agent";\n  static const char __pyx_k_https_smmgrow_in_api_v2[] = "https://smmgrow.in/api/v2";\n  static const char __pyx_k_Only_followers_like_views[] = "=========Only followers like views========\\n";\n  static const char __pyx_k_Wait_The_Past_Order_Complet[] = "[+] Wait The Past Order Complet";\n  static const char __pyx_k_95m_Welcome_To_atssrk_script[] = "\\033[95m|             Welcome To               |  atssrk script  |";\n  static const char __pyx_k_93m_This_Tool_For_Free_Coded_By[] = " \\033[93m\\n+--------------------------------------+\\n| This Tool For Free  |\\n+--------------------------------------+\\n| Coded By atssrk | version : 2.0  |\\n+--------------------------------------+";\n  static const char __pyx_k_You_have_active_order_with_this[] = "You have active order with this link. Please wait until order being completed.";\n  static const char __pyx_k_1234567890qwertyuiopasdfghjklzxc[] = "1234567890qwertyuiopasdfghjklzxcvbnm";\n  static const char __pyx_k_Telegram_Channel_https_t_me_atss[] = "Telegram Channel : https://t.me/atssrk001\\n\\nOfficial Website : https://nixonsmm.com\\n\\nDevelopers.. @atssrk001 And @atssrk";\n  static const char __pyx_k_f0a69d73de174d34c66818ff26d0a4c7[] = "f0a69d73de174d34c66818ff26d0a4c7";\n  static PyObject *__pyx_kp_u_;\n  static PyObject *__pyx_kp_u_01;\n  static PyObject *__pyx_kp_u_02;\n  static PyObject *__pyx_kp_u_03;\n  static PyObject *__pyx_kp_u_04;\n  static PyObject *__pyx_kp_u_0m;\n  static PyObject *__pyx_kp_u_1;\n  static PyObject *__pyx_kp_u_10;\n  static PyObject *__pyx_kp_u_100;\n  static PyObject *__pyx_kp_u_1234567890qwertyuiopasdfghjklzxc;\n  static PyObject *__pyx_kp_u_1_31m;\n  static PyObject *__pyx_kp_u_1_32m;\n  static PyObject *__pyx_kp_u_1_33m;\n  static PyObject *__pyx_kp_u_1_36m;\n  static PyObject *__pyx_kp_u_1_91m;\n  static PyObject *__pyx_kp_u_1_92m;\n  static PyObject *__pyx_kp_u_2;\n  static PyObject *__pyx_kp_u_20;\n  static PyObject *__pyx_kp_u_24241186;\n  static PyObject *__pyx_kp_u_2_36m;\n  static PyObject *__pyx_kp_u_3;\n  static PyObject *__pyx_kp_u_35m;\n  static PyObject *__pyx_kp_u_4;\n  static PyObject *__pyx_kp_u_93m_This_Tool_For_Free_Coded_By;\n  static PyObject *__pyx_kp_u_95m;\n  static PyObject *__pyx_kp_u_95m_2;\n  static PyObject *__pyx_kp_u_95m_Welcome_To_atssrk_script;\n  static PyObject *__pyx_n_u_Atssrk001;\n  static PyObject *__pyx_kp_u_Atssrk002;\n  static PyObject *__pyx_n_s_B;\n  static PyObject *__pyx_n_s_BLUE;\n  static PyObject *__pyx_kp_u_Choose;\n  static PyObject *__pyx_n_u_Comments;\n  static PyObject *__pyx_n_s_E;\n  static PyObject *__pyx_kp_u_Enter_Pass;\n  static PyObject *__pyx_n_u_Followers;\n  static PyObject *__pyx_n_s_Fore;\n  static PyObject *__pyx_n_s_G;\n  static PyObject *__pyx_n_s_GREEN;\n  static PyObject *__pyx_n_s_Green;\n  static PyObject *__pyx_kp_u_IG_COMMENTS;\n  static PyObject *__pyx_kp_u_IG_Followers;\n  static PyObject *__pyx_kp_u_IG_LIKES;\n  static PyObject *__pyx_kp_u_IG_VIEWS;\n  static PyObject *__pyx_kp_u_INSTAGRAM_atssrk;\n  static PyObject *__pyx_kp_u_Invalid_API_key;\n  static PyObject *__pyx_n_u_Likes;\n  static PyObject *__pyx_kp_u_Only_followers_like_views;\n  static PyObject *__pyx_kp_u_Order_ID;\n  static PyObject *__pyx_n_s_P;\n  static PyObject *__pyx_kp_u_Post_URL;\n  static PyObject *__pyx_n_s_R;\n  static PyObject *__pyx_n_s_RED;\n  static PyObject *__pyx_n_s_S;\n  static PyObject *__pyx_n_s_SK;\n  static PyObject *__pyx_kp_u_SUCCESSS;\n  static PyObject *__pyx_kp_u_Send;\n  static PyObject *__pyx_kp_u_Send_To_Developer;\n  static PyObject *__pyx_kp_u_TeleGram_atssrk002;\n  static PyObject *__pyx_kp_u_Telegram_Channel_https_t_me_atss;\n  static PyObject *__pyx_kp_u_Tg_Username_Atssrk;\n  static PyObject *__pyx_n_s_Thread;\n  static PyObject *__pyx_n_u_Views;\n  static PyObject *__pyx_n_s_W;\n  static PyObject *__pyx_kp_u_WRONG_BROTHER;\n  static PyObject *__pyx_kp_u_Wait_The_Past_Order_Complet;\n  static PyObject *__pyx_kp_u_Wrong_Key;\n  static PyObject *__pyx_n_s_X;\n  static PyObject *__pyx_n_s_Y;\n  static PyObject *__pyx_n_s_YELLOW;\n  static PyObject *__pyx_kp_u_You_have_active_order_with_this;\n  static PyObject *__pyx_n_s_Z;\n  static PyObject *__pyx_kp_u__22;\n  static PyObject *__pyx_kp_u__24;\n  static PyObject *__pyx_kp_u__25;\n  static PyObject *__pyx_kp_u__26;\n  static PyObject *__pyx_kp_u__27;\n  static PyObject *__pyx_kp_u__28;\n  static PyObject *__pyx_kp_u__29;\n  static PyObject *__pyx_kp_u__3;\n  static PyObject *__pyx_kp_u__31;\n  static PyObject *__pyx_kp_u__32;\n  static PyObject *__pyx_kp_u__5;\n  static PyObject *__pyx_n_s__7;\n  static PyObject *__pyx_n_u_action;\n  static PyObject *__pyx_n_u_add;\n  static PyObject *__pyx_n_s_api;\n  static PyObject *__pyx_n_s_args;\n  static PyObject *__pyx_kp_u_atssrk002;\n  static PyObject *__pyx_n_s_b64decode;\n  static PyObject *__pyx_n_s_b64encode;\n  static PyObject *__pyx_n_s_base64;\n  static PyObject *__pyx_n_s_binascii;\n  static PyObject *__pyx_n_s_c;\n  static PyObject *__pyx_n_s_choice;\n  static PyObject *__pyx_n_u_clear;\n  static PyObject *__pyx_n_s_cline_in_traceback;\n  static PyObject *__pyx_n_s_close;\n  static PyObject *__pyx_n_s_colorama;\n  static PyObject *__pyx_n_s_cout;\n  static PyObject *__pyx_n_s_data;\n  static PyObject *__pyx_n_s_devil;\n  static PyObject *__pyx_n_s_exit;\n  static PyObject *__pyx_n_u_f0a69d73de174d34c66818ff26d0a4c7;\n  static PyObject *__pyx_n_s_figlet_format;\n  static PyObject *__pyx_n_s_flush;\n  static PyObject *__pyx_n_s_fol;\n  static PyObject *__pyx_n_s_generate_user_agent;\n  static PyObject *__pyx_n_s_genexpr;\n  static PyObject *__pyx_n_s_hashlib;\n  static PyObject *__pyx_n_s_headers;\n  static PyObject *__pyx_kp_u_https_smmgrow_in_api_v2;\n  static PyObject *__pyx_n_s_id;\n  static PyObject *__pyx_n_s_import;\n  static PyObject *__pyx_n_s_input;\n  static PyObject *__pyx_n_s_json;\n  static PyObject *__pyx_n_s_key;\n  static PyObject *__pyx_n_u_key;\n  static PyObject *__pyx_n_u_link;\n  static PyObject *__pyx_n_s_logo;\n  static PyObject *__pyx_n_s_main;\n  static PyObject *__pyx_n_s_name;\n  static PyObject *__pyx_n_s_oid;\n  static PyObject *__pyx_kp_u_order;\n  static PyObject *__pyx_n_u_order_2;\n  static PyObject *__pyx_n_s_os;\n  static PyObject *__pyx_n_s_post;\n  static PyObject *__pyx_n_s_print;\n  static PyObject *__pyx_n_s_pss;\n  static PyObject *__pyx_n_s_pyfiglet;\n  static PyObject *__pyx_n_u_quantity;\n  static PyObject *__pyx_n_s_random;\n  static PyObject *__pyx_n_s_range;\n  static PyObject *__pyx_n_s_requests;\n  static PyObject *__pyx_n_s_rn;\n  static PyObject *__pyx_n_s_s;\n  static PyObject *__pyx_n_s_send;\n  static PyObject *__pyx_n_u_service;\n  static PyObject *__pyx_n_s_sleep;\n  static PyObject *__pyx_n_s_slowprint;\n  static PyObject *__pyx_n_s_source;\n  static PyObject *__pyx_kp_s_source_py;\n  static PyObject *__pyx_n_s_sped;\n  static PyObject *__pyx_n_s_start_time;\n  static PyObject *__pyx_n_s_stdout;\n  static PyObject *__pyx_n_s_sys;\n  static PyObject *__pyx_n_s_system;\n  static PyObject *__pyx_n_s_t;\n  static PyObject *__pyx_n_s_test;\n  static PyObject *__pyx_n_s_text;\n  static PyObject *__pyx_n_s_threading;\n  static PyObject *__pyx_n_s_throw;\n  static PyObject *__pyx_n_s_time;\n  static PyObject *__pyx_n_s_unhexlify;\n  static PyObject *__pyx_n_s_url;\n  static PyObject *__pyx_n_s_urllib3;\n  static PyObject *__pyx_n_s_urllib_parse;\n  static PyObject *__pyx_n_s_urlm;\n  static PyObject *__pyx_n_s_user;\n  static PyObject *__pyx_n_s_user_agent;\n  static PyObject *__pyx_kp_u_user_agent_2;\n  static PyObject *__pyx_n_s_whisper;\n  static PyObject *__pyx_n_s_write;\n  static PyObject *__pyx_n_s_xone;\n  static PyObject *__pyx_n_s_yso;\nstatic PyObject *__pyx_pf_6source_8genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */\nstatic PyObject *__pyx_pf_6source_11genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */\nstatic PyObject *__pyx_pf_6source_14genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */\nstatic PyObject *__pyx_pf_6source_17genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */\nstatic PyObject *__pyx_pf_6source_sped(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_s); /* proto */\nstatic PyObject *__pyx_pf_6source_2xone(CYTHON_UNUSED PyObject *__pyx_self); /* proto */\nstatic PyObject *__pyx_pf_6source_4slowprint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_s); /* proto */\nstatic PyObject *__pyx_pf_6source_6slowprint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_s); /* proto */\nstatic PyObject *__pyx_tp_new_6source___pyx_scope_struct__genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/\nstatic PyObject *__pyx_tp_new_6source___pyx_scope_struct_1_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/\nstatic PyObject *__pyx_tp_new_6source___pyx_scope_struct_2_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/\nstatic PyObject *__pyx_tp_new_6source___pyx_scope_struct_3_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/\nstatic PyObject *__pyx_float_0_01;\nstatic PyObject *__pyx_int_0;\nstatic PyObject *__pyx_int_2;\nstatic PyObject *__pyx_int_10;\nstatic PyObject *__pyx_int_20;\nstatic PyObject *__pyx_int_40;\nstatic PyObject *__pyx_int_50;\nstatic PyObject *__pyx_int_100;\nstatic PyObject *__pyx_int_210;\nstatic PyObject *__pyx_int_255;\nstatic PyObject *__pyx_int_278;\nstatic PyObject *__pyx_int_312;\nstatic PyObject *__pyx_tuple__2;\nstatic PyObject *__pyx_tuple__4;\nstatic PyObject *__pyx_tuple__6;\nstatic PyObject *__pyx_tuple__8;\nstatic PyObject *__pyx_tuple__9;\nstatic PyObject *__pyx_tuple__12;\nstatic PyObject *__pyx_tuple__13;\nstatic PyObject *__pyx_tuple__14;\nstatic PyObject *__pyx_tuple__15;\nstatic PyObject *__pyx_tuple__17;\nstatic PyObject *__pyx_tuple__18;\nstatic PyObject *__pyx_tuple__20;\nstatic PyObject *__pyx_tuple__21;\nstatic PyObject *__pyx_tuple__23;\nstatic PyObject *__pyx_tuple__30;\nstatic PyObject *__pyx_codeobj__10;\nstatic PyObject *__pyx_codeobj__11;\nstatic PyObject *__pyx_codeobj__16;\nstatic PyObject *__pyx_codeobj__19;\n/* Late includes */\nstatic PyObject *__pyx_gb_6source_10generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */\n\n\n\nstatic PyObject *__pyx_pf_6source_8genexpr(CYTHON_UNUSED PyObject *__pyx_self) {\n  struct __pyx_obj_6source___pyx_scope_struct__genexpr *__pyx_cur_scope;\n  PyObject *__pyx_r = NULL;\n  __Pyx_RefNannyDeclarations\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("genexpr", 0);\n  __pyx_cur_scope = (struct __pyx_obj_6source___pyx_scope_struct__genexpr *)__pyx_tp_new_6source___pyx_scope_struct__genexpr(__pyx_ptype_6source___pyx_scope_struct__genexpr, __pyx_empty_tuple, NULL);\n  if (unlikely(!__pyx_cur_scope)) {\n    __pyx_cur_scope = ((struct __pyx_obj_6source___pyx_scope_struct__genexpr *)Py_None);\n    __Pyx_INCREF(Py_None);\n    __PYX_ERR(0, 145, __pyx_L1_error)\n  } else {\n    __Pyx_GOTREF(__pyx_cur_scope);\n  }\n  {\n    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_6source_10generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_genexpr, __pyx_n_s_source); if (unlikely(!gen)) __PYX_ERR(0, 145, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_cur_scope);\n    __Pyx_RefNannyFinishContext();\n    return (PyObject *) gen;\n  }\n\n  /* function exit code */\n  __pyx_L1_error:;\n  __Pyx_AddTraceback("source.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_r = NULL;\n  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));\n  __Pyx_XGIVEREF(__pyx_r);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic PyObject *__pyx_gb_6source_10generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */\n{\n  struct __pyx_obj_6source___pyx_scope_struct__genexpr *__pyx_cur_scope = ((struct __pyx_obj_6source___pyx_scope_struct__genexpr *)__pyx_generator->closure);\n  PyObject *__pyx_r = NULL;\n  long __pyx_t_1;\n  PyObject *__pyx_t_2 = NULL;\n  PyObject *__pyx_t_3 = NULL;\n  PyObject *__pyx_t_4 = NULL;\n  PyObject *__pyx_t_5 = NULL;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("genexpr", 0);\n  switch (__pyx_generator->resume_label) {\n    case 0: goto __pyx_L3_first_run;\n    default: /* CPython raises the right error here */\n    __Pyx_RefNannyFinishContext();\n    return NULL;\n  }\n  __pyx_L3_first_run:;\n  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 145, __pyx_L1_error)\n  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(0, 145, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_r);\n  for (__pyx_t_1 = 0; __pyx_t_1 < 4; __pyx_t_1+=1) {\n    __pyx_cur_scope->__pyx_v_i = __pyx_t_1;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 145, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 145, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_user); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 145, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_5 = NULL;\n    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {\n      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);\n      if (likely(__pyx_t_5)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);\n        __Pyx_INCREF(__pyx_t_5);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_4, function);\n      }\n    }\n    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);\n    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 145, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 145, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  }\n  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);\n\n  /* function exit code */\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_3);\n  __Pyx_XDECREF(__pyx_t_4);\n  __Pyx_XDECREF(__pyx_t_5);\n  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_L0:;\n  __Pyx_XGIVEREF(__pyx_r);\n  #if !CYTHON_USE_EXC_INFO_STACK\n  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);\n  #endif\n  __pyx_generator->resume_label = -1;\n  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\nstatic PyObject *__pyx_gb_6source_13generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */\n\n\n\nstatic PyObject *__pyx_pf_6source_11genexpr(CYTHON_UNUSED PyObject *__pyx_self) {\n  struct __pyx_obj_6source___pyx_scope_struct_1_genexpr *__pyx_cur_scope;\n  PyObject *__pyx_r = NULL;\n  __Pyx_RefNannyDeclarations\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("genexpr", 0);\n  __pyx_cur_scope = (struct __pyx_obj_6source___pyx_scope_struct_1_genexpr *)__pyx_tp_new_6source___pyx_scope_struct_1_genexpr(__pyx_ptype_6source___pyx_scope_struct_1_genexpr, __pyx_empty_tuple, NULL);\n  if (unlikely(!__pyx_cur_scope)) {\n    __pyx_cur_scope = ((struct __pyx_obj_6source___pyx_scope_struct_1_genexpr *)Py_None);\n    __Pyx_INCREF(Py_None);\n    __PYX_ERR(0, 174, __pyx_L1_error)\n  } else {\n    __Pyx_GOTREF(__pyx_cur_scope);\n  }\n  {\n    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_6source_13generator1, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_genexpr, __pyx_n_s_source); if (unlikely(!gen)) __PYX_ERR(0, 174, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_cur_scope);\n    __Pyx_RefNannyFinishContext();\n    return (PyObject *) gen;\n  }\n\n  /* function exit code */\n  __pyx_L1_error:;\n  __Pyx_AddTraceback("source.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_r = NULL;\n  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));\n  __Pyx_XGIVEREF(__pyx_r);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic PyObject *__pyx_gb_6source_13generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */\n{\n  struct __pyx_obj_6source___pyx_scope_struct_1_genexpr *__pyx_cur_scope = ((struct __pyx_obj_6source___pyx_scope_struct_1_genexpr *)__pyx_generator->closure);\n  PyObject *__pyx_r = NULL;\n  long __pyx_t_1;\n  PyObject *__pyx_t_2 = NULL;\n  PyObject *__pyx_t_3 = NULL;\n  PyObject *__pyx_t_4 = NULL;\n  PyObject *__pyx_t_5 = NULL;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("genexpr", 0);\n  switch (__pyx_generator->resume_label) {\n    case 0: goto __pyx_L3_first_run;\n    default: /* CPython raises the right error here */\n    __Pyx_RefNannyFinishContext();\n    return NULL;\n  }\n  __pyx_L3_first_run:;\n  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 174, __pyx_L1_error)\n  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(0, 174, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_r);\n  for (__pyx_t_1 = 0; __pyx_t_1 < 4; __pyx_t_1+=1) {\n    __pyx_cur_scope->__pyx_v_i = __pyx_t_1;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 174, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 174, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_user); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 174, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_5 = NULL;\n    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {\n      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);\n      if (likely(__pyx_t_5)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);\n        __Pyx_INCREF(__pyx_t_5);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_4, function);\n      }\n    }\n    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);\n    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 174, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 174, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  }\n  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);\n\n  /* function exit code */\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_3);\n  __Pyx_XDECREF(__pyx_t_4);\n  __Pyx_XDECREF(__pyx_t_5);\n  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_L0:;\n  __Pyx_XGIVEREF(__pyx_r);\n  #if !CYTHON_USE_EXC_INFO_STACK\n  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);\n  #endif\n  __pyx_generator->resume_label = -1;\n  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\nstatic PyObject *__pyx_gb_6source_16generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */\n\n\n\nstatic PyObject *__pyx_pf_6source_14genexpr(CYTHON_UNUSED PyObject *__pyx_self) {\n  struct __pyx_obj_6source___pyx_scope_struct_2_genexpr *__pyx_cur_scope;\n  PyObject *__pyx_r = NULL;\n  __Pyx_RefNannyDeclarations\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("genexpr", 0);\n  __pyx_cur_scope = (struct __pyx_obj_6source___pyx_scope_struct_2_genexpr *)__pyx_tp_new_6source___pyx_scope_struct_2_genexpr(__pyx_ptype_6source___pyx_scope_struct_2_genexpr, __pyx_empty_tuple, NULL);\n  if (unlikely(!__pyx_cur_scope)) {\n    __pyx_cur_scope = ((struct __pyx_obj_6source___pyx_scope_struct_2_genexpr *)Py_None);\n    __Pyx_INCREF(Py_None);\n    __PYX_ERR(0, 202, __pyx_L1_error)\n  } else {\n    __Pyx_GOTREF(__pyx_cur_scope);\n  }\n  {\n    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_6source_16generator2, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_genexpr, __pyx_n_s_source); if (unlikely(!gen)) __PYX_ERR(0, 202, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_cur_scope);\n    __Pyx_RefNannyFinishContext();\n    return (PyObject *) gen;\n  }\n\n  /* function exit code */\n  __pyx_L1_error:;\n  __Pyx_AddTraceback("source.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_r = NULL;\n  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));\n  __Pyx_XGIVEREF(__pyx_r);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic PyObject *__pyx_gb_6source_16generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */\n{\n  struct __pyx_obj_6source___pyx_scope_struct_2_genexpr *__pyx_cur_scope = ((struct __pyx_obj_6source___pyx_scope_struct_2_genexpr *)__pyx_generator->closure);\n  PyObject *__pyx_r = NULL;\n  long __pyx_t_1;\n  PyObject *__pyx_t_2 = NULL;\n  PyObject *__pyx_t_3 = NULL;\n  PyObject *__pyx_t_4 = NULL;\n  PyObject *__pyx_t_5 = NULL;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("genexpr", 0);\n  switch (__pyx_generator->resume_label) {\n    case 0: goto __pyx_L3_first_run;\n    default: /* CPython raises the right error here */\n    __Pyx_RefNannyFinishContext();\n    return NULL;\n  }\n  __pyx_L3_first_run:;\n  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 202, __pyx_L1_error)\n  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(0, 202, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_r);\n  for (__pyx_t_1 = 0; __pyx_t_1 < 4; __pyx_t_1+=1) {\n    __pyx_cur_scope->__pyx_v_i = __pyx_t_1;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 202, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 202, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_user); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 202, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_5 = NULL;\n    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {\n      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);\n      if (likely(__pyx_t_5)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);\n        __Pyx_INCREF(__pyx_t_5);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_4, function);\n      }\n    }\n    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);\n    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 202, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 202, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  }\n  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);\n\n  /* function exit code */\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_3);\n  __Pyx_XDECREF(__pyx_t_4);\n  __Pyx_XDECREF(__pyx_t_5);\n  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_L0:;\n  __Pyx_XGIVEREF(__pyx_r);\n  #if !CYTHON_USE_EXC_INFO_STACK\n  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);\n  #endif\n  __pyx_generator->resume_label = -1;\n  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\nstatic PyObject *__pyx_gb_6source_19generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */\n\n\n\nstatic PyObject *__pyx_pf_6source_17genexpr(CYTHON_UNUSED PyObject *__pyx_self) {\n  struct __pyx_obj_6source___pyx_scope_struct_3_genexpr *__pyx_cur_scope;\n  PyObject *__pyx_r = NULL;\n  __Pyx_RefNannyDeclarations\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("genexpr", 0);\n  __pyx_cur_scope = (struct __pyx_obj_6source___pyx_scope_struct_3_genexpr *)__pyx_tp_new_6source___pyx_scope_struct_3_genexpr(__pyx_ptype_6source___pyx_scope_struct_3_genexpr, __pyx_empty_tuple, NULL);\n  if (unlikely(!__pyx_cur_scope)) {\n    __pyx_cur_scope = ((struct __pyx_obj_6source___pyx_scope_struct_3_genexpr *)Py_None);\n    __Pyx_INCREF(Py_None);\n    __PYX_ERR(0, 230, __pyx_L1_error)\n  } else {\n    __Pyx_GOTREF(__pyx_cur_scope);\n  }\n  {\n    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_6source_19generator3, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_genexpr, __pyx_n_s_source); if (unlikely(!gen)) __PYX_ERR(0, 230, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_cur_scope);\n    __Pyx_RefNannyFinishContext();\n    return (PyObject *) gen;\n  }\n\n  /* function exit code */\n  __pyx_L1_error:;\n  __Pyx_AddTraceback("source.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_r = NULL;\n  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));\n  __Pyx_XGIVEREF(__pyx_r);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic PyObject *__pyx_gb_6source_19generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */\n{\n  struct __pyx_obj_6source___pyx_scope_struct_3_genexpr *__pyx_cur_scope = ((struct __pyx_obj_6source___pyx_scope_struct_3_genexpr *)__pyx_generator->closure);\n  PyObject *__pyx_r = NULL;\n  long __pyx_t_1;\n  PyObject *__pyx_t_2 = NULL;\n  PyObject *__pyx_t_3 = NULL;\n  PyObject *__pyx_t_4 = NULL;\n  PyObject *__pyx_t_5 = NULL;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("genexpr", 0);\n  switch (__pyx_generator->resume_label) {\n    case 0: goto __pyx_L3_first_run;\n    default: /* CPython raises the right error here */\n    __Pyx_RefNannyFinishContext();\n    return NULL;\n  }\n  __pyx_L3_first_run:;\n  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 230, __pyx_L1_error)\n  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(0, 230, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_r);\n  for (__pyx_t_1 = 0; __pyx_t_1 < 4; __pyx_t_1+=1) {\n    __pyx_cur_scope->__pyx_v_i = __pyx_t_1;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 230, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 230, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_user); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 230, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_5 = NULL;\n    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {\n      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);\n      if (likely(__pyx_t_5)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);\n        __Pyx_INCREF(__pyx_t_5);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_4, function);\n      }\n    }\n    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);\n    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 230, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  }\n  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);\n\n  /* function exit code */\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_3);\n  __Pyx_XDECREF(__pyx_t_4);\n  __Pyx_XDECREF(__pyx_t_5);\n  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_L0:;\n  __Pyx_XGIVEREF(__pyx_r);\n  #if !CYTHON_USE_EXC_INFO_STACK\n  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);\n  #endif\n  __pyx_generator->resume_label = -1;\n  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\n\n\n/* Python wrapper */\nstatic PyObject *__pyx_pw_6source_1sped(PyObject *__pyx_self, PyObject *__pyx_v_s); /*proto*/\nstatic PyMethodDef __pyx_mdef_6source_1sped = {"sped", (PyCFunction)__pyx_pw_6source_1sped, METH_O, 0};\nstatic PyObject *__pyx_pw_6source_1sped(PyObject *__pyx_self, PyObject *__pyx_v_s) {\n  PyObject *__pyx_r = 0;\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("sped (wrapper)", 0);\n  __pyx_r = __pyx_pf_6source_sped(__pyx_self, ((PyObject *)__pyx_v_s));\n\n  /* function exit code */\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic PyObject *__pyx_pf_6source_sped(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_s) {\n  PyObject *__pyx_v_c = NULL;\n  PyObject *__pyx_r = NULL;\n  __Pyx_RefNannyDeclarations\n  PyObject *__pyx_t_1 = NULL;\n  PyObject *__pyx_t_2 = NULL;\n  Py_ssize_t __pyx_t_3;\n  PyObject *(*__pyx_t_4)(PyObject *);\n  PyObject *__pyx_t_5 = NULL;\n  PyObject *__pyx_t_6 = NULL;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("sped", 0);\n\n\n  __pyx_t_1 = PyNumber_Add(__pyx_v_s, __pyx_kp_u_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 30, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {\n    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;\n    __pyx_t_4 = NULL;\n  } else {\n    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 30, __pyx_L1_error)\n  }\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  for (;;) {\n    if (likely(!__pyx_t_4)) {\n      if (likely(PyList_CheckExact(__pyx_t_2))) {\n        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;\n        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 30, __pyx_L1_error)\n        #else\n        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 30, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        #endif\n      } else {\n        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;\n        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 30, __pyx_L1_error)\n        #else\n        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 30, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        #endif\n      }\n    } else {\n      __pyx_t_1 = __pyx_t_4(__pyx_t_2);\n      if (unlikely(!__pyx_t_1)) {\n        PyObject* exc_type = PyErr_Occurred();\n        if (exc_type) {\n          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();\n          else __PYX_ERR(0, 30, __pyx_L1_error)\n        }\n        break;\n      }\n      __Pyx_GOTREF(__pyx_t_1);\n    }\n    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);\n    __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 31, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 31, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 31, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __pyx_t_6 = NULL;\n    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {\n      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);\n      if (likely(__pyx_t_6)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);\n        __Pyx_INCREF(__pyx_t_6);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_5, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_v_c) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_c);\n    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 31, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 32, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 32, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_flush); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 32, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __pyx_t_6 = NULL;\n    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {\n      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);\n      if (likely(__pyx_t_6)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);\n        __Pyx_INCREF(__pyx_t_6);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_5, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_5);\n    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_time); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 33, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sleep); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 33, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = NULL;\n    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {\n      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);\n      if (likely(__pyx_t_5)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);\n        __Pyx_INCREF(__pyx_t_5);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_6, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_float_0_01) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_float_0_01);\n    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 33, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  }\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n\n  /* function exit code */\n  __pyx_r = Py_None; __Pyx_INCREF(Py_None);\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_t_1);\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_5);\n  __Pyx_XDECREF(__pyx_t_6);\n  __Pyx_AddTraceback("source.sped", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_r = NULL;\n  __pyx_L0:;\n  __Pyx_XDECREF(__pyx_v_c);\n  __Pyx_XGIVEREF(__pyx_r);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\n\n\n/* Python wrapper */\nstatic PyObject *__pyx_pw_6source_3xone(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/\nstatic PyMethodDef __pyx_mdef_6source_3xone = {"xone", (PyCFunction)__pyx_pw_6source_3xone, METH_NOARGS, 0};\nstatic PyObject *__pyx_pw_6source_3xone(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {\n  PyObject *__pyx_r = 0;\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("xone (wrapper)", 0);\n  __pyx_r = __pyx_pf_6source_2xone(__pyx_self);\n\n  /* function exit code */\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic PyObject *__pyx_pf_6source_2xone(CYTHON_UNUSED PyObject *__pyx_self) {\n  PyObject *__pyx_r = NULL;\n  __Pyx_RefNannyDeclarations\n  PyObject *__pyx_t_1 = NULL;\n  PyObject *__pyx_t_2 = NULL;\n  PyObject *__pyx_t_3 = NULL;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("xone", 0);\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SK); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 37, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 38, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 47, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 48, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n\n  /* function exit code */\n  __pyx_r = Py_None; __Pyx_INCREF(Py_None);\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_t_1);\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_3);\n  __Pyx_AddTraceback("source.xone", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_r = NULL;\n  __pyx_L0:;\n  __Pyx_XGIVEREF(__pyx_r);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\n\n\n/* Python wrapper */\nstatic PyObject *__pyx_pw_6source_5slowprint(PyObject *__pyx_self, PyObject *__pyx_v_s); /*proto*/\nstatic PyMethodDef __pyx_mdef_6source_5slowprint = {"slowprint", (PyCFunction)__pyx_pw_6source_5slowprint, METH_O, 0};\nstatic PyObject *__pyx_pw_6source_5slowprint(PyObject *__pyx_self, PyObject *__pyx_v_s) {\n  PyObject *__pyx_r = 0;\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("slowprint (wrapper)", 0);\n  __pyx_r = __pyx_pf_6source_4slowprint(__pyx_self, ((PyObject *)__pyx_v_s));\n\n  /* function exit code */\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic PyObject *__pyx_pf_6source_4slowprint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_s) {\n  PyObject *__pyx_v_c = NULL;\n  PyObject *__pyx_r = NULL;\n  __Pyx_RefNannyDeclarations\n  PyObject *__pyx_t_1 = NULL;\n  PyObject *__pyx_t_2 = NULL;\n  Py_ssize_t __pyx_t_3;\n  PyObject *(*__pyx_t_4)(PyObject *);\n  PyObject *__pyx_t_5 = NULL;\n  PyObject *__pyx_t_6 = NULL;\n  PyObject *__pyx_t_7 = NULL;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("slowprint", 0);\n\n\n  __pyx_t_1 = PyNumber_Add(__pyx_v_s, __pyx_kp_u_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {\n    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;\n    __pyx_t_4 = NULL;\n  } else {\n    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 104, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 104, __pyx_L1_error)\n  }\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  for (;;) {\n    if (likely(!__pyx_t_4)) {\n      if (likely(PyList_CheckExact(__pyx_t_2))) {\n        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;\n        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 104, __pyx_L1_error)\n        #else\n        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        #endif\n      } else {\n        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;\n        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 104, __pyx_L1_error)\n        #else\n        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        #endif\n      }\n    } else {\n      __pyx_t_1 = __pyx_t_4(__pyx_t_2);\n      if (unlikely(!__pyx_t_1)) {\n        PyObject* exc_type = PyErr_Occurred();\n        if (exc_type) {\n          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();\n          else __PYX_ERR(0, 104, __pyx_L1_error)\n        }\n        break;\n      }\n      __Pyx_GOTREF(__pyx_t_1);\n    }\n    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);\n    __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 105, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 105, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 105, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __pyx_t_6 = NULL;\n    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {\n      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);\n      if (likely(__pyx_t_6)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);\n        __Pyx_INCREF(__pyx_t_6);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_5, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_v_c) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_c);\n    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 105, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 106, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 106, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_flush); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 106, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __pyx_t_6 = NULL;\n    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {\n      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);\n      if (likely(__pyx_t_6)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);\n        __Pyx_INCREF(__pyx_t_6);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_5, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_5);\n    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 106, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_time); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 107, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sleep); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 107, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = PyFloat_FromDouble((5. / 100.0)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 107, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_7 = NULL;\n    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {\n      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);\n      if (likely(__pyx_t_7)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);\n        __Pyx_INCREF(__pyx_t_7);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_6, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);\n    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 107, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  }\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n\n  /* function exit code */\n  __pyx_r = Py_None; __Pyx_INCREF(Py_None);\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_t_1);\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_5);\n  __Pyx_XDECREF(__pyx_t_6);\n  __Pyx_XDECREF(__pyx_t_7);\n  __Pyx_AddTraceback("source.slowprint", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_r = NULL;\n  __pyx_L0:;\n  __Pyx_XDECREF(__pyx_v_c);\n  __Pyx_XGIVEREF(__pyx_r);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\n\n\n/* Python wrapper */\nstatic PyObject *__pyx_pw_6source_7slowprint(PyObject *__pyx_self, PyObject *__pyx_v_s); /*proto*/\nstatic PyMethodDef __pyx_mdef_6source_7slowprint = {"slowprint", (PyCFunction)__pyx_pw_6source_7slowprint, METH_O, 0};\nstatic PyObject *__pyx_pw_6source_7slowprint(PyObject *__pyx_self, PyObject *__pyx_v_s) {\n  PyObject *__pyx_r = 0;\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("slowprint (wrapper)", 0);\n  __pyx_r = __pyx_pf_6source_6slowprint(__pyx_self, ((PyObject *)__pyx_v_s));\n\n  /* function exit code */\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic PyObject *__pyx_pf_6source_6slowprint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_s) {\n  PyObject *__pyx_v_c = NULL;\n  PyObject *__pyx_r = NULL;\n  __Pyx_RefNannyDeclarations\n  PyObject *__pyx_t_1 = NULL;\n  PyObject *__pyx_t_2 = NULL;\n  Py_ssize_t __pyx_t_3;\n  PyObject *(*__pyx_t_4)(PyObject *);\n  PyObject *__pyx_t_5 = NULL;\n  PyObject *__pyx_t_6 = NULL;\n  PyObject *__pyx_t_7 = NULL;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("slowprint", 0);\n\n\n  __pyx_t_1 = PyNumber_Add(__pyx_v_s, __pyx_kp_u_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 119, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {\n    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;\n    __pyx_t_4 = NULL;\n  } else {\n    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 119, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 119, __pyx_L1_error)\n  }\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  for (;;) {\n    if (likely(!__pyx_t_4)) {\n      if (likely(PyList_CheckExact(__pyx_t_2))) {\n        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;\n        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 119, __pyx_L1_error)\n        #else\n        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 119, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        #endif\n      } else {\n        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;\n        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 119, __pyx_L1_error)\n        #else\n        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 119, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        #endif\n      }\n    } else {\n      __pyx_t_1 = __pyx_t_4(__pyx_t_2);\n      if (unlikely(!__pyx_t_1)) {\n        PyObject* exc_type = PyErr_Occurred();\n        if (exc_type) {\n          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();\n          else __PYX_ERR(0, 119, __pyx_L1_error)\n        }\n        break;\n      }\n      __Pyx_GOTREF(__pyx_t_1);\n    }\n    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);\n    __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 120, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 120, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 120, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __pyx_t_6 = NULL;\n    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {\n      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);\n      if (likely(__pyx_t_6)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);\n        __Pyx_INCREF(__pyx_t_6);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_5, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_v_c) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_c);\n    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 120, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 121, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 121, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_flush); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 121, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __pyx_t_6 = NULL;\n    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {\n      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);\n      if (likely(__pyx_t_6)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);\n        __Pyx_INCREF(__pyx_t_6);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_5, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_5);\n    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 121, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_time); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 122, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sleep); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 122, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_6);\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    __pyx_t_5 = PyFloat_FromDouble((8. / 100.0)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 122, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_5);\n    __pyx_t_7 = NULL;\n    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {\n      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);\n      if (likely(__pyx_t_7)) {\n        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);\n        __Pyx_INCREF(__pyx_t_7);\n        __Pyx_INCREF(function);\n        __Pyx_DECREF_SET(__pyx_t_6, function);\n      }\n    }\n    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);\n    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  }\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n\n  /* function exit code */\n  __pyx_r = Py_None; __Pyx_INCREF(Py_None);\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_t_1);\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_5);\n  __Pyx_XDECREF(__pyx_t_6);\n  __Pyx_XDECREF(__pyx_t_7);\n  __Pyx_AddTraceback("source.slowprint", __pyx_clineno, __pyx_lineno, __pyx_filename);\n  __pyx_r = NULL;\n  __pyx_L0:;\n  __Pyx_XDECREF(__pyx_v_c);\n  __Pyx_XGIVEREF(__pyx_r);\n  __Pyx_RefNannyFinishContext();\n  return __pyx_r;\n}\n\nstatic struct __pyx_obj_6source___pyx_scope_struct__genexpr *__pyx_freelist_6source___pyx_scope_struct__genexpr[8];\nstatic int __pyx_freecount_6source___pyx_scope_struct__genexpr = 0;\n\nstatic PyObject *__pyx_tp_new_6source___pyx_scope_struct__genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {\n  PyObject *o;\n  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_6source___pyx_scope_struct__genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_6source___pyx_scope_struct__genexpr)))) {\n    o = (PyObject*)__pyx_freelist_6source___pyx_scope_struct__genexpr[--__pyx_freecount_6source___pyx_scope_struct__genexpr];\n    memset(o, 0, sizeof(struct __pyx_obj_6source___pyx_scope_struct__genexpr));\n    (void) PyObject_INIT(o, t);\n  } else {\n    o = (*t->tp_alloc)(t, 0);\n    if (unlikely(!o)) return 0;\n  }\n  return o;\n}\n\nstatic void __pyx_tp_dealloc_6source___pyx_scope_struct__genexpr(PyObject *o) {\n  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_6source___pyx_scope_struct__genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_6source___pyx_scope_struct__genexpr)))) {\n    __pyx_freelist_6source___pyx_scope_struct__genexpr[__pyx_freecount_6source___pyx_scope_struct__genexpr++] = ((struct __pyx_obj_6source___pyx_scope_struct__genexpr *)o);\n  } else {\n    (*Py_TYPE(o)->tp_free)(o);\n  }\n}\n\nstatic PyTypeObject __pyx_type_6source___pyx_scope_struct__genexpr = {\n  PyVarObject_HEAD_INIT(0, 0)\n  "source.__pyx_scope_struct__genexpr", /*tp_name*/\n  sizeof(struct __pyx_obj_6source___pyx_scope_struct__genexpr), /*tp_basicsize*/\n  0, /*tp_itemsize*/\n  __pyx_tp_dealloc_6source___pyx_scope_struct__genexpr, /*tp_dealloc*/\n  #if PY_VERSION_HEX < 0x030800b4\n  0, /*tp_print*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b4\n  0, /*tp_vectorcall_offset*/\n  #endif\n  0, /*tp_getattr*/\n  0, /*tp_setattr*/\n  #if PY_MAJOR_VERSION < 3\n  0, /*tp_compare*/\n  #endif\n  #if PY_MAJOR_VERSION >= 3\n  0, /*tp_as_async*/\n  #endif\n  0, /*tp_repr*/\n  0, /*tp_as_number*/\n  0, /*tp_as_sequence*/\n  0, /*tp_as_mapping*/\n  0, /*tp_hash*/\n  0, /*tp_call*/\n  0, /*tp_str*/\n  0, /*tp_getattro*/\n  0, /*tp_setattro*/\n  0, /*tp_as_buffer*/\n  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/\n  0, /*tp_doc*/\n  0, /*tp_traverse*/\n  0, /*tp_clear*/\n  0, /*tp_richcompare*/\n  0, /*tp_weaklistoffset*/\n  0, /*tp_iter*/\n  0, /*tp_iternext*/\n  0, /*tp_methods*/\n  0, /*tp_members*/\n  0, /*tp_getset*/\n  0, /*tp_base*/\n  0, /*tp_dict*/\n  0, /*tp_descr_get*/\n  0, /*tp_descr_set*/\n  0, /*tp_dictoffset*/\n  0, /*tp_init*/\n  0, /*tp_alloc*/\n  __pyx_tp_new_6source___pyx_scope_struct__genexpr, /*tp_new*/\n  0, /*tp_free*/\n  0, /*tp_is_gc*/\n  0, /*tp_bases*/\n  0, /*tp_mro*/\n  0, /*tp_cache*/\n  0, /*tp_subclasses*/\n  0, /*tp_weaklist*/\n  0, /*tp_del*/\n  0, /*tp_version_tag*/\n  #if PY_VERSION_HEX >= 0x030400a1\n  0, /*tp_finalize*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)\n  0, /*tp_vectorcall*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000\n  0, /*tp_print*/\n  #endif\n  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000\n  0, /*tp_pypy_flags*/\n  #endif\n};\n\nstatic struct __pyx_obj_6source___pyx_scope_struct_1_genexpr *__pyx_freelist_6source___pyx_scope_struct_1_genexpr[8];\nstatic int __pyx_freecount_6source___pyx_scope_struct_1_genexpr = 0;\n\nstatic PyObject *__pyx_tp_new_6source___pyx_scope_struct_1_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {\n  PyObject *o;\n  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_6source___pyx_scope_struct_1_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_6source___pyx_scope_struct_1_genexpr)))) {\n    o = (PyObject*)__pyx_freelist_6source___pyx_scope_struct_1_genexpr[--__pyx_freecount_6source___pyx_scope_struct_1_genexpr];\n    memset(o, 0, sizeof(struct __pyx_obj_6source___pyx_scope_struct_1_genexpr));\n    (void) PyObject_INIT(o, t);\n  } else {\n    o = (*t->tp_alloc)(t, 0);\n    if (unlikely(!o)) return 0;\n  }\n  return o;\n}\n\nstatic void __pyx_tp_dealloc_6source___pyx_scope_struct_1_genexpr(PyObject *o) {\n  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_6source___pyx_scope_struct_1_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_6source___pyx_scope_struct_1_genexpr)))) {\n    __pyx_freelist_6source___pyx_scope_struct_1_genexpr[__pyx_freecount_6source___pyx_scope_struct_1_genexpr++] = ((struct __pyx_obj_6source___pyx_scope_struct_1_genexpr *)o);\n  } else {\n    (*Py_TYPE(o)->tp_free)(o);\n  }\n}\n\nstatic PyTypeObject __pyx_type_6source___pyx_scope_struct_1_genexpr = {\n  PyVarObject_HEAD_INIT(0, 0)\n  "source.__pyx_scope_struct_1_genexpr", /*tp_name*/\n  sizeof(struct __pyx_obj_6source___pyx_scope_struct_1_genexpr), /*tp_basicsize*/\n  0, /*tp_itemsize*/\n  __pyx_tp_dealloc_6source___pyx_scope_struct_1_genexpr, /*tp_dealloc*/\n  #if PY_VERSION_HEX < 0x030800b4\n  0, /*tp_print*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b4\n  0, /*tp_vectorcall_offset*/\n  #endif\n  0, /*tp_getattr*/\n  0, /*tp_setattr*/\n  #if PY_MAJOR_VERSION < 3\n  0, /*tp_compare*/\n  #endif\n  #if PY_MAJOR_VERSION >= 3\n  0, /*tp_as_async*/\n  #endif\n  0, /*tp_repr*/\n  0, /*tp_as_number*/\n  0, /*tp_as_sequence*/\n  0, /*tp_as_mapping*/\n  0, /*tp_hash*/\n  0, /*tp_call*/\n  0, /*tp_str*/\n  0, /*tp_getattro*/\n  0, /*tp_setattro*/\n  0, /*tp_as_buffer*/\n  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/\n  0, /*tp_doc*/\n  0, /*tp_traverse*/\n  0, /*tp_clear*/\n  0, /*tp_richcompare*/\n  0, /*tp_weaklistoffset*/\n  0, /*tp_iter*/\n  0, /*tp_iternext*/\n  0, /*tp_methods*/\n  0, /*tp_members*/\n  0, /*tp_getset*/\n  0, /*tp_base*/\n  0, /*tp_dict*/\n  0, /*tp_descr_get*/\n  0, /*tp_descr_set*/\n  0, /*tp_dictoffset*/\n  0, /*tp_init*/\n  0, /*tp_alloc*/\n  __pyx_tp_new_6source___pyx_scope_struct_1_genexpr, /*tp_new*/\n  0, /*tp_free*/\n  0, /*tp_is_gc*/\n  0, /*tp_bases*/\n  0, /*tp_mro*/\n  0, /*tp_cache*/\n  0, /*tp_subclasses*/\n  0, /*tp_weaklist*/\n  0, /*tp_del*/\n  0, /*tp_version_tag*/\n  #if PY_VERSION_HEX >= 0x030400a1\n  0, /*tp_finalize*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)\n  0, /*tp_vectorcall*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000\n  0, /*tp_print*/\n  #endif\n  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000\n  0, /*tp_pypy_flags*/\n  #endif\n};\n\nstatic struct __pyx_obj_6source___pyx_scope_struct_2_genexpr *__pyx_freelist_6source___pyx_scope_struct_2_genexpr[8];\nstatic int __pyx_freecount_6source___pyx_scope_struct_2_genexpr = 0;\n\nstatic PyObject *__pyx_tp_new_6source___pyx_scope_struct_2_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {\n  PyObject *o;\n  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_6source___pyx_scope_struct_2_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_6source___pyx_scope_struct_2_genexpr)))) {\n    o = (PyObject*)__pyx_freelist_6source___pyx_scope_struct_2_genexpr[--__pyx_freecount_6source___pyx_scope_struct_2_genexpr];\n    memset(o, 0, sizeof(struct __pyx_obj_6source___pyx_scope_struct_2_genexpr));\n    (void) PyObject_INIT(o, t);\n  } else {\n    o = (*t->tp_alloc)(t, 0);\n    if (unlikely(!o)) return 0;\n  }\n  return o;\n}\n\nstatic void __pyx_tp_dealloc_6source___pyx_scope_struct_2_genexpr(PyObject *o) {\n  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_6source___pyx_scope_struct_2_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_6source___pyx_scope_struct_2_genexpr)))) {\n    __pyx_freelist_6source___pyx_scope_struct_2_genexpr[__pyx_freecount_6source___pyx_scope_struct_2_genexpr++] = ((struct __pyx_obj_6source___pyx_scope_struct_2_genexpr *)o);\n  } else {\n    (*Py_TYPE(o)->tp_free)(o);\n  }\n}\n\nstatic PyTypeObject __pyx_type_6source___pyx_scope_struct_2_genexpr = {\n  PyVarObject_HEAD_INIT(0, 0)\n  "source.__pyx_scope_struct_2_genexpr", /*tp_name*/\n  sizeof(struct __pyx_obj_6source___pyx_scope_struct_2_genexpr), /*tp_basicsize*/\n  0, /*tp_itemsize*/\n  __pyx_tp_dealloc_6source___pyx_scope_struct_2_genexpr, /*tp_dealloc*/\n  #if PY_VERSION_HEX < 0x030800b4\n  0, /*tp_print*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b4\n  0, /*tp_vectorcall_offset*/\n  #endif\n  0, /*tp_getattr*/\n  0, /*tp_setattr*/\n  #if PY_MAJOR_VERSION < 3\n  0, /*tp_compare*/\n  #endif\n  #if PY_MAJOR_VERSION >= 3\n  0, /*tp_as_async*/\n  #endif\n  0, /*tp_repr*/\n  0, /*tp_as_number*/\n  0, /*tp_as_sequence*/\n  0, /*tp_as_mapping*/\n  0, /*tp_hash*/\n  0, /*tp_call*/\n  0, /*tp_str*/\n  0, /*tp_getattro*/\n  0, /*tp_setattro*/\n  0, /*tp_as_buffer*/\n  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/\n  0, /*tp_doc*/\n  0, /*tp_traverse*/\n  0, /*tp_clear*/\n  0, /*tp_richcompare*/\n  0, /*tp_weaklistoffset*/\n  0, /*tp_iter*/\n  0, /*tp_iternext*/\n  0, /*tp_methods*/\n  0, /*tp_members*/\n  0, /*tp_getset*/\n  0, /*tp_base*/\n  0, /*tp_dict*/\n  0, /*tp_descr_get*/\n  0, /*tp_descr_set*/\n  0, /*tp_dictoffset*/\n  0, /*tp_init*/\n  0, /*tp_alloc*/\n  __pyx_tp_new_6source___pyx_scope_struct_2_genexpr, /*tp_new*/\n  0, /*tp_free*/\n  0, /*tp_is_gc*/\n  0, /*tp_bases*/\n  0, /*tp_mro*/\n  0, /*tp_cache*/\n  0, /*tp_subclasses*/\n  0, /*tp_weaklist*/\n  0, /*tp_del*/\n  0, /*tp_version_tag*/\n  #if PY_VERSION_HEX >= 0x030400a1\n  0, /*tp_finalize*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)\n  0, /*tp_vectorcall*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000\n  0, /*tp_print*/\n  #endif\n  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000\n  0, /*tp_pypy_flags*/\n  #endif\n};\n\nstatic struct __pyx_obj_6source___pyx_scope_struct_3_genexpr *__pyx_freelist_6source___pyx_scope_struct_3_genexpr[8];\nstatic int __pyx_freecount_6source___pyx_scope_struct_3_genexpr = 0;\n\nstatic PyObject *__pyx_tp_new_6source___pyx_scope_struct_3_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {\n  PyObject *o;\n  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_6source___pyx_scope_struct_3_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_6source___pyx_scope_struct_3_genexpr)))) {\n    o = (PyObject*)__pyx_freelist_6source___pyx_scope_struct_3_genexpr[--__pyx_freecount_6source___pyx_scope_struct_3_genexpr];\n    memset(o, 0, sizeof(struct __pyx_obj_6source___pyx_scope_struct_3_genexpr));\n    (void) PyObject_INIT(o, t);\n  } else {\n    o = (*t->tp_alloc)(t, 0);\n    if (unlikely(!o)) return 0;\n  }\n  return o;\n}\n\nstatic void __pyx_tp_dealloc_6source___pyx_scope_struct_3_genexpr(PyObject *o) {\n  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_6source___pyx_scope_struct_3_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_6source___pyx_scope_struct_3_genexpr)))) {\n    __pyx_freelist_6source___pyx_scope_struct_3_genexpr[__pyx_freecount_6source___pyx_scope_struct_3_genexpr++] = ((struct __pyx_obj_6source___pyx_scope_struct_3_genexpr *)o);\n  } else {\n    (*Py_TYPE(o)->tp_free)(o);\n  }\n}\n\nstatic PyTypeObject __pyx_type_6source___pyx_scope_struct_3_genexpr = {\n  PyVarObject_HEAD_INIT(0, 0)\n  "source.__pyx_scope_struct_3_genexpr", /*tp_name*/\n  sizeof(struct __pyx_obj_6source___pyx_scope_struct_3_genexpr), /*tp_basicsize*/\n  0, /*tp_itemsize*/\n  __pyx_tp_dealloc_6source___pyx_scope_struct_3_genexpr, /*tp_dealloc*/\n  #if PY_VERSION_HEX < 0x030800b4\n  0, /*tp_print*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b4\n  0, /*tp_vectorcall_offset*/\n  #endif\n  0, /*tp_getattr*/\n  0, /*tp_setattr*/\n  #if PY_MAJOR_VERSION < 3\n  0, /*tp_compare*/\n  #endif\n  #if PY_MAJOR_VERSION >= 3\n  0, /*tp_as_async*/\n  #endif\n  0, /*tp_repr*/\n  0, /*tp_as_number*/\n  0, /*tp_as_sequence*/\n  0, /*tp_as_mapping*/\n  0, /*tp_hash*/\n  0, /*tp_call*/\n  0, /*tp_str*/\n  0, /*tp_getattro*/\n  0, /*tp_setattro*/\n  0, /*tp_as_buffer*/\n  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/\n  0, /*tp_doc*/\n  0, /*tp_traverse*/\n  0, /*tp_clear*/\n  0, /*tp_richcompare*/\n  0, /*tp_weaklistoffset*/\n  0, /*tp_iter*/\n  0, /*tp_iternext*/\n  0, /*tp_methods*/\n  0, /*tp_members*/\n  0, /*tp_getset*/\n  0, /*tp_base*/\n  0, /*tp_dict*/\n  0, /*tp_descr_get*/\n  0, /*tp_descr_set*/\n  0, /*tp_dictoffset*/\n  0, /*tp_init*/\n  0, /*tp_alloc*/\n  __pyx_tp_new_6source___pyx_scope_struct_3_genexpr, /*tp_new*/\n  0, /*tp_free*/\n  0, /*tp_is_gc*/\n  0, /*tp_bases*/\n  0, /*tp_mro*/\n  0, /*tp_cache*/\n  0, /*tp_subclasses*/\n  0, /*tp_weaklist*/\n  0, /*tp_del*/\n  0, /*tp_version_tag*/\n  #if PY_VERSION_HEX >= 0x030400a1\n  0, /*tp_finalize*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)\n  0, /*tp_vectorcall*/\n  #endif\n  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000\n  0, /*tp_print*/\n  #endif\n  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000\n  0, /*tp_pypy_flags*/\n  #endif\n};\n\nstatic PyMethodDef __pyx_methods[] = {\n  {0, 0, 0, 0}\n};\n\nstatic int __pyx_import_star_set(PyObject *o, PyObject* py_name, char *name) {\n  static const char* internal_type_names[] = {\n    "__pyx_ctuple_double",\n    "__pyx_ctuple_double_struct",\n    "__pyx_ctuple_long",\n    "__pyx_ctuple_long_struct",\n    "__pyx_scope_struct_1_genexpr",\n    "__pyx_scope_struct_2_genexpr",\n    "__pyx_scope_struct_3_genexpr",\n    "__pyx_scope_struct__genexpr",\n    0\n  };\n  const char** type_name = internal_type_names;\n  while (*type_name) {\n    if (__Pyx_StrEq(name, *type_name)) {\n      PyErr_Format(PyExc_TypeError, "Cannot overwrite C type %s", name);\n      goto bad;\n    }\n    type_name++;\n  }\n  if (0);\n  else {\n    if (PyObject_SetAttr(__pyx_m, py_name, o) < 0) goto bad;\n  }\n  return 0;\n  bad:\n  return -1;\n}\n\nstatic int\n__Pyx_import_all_from(PyObject *locals, PyObject *v)\n{\n    PyObject *all = PyObject_GetAttrString(v, "__all__");\n    PyObject *dict, *name, *value;\n    int skip_leading_underscores = 0;\n    int pos, err;\n    if (all == NULL) {\n        if (!PyErr_ExceptionMatches(PyExc_AttributeError))\n            return -1;\n        PyErr_Clear();\n        dict = PyObject_GetAttrString(v, "__dict__");\n        if (dict == NULL) {\n            if (!PyErr_ExceptionMatches(PyExc_AttributeError))\n                return -1;\n            PyErr_SetString(PyExc_ImportError,\n            "from-import-* object has no __dict__ and no __all__");\n            return -1;\n        }\n#if PY_MAJOR_VERSION < 3\n        all = PyObject_CallMethod(dict, (char *)"keys", NULL);\n#else\n        all = PyMapping_Keys(dict);\n#endif\n        Py_DECREF(dict);\n        if (all == NULL)\n            return -1;\n        skip_leading_underscores = 1;\n    }\n    for (pos = 0, err = 0; ; pos++) {\n        name = PySequence_GetItem(all, pos);\n        if (name == NULL) {\n            if (!PyErr_ExceptionMatches(PyExc_IndexError))\n                err = -1;\n            else\n                PyErr_Clear();\n            break;\n        }\n        if (skip_leading_underscores &&\n#if PY_MAJOR_VERSION < 3\n            likely(PyString_Check(name)) &&\n            PyString_AS_STRING(name)[0] == \'_\')\n#else\n            likely(PyUnicode_Check(name)) &&\n            likely(__Pyx_PyUnicode_GET_LENGTH(name)) &&\n            __Pyx_PyUnicode_READ_CHAR(name, 0) == \'_\')\n#endif\n        {\n            Py_DECREF(name);\n            continue;\n        }\n        value = PyObject_GetAttr(v, name);\n        if (value == NULL)\n            err = -1;\n        else if (PyDict_CheckExact(locals))\n            err = PyDict_SetItem(locals, name, value);\n        else\n            err = PyObject_SetItem(locals, name, value);\n        Py_DECREF(name);\n        Py_XDECREF(value);\n        if (err != 0)\n            break;\n    }\n    Py_DECREF(all);\n    return err;\n}\nstatic int __pyx_import_star(PyObject* m) {\n    int i;\n    int ret = -1;\n    char* s;\n    PyObject *locals = 0;\n    PyObject *list = 0;\n#if PY_MAJOR_VERSION >= 3\n    PyObject *utf8_name = 0;\n#endif\n    PyObject *name;\n    PyObject *item;\n    locals = PyDict_New();              if (!locals) goto bad;\n    if (__Pyx_import_all_from(locals, m) < 0) goto bad;\n    list = PyDict_Items(locals);        if (!list) goto bad;\n    for(i=0; i<PyList_GET_SIZE(list); i++) {\n        name = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 0);\n        item = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 1);\n#if PY_MAJOR_VERSION >= 3\n        utf8_name = PyUnicode_AsUTF8String(name);\n        if (!utf8_name) goto bad;\n        s = PyBytes_AS_STRING(utf8_name);\n        if (__pyx_import_star_set(item, name, s) < 0) goto bad;\n        Py_DECREF(utf8_name); utf8_name = 0;\n#else\n        s = PyString_AsString(name);\n        if (!s) goto bad;\n        if (__pyx_import_star_set(item, name, s) < 0) goto bad;\n#endif\n    }\n    ret = 0;\nbad:\n    Py_XDECREF(locals);\n    Py_XDECREF(list);\n#if PY_MAJOR_VERSION >= 3\n    Py_XDECREF(utf8_name);\n#endif\n    return ret;\n}\n\n\n\n#if PY_MAJOR_VERSION >= 3\n#if CYTHON_PEP489_MULTI_PHASE_INIT\nstatic PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/\nstatic int __pyx_pymod_exec_source(PyObject* module); /*proto*/\nstatic PyModuleDef_Slot __pyx_moduledef_slots[] = {\n  {Py_mod_create, (void*)__pyx_pymod_create},\n  {Py_mod_exec, (void*)__pyx_pymod_exec_source},\n  {0, NULL}\n};\n#endif\n\nstatic struct PyModuleDef __pyx_moduledef = {\n    PyModuleDef_HEAD_INIT,\n    "source",\n    0, /* m_doc */\n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n    0, /* m_size */\n  #else\n    -1, /* m_size */\n  #endif\n    __pyx_methods /* m_methods */,\n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n    __pyx_moduledef_slots, /* m_slots */\n  #else\n    NULL, /* m_reload */\n  #endif\n    NULL, /* m_traverse */\n    NULL, /* m_clear */\n    NULL /* m_free */\n};\n#endif\n#ifndef CYTHON_SMALL_CODE\n#if defined(__clang__)\n    #define CYTHON_SMALL_CODE\n#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))\n    #define CYTHON_SMALL_CODE __attribute__((cold))\n#else\n    #define CYTHON_SMALL_CODE\n#endif\n#endif\n\nstatic __Pyx_StringTabEntry __pyx_string_tab[] = {\n  {&__pyx_kp_u_, __pyx_k_, sizeof(__pyx_k_), 0, 1, 0, 0},\n  {&__pyx_kp_u_01, __pyx_k_01, sizeof(__pyx_k_01), 0, 1, 0, 0},\n  {&__pyx_kp_u_02, __pyx_k_02, sizeof(__pyx_k_02), 0, 1, 0, 0},\n  {&__pyx_kp_u_03, __pyx_k_03, sizeof(__pyx_k_03), 0, 1, 0, 0},\n  {&__pyx_kp_u_04, __pyx_k_04, sizeof(__pyx_k_04), 0, 1, 0, 0},\n  {&__pyx_kp_u_0m, __pyx_k_0m, sizeof(__pyx_k_0m), 0, 1, 0, 0},\n  {&__pyx_kp_u_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 1, 0, 0},\n  {&__pyx_kp_u_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 1, 0, 0},\n  {&__pyx_kp_u_100, __pyx_k_100, sizeof(__pyx_k_100), 0, 1, 0, 0},\n  {&__pyx_kp_u_1234567890qwertyuiopasdfghjklzxc, __pyx_k_1234567890qwertyuiopasdfghjklzxc, sizeof(__pyx_k_1234567890qwertyuiopasdfghjklzxc), 0, 1, 0, 0},\n  {&__pyx_kp_u_1_31m, __pyx_k_1_31m, sizeof(__pyx_k_1_31m), 0, 1, 0, 0},\n  {&__pyx_kp_u_1_32m, __pyx_k_1_32m, sizeof(__pyx_k_1_32m), 0, 1, 0, 0},\n  {&__pyx_kp_u_1_33m, __pyx_k_1_33m, sizeof(__pyx_k_1_33m), 0, 1, 0, 0},\n  {&__pyx_kp_u_1_36m, __pyx_k_1_36m, sizeof(__pyx_k_1_36m), 0, 1, 0, 0},\n  {&__pyx_kp_u_1_91m, __pyx_k_1_91m, sizeof(__pyx_k_1_91m), 0, 1, 0, 0},\n  {&__pyx_kp_u_1_92m, __pyx_k_1_92m, sizeof(__pyx_k_1_92m), 0, 1, 0, 0},\n  {&__pyx_kp_u_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 1, 0, 0},\n  {&__pyx_kp_u_20, __pyx_k_20, sizeof(__pyx_k_20), 0, 1, 0, 0},\n  {&__pyx_kp_u_24241186, __pyx_k_24241186, sizeof(__pyx_k_24241186), 0, 1, 0, 0},\n  {&__pyx_kp_u_2_36m, __pyx_k_2_36m, sizeof(__pyx_k_2_36m), 0, 1, 0, 0},\n  {&__pyx_kp_u_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 1, 0, 0},\n  {&__pyx_kp_u_35m, __pyx_k_35m, sizeof(__pyx_k_35m), 0, 1, 0, 0},\n  {&__pyx_kp_u_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 1, 0, 0},\n  {&__pyx_kp_u_93m_This_Tool_For_Free_Coded_By, __pyx_k_93m_This_Tool_For_Free_Coded_By, sizeof(__pyx_k_93m_This_Tool_For_Free_Coded_By), 0, 1, 0, 0},\n  {&__pyx_kp_u_95m, __pyx_k_95m, sizeof(__pyx_k_95m), 0, 1, 0, 0},\n  {&__pyx_kp_u_95m_2, __pyx_k_95m_2, sizeof(__pyx_k_95m_2), 0, 1, 0, 0},\n  {&__pyx_kp_u_95m_Welcome_To_atssrk_script, __pyx_k_95m_Welcome_To_atssrk_script, sizeof(__pyx_k_95m_Welcome_To_atssrk_script), 0, 1, 0, 0},\n  {&__pyx_n_u_Atssrk001, __pyx_k_Atssrk001, sizeof(__pyx_k_Atssrk001), 0, 1, 0, 1},\n  {&__pyx_kp_u_Atssrk002, __pyx_k_Atssrk002, sizeof(__pyx_k_Atssrk002), 0, 1, 0, 0},\n  {&__pyx_n_s_B, __pyx_k_B, sizeof(__pyx_k_B), 0, 0, 1, 1},\n  {&__pyx_n_s_BLUE, __pyx_k_BLUE, sizeof(__pyx_k_BLUE), 0, 0, 1, 1},\n  {&__pyx_kp_u_Choose, __pyx_k_Choose, sizeof(__pyx_k_Choose), 0, 1, 0, 0},\n  {&__pyx_n_u_Comments, __pyx_k_Comments, sizeof(__pyx_k_Comments), 0, 1, 0, 1},\n  {&__pyx_n_s_E, __pyx_k_E, sizeof(__pyx_k_E), 0, 0, 1, 1},\n  {&__pyx_kp_u_Enter_Pass, __pyx_k_Enter_Pass, sizeof(__pyx_k_Enter_Pass), 0, 1, 0, 0},\n  {&__pyx_n_u_Followers, __pyx_k_Followers, sizeof(__pyx_k_Followers), 0, 1, 0, 1},\n  {&__pyx_n_s_Fore, __pyx_k_Fore, sizeof(__pyx_k_Fore), 0, 0, 1, 1},\n  {&__pyx_n_s_G, __pyx_k_G, sizeof(__pyx_k_G), 0, 0, 1, 1},\n  {&__pyx_n_s_GREEN, __pyx_k_GREEN, sizeof(__pyx_k_GREEN), 0, 0, 1, 1},\n  {&__pyx_n_s_Green, __pyx_k_Green, sizeof(__pyx_k_Green), 0, 0, 1, 1},\n  {&__pyx_kp_u_IG_COMMENTS, __pyx_k_IG_COMMENTS, sizeof(__pyx_k_IG_COMMENTS), 0, 1, 0, 0},\n  {&__pyx_kp_u_IG_Followers, __pyx_k_IG_Followers, sizeof(__pyx_k_IG_Followers), 0, 1, 0, 0},\n  {&__pyx_kp_u_IG_LIKES, __pyx_k_IG_LIKES, sizeof(__pyx_k_IG_LIKES), 0, 1, 0, 0},\n  {&__pyx_kp_u_IG_VIEWS, __pyx_k_IG_VIEWS, sizeof(__pyx_k_IG_VIEWS), 0, 1, 0, 0},\n  {&__pyx_kp_u_INSTAGRAM_atssrk, __pyx_k_INSTAGRAM_atssrk, sizeof(__pyx_k_INSTAGRAM_atssrk), 0, 1, 0, 0},\n  {&__pyx_kp_u_Invalid_API_key, __pyx_k_Invalid_API_key, sizeof(__pyx_k_Invalid_API_key), 0, 1, 0, 0},\n  {&__pyx_n_u_Likes, __pyx_k_Likes, sizeof(__pyx_k_Likes), 0, 1, 0, 1},\n  {&__pyx_kp_u_Only_followers_like_views, __pyx_k_Only_followers_like_views, sizeof(__pyx_k_Only_followers_like_views), 0, 1, 0, 0},\n  {&__pyx_kp_u_Order_ID, __pyx_k_Order_ID, sizeof(__pyx_k_Order_ID), 0, 1, 0, 0},\n  {&__pyx_n_s_P, __pyx_k_P, sizeof(__pyx_k_P), 0, 0, 1, 1},\n  {&__pyx_kp_u_Post_URL, __pyx_k_Post_URL, sizeof(__pyx_k_Post_URL), 0, 1, 0, 0},\n  {&__pyx_n_s_R, __pyx_k_R, sizeof(__pyx_k_R), 0, 0, 1, 1},\n  {&__pyx_n_s_RED, __pyx_k_RED, sizeof(__pyx_k_RED), 0, 0, 1, 1},\n  {&__pyx_n_s_S, __pyx_k_S, sizeof(__pyx_k_S), 0, 0, 1, 1},\n  {&__pyx_n_s_SK, __pyx_k_SK, sizeof(__pyx_k_SK), 0, 0, 1, 1},\n  {&__pyx_kp_u_SUCCESSS, __pyx_k_SUCCESSS, sizeof(__pyx_k_SUCCESSS), 0, 1, 0, 0},\n  {&__pyx_kp_u_Send, __pyx_k_Send, sizeof(__pyx_k_Send), 0, 1, 0, 0},\n  {&__pyx_kp_u_Send_To_Developer, __pyx_k_Send_To_Developer, sizeof(__pyx_k_Send_To_Developer), 0, 1, 0, 0},\n  {&__pyx_kp_u_TeleGram_atssrk002, __pyx_k_TeleGram_atssrk002, sizeof(__pyx_k_TeleGram_atssrk002), 0, 1, 0, 0},\n  {&__pyx_kp_u_Telegram_Channel_https_t_me_atss, __pyx_k_Telegram_Channel_https_t_me_atss, sizeof(__pyx_k_Telegram_Channel_https_t_me_atss), 0, 1, 0, 0},\n  {&__pyx_kp_u_Tg_Username_Atssrk, __pyx_k_Tg_Username_Atssrk, sizeof(__pyx_k_Tg_Username_Atssrk), 0, 1, 0, 0},\n  {&__pyx_n_s_Thread, __pyx_k_Thread, sizeof(__pyx_k_Thread), 0, 0, 1, 1},\n  {&__pyx_n_u_Views, __pyx_k_Views, sizeof(__pyx_k_Views), 0, 1, 0, 1},\n  {&__pyx_n_s_W, __pyx_k_W, sizeof(__pyx_k_W), 0, 0, 1, 1},\n  {&__pyx_kp_u_WRONG_BROTHER, __pyx_k_WRONG_BROTHER, sizeof(__pyx_k_WRONG_BROTHER), 0, 1, 0, 0},\n  {&__pyx_kp_u_Wait_The_Past_Order_Complet, __pyx_k_Wait_The_Past_Order_Complet, sizeof(__pyx_k_Wait_The_Past_Order_Complet), 0, 1, 0, 0},\n  {&__pyx_kp_u_Wrong_Key, __pyx_k_Wrong_Key, sizeof(__pyx_k_Wrong_Key), 0, 1, 0, 0},\n  {&__pyx_n_s_X, __pyx_k_X, sizeof(__pyx_k_X), 0, 0, 1, 1},\n  {&__pyx_n_s_Y, __pyx_k_Y, sizeof(__pyx_k_Y), 0, 0, 1, 1},\n  {&__pyx_n_s_YELLOW, __pyx_k_YELLOW, sizeof(__pyx_k_YELLOW), 0, 0, 1, 1},\n  {&__pyx_kp_u_You_have_active_order_with_this, __pyx_k_You_have_active_order_with_this, sizeof(__pyx_k_You_have_active_order_with_this), 0, 1, 0, 0},\n  {&__pyx_n_s_Z, __pyx_k_Z, sizeof(__pyx_k_Z), 0, 0, 1, 1},\n  {&__pyx_kp_u__22, __pyx_k__22, sizeof(__pyx_k__22), 0, 1, 0, 0},\n  {&__pyx_kp_u__24, __pyx_k__24, sizeof(__pyx_k__24), 0, 1, 0, 0},\n  {&__pyx_kp_u__25, __pyx_k__25, sizeof(__pyx_k__25), 0, 1, 0, 0},\n  {&__pyx_kp_u__26, __pyx_k__26, sizeof(__pyx_k__26), 0, 1, 0, 0},\n  {&__pyx_kp_u__27, __pyx_k__27, sizeof(__pyx_k__27), 0, 1, 0, 0},\n  {&__pyx_kp_u__28, __pyx_k__28, sizeof(__pyx_k__28), 0, 1, 0, 0},\n  {&__pyx_kp_u__29, __pyx_k__29, sizeof(__pyx_k__29), 0, 1, 0, 0},\n  {&__pyx_kp_u__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 1, 0, 0},\n  {&__pyx_kp_u__31, __pyx_k__31, sizeof(__pyx_k__31), 0, 1, 0, 0},\n  {&__pyx_kp_u__32, __pyx_k__32, sizeof(__pyx_k__32), 0, 1, 0, 0},\n  {&__pyx_kp_u__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 1, 0, 0},\n  {&__pyx_n_s__7, __pyx_k__7, sizeof(__pyx_k__7), 0, 0, 1, 1},\n  {&__pyx_n_u_action, __pyx_k_action, sizeof(__pyx_k_action), 0, 1, 0, 1},\n  {&__pyx_n_u_add, __pyx_k_add, sizeof(__pyx_k_add), 0, 1, 0, 1},\n  {&__pyx_n_s_api, __pyx_k_api, sizeof(__pyx_k_api), 0, 0, 1, 1},\n  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},\n  {&__pyx_kp_u_atssrk002, __pyx_k_atssrk002, sizeof(__pyx_k_atssrk002), 0, 1, 0, 0},\n  {&__pyx_n_s_b64decode, __pyx_k_b64decode, sizeof(__pyx_k_b64decode), 0, 0, 1, 1},\n  {&__pyx_n_s_b64encode, __pyx_k_b64encode, sizeof(__pyx_k_b64encode), 0, 0, 1, 1},\n  {&__pyx_n_s_base64, __pyx_k_base64, sizeof(__pyx_k_base64), 0, 0, 1, 1},\n  {&__pyx_n_s_binascii, __pyx_k_binascii, sizeof(__pyx_k_binascii), 0, 0, 1, 1},\n  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},\n  {&__pyx_n_s_choice, __pyx_k_choice, sizeof(__pyx_k_choice), 0, 0, 1, 1},\n  {&__pyx_n_u_clear, __pyx_k_clear, sizeof(__pyx_k_clear), 0, 1, 0, 1},\n  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},\n  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},\n  {&__pyx_n_s_colorama, __pyx_k_colorama, sizeof(__pyx_k_colorama), 0, 0, 1, 1},\n  {&__pyx_n_s_cout, __pyx_k_cout, sizeof(__pyx_k_cout), 0, 0, 1, 1},\n  {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},\n  {&__pyx_n_s_devil, __pyx_k_devil, sizeof(__pyx_k_devil), 0, 0, 1, 1},\n  {&__pyx_n_s_exit, __pyx_k_exit, sizeof(__pyx_k_exit), 0, 0, 1, 1},\n  {&__pyx_n_u_f0a69d73de174d34c66818ff26d0a4c7, __pyx_k_f0a69d73de174d34c66818ff26d0a4c7, sizeof(__pyx_k_f0a69d73de174d34c66818ff26d0a4c7), 0, 1, 0, 1},\n  {&__pyx_n_s_figlet_format, __pyx_k_figlet_format, sizeof(__pyx_k_figlet_format), 0, 0, 1, 1},\n  {&__pyx_n_s_flush, __pyx_k_flush, sizeof(__pyx_k_flush), 0, 0, 1, 1},\n  {&__pyx_n_s_fol, __pyx_k_fol, sizeof(__pyx_k_fol), 0, 0, 1, 1},\n  {&__pyx_n_s_generate_user_agent, __pyx_k_generate_user_agent, sizeof(__pyx_k_generate_user_agent), 0, 0, 1, 1},\n  {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},\n  {&__pyx_n_s_hashlib, __pyx_k_hashlib, sizeof(__pyx_k_hashlib), 0, 0, 1, 1},\n  {&__pyx_n_s_headers, __pyx_k_headers, sizeof(__pyx_k_headers), 0, 0, 1, 1},\n  {&__pyx_kp_u_https_smmgrow_in_api_v2, __pyx_k_https_smmgrow_in_api_v2, sizeof(__pyx_k_https_smmgrow_in_api_v2), 0, 1, 0, 0},\n  {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},\n  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},\n  {&__pyx_n_s_input, __pyx_k_input, sizeof(__pyx_k_input), 0, 0, 1, 1},\n  {&__pyx_n_s_json, __pyx_k_json, sizeof(__pyx_k_json), 0, 0, 1, 1},\n  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},\n  {&__pyx_n_u_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 1, 0, 1},\n  {&__pyx_n_u_link, __pyx_k_link, sizeof(__pyx_k_link), 0, 1, 0, 1},\n  {&__pyx_n_s_logo, __pyx_k_logo, sizeof(__pyx_k_logo), 0, 0, 1, 1},\n  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},\n  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},\n  {&__pyx_n_s_oid, __pyx_k_oid, sizeof(__pyx_k_oid), 0, 0, 1, 1},\n  {&__pyx_kp_u_order, __pyx_k_order, sizeof(__pyx_k_order), 0, 1, 0, 0},\n  {&__pyx_n_u_order_2, __pyx_k_order_2, sizeof(__pyx_k_order_2), 0, 1, 0, 1},\n  {&__pyx_n_s_os, __pyx_k_os, sizeof(__pyx_k_os), 0, 0, 1, 1},\n  {&__pyx_n_s_post, __pyx_k_post, sizeof(__pyx_k_post), 0, 0, 1, 1},\n  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},\n  {&__pyx_n_s_pss, __pyx_k_pss, sizeof(__pyx_k_pss), 0, 0, 1, 1},\n  {&__pyx_n_s_pyfiglet, __pyx_k_pyfiglet, sizeof(__pyx_k_pyfiglet), 0, 0, 1, 1},\n  {&__pyx_n_u_quantity, __pyx_k_quantity, sizeof(__pyx_k_quantity), 0, 1, 0, 1},\n  {&__pyx_n_s_random, __pyx_k_random, sizeof(__pyx_k_random), 0, 0, 1, 1},\n  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},\n  {&__pyx_n_s_requests, __pyx_k_requests, sizeof(__pyx_k_requests), 0, 0, 1, 1},\n  {&__pyx_n_s_rn, __pyx_k_rn, sizeof(__pyx_k_rn), 0, 0, 1, 1},\n  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},\n  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},\n  {&__pyx_n_u_service, __pyx_k_service, sizeof(__pyx_k_service), 0, 1, 0, 1},\n  {&__pyx_n_s_sleep, __pyx_k_sleep, sizeof(__pyx_k_sleep), 0, 0, 1, 1},\n  {&__pyx_n_s_slowprint, __pyx_k_slowprint, sizeof(__pyx_k_slowprint), 0, 0, 1, 1},\n  {&__pyx_n_s_source, __pyx_k_source, sizeof(__pyx_k_source), 0, 0, 1, 1},\n  {&__pyx_kp_s_source_py, __pyx_k_source_py, sizeof(__pyx_k_source_py), 0, 0, 1, 0},\n  {&__pyx_n_s_sped, __pyx_k_sped, sizeof(__pyx_k_sped), 0, 0, 1, 1},\n  {&__pyx_n_s_start_time, __pyx_k_start_time, sizeof(__pyx_k_start_time), 0, 0, 1, 1},\n  {&__pyx_n_s_stdout, __pyx_k_stdout, sizeof(__pyx_k_stdout), 0, 0, 1, 1},\n  {&__pyx_n_s_sys, __pyx_k_sys, sizeof(__pyx_k_sys), 0, 0, 1, 1},\n  {&__pyx_n_s_system, __pyx_k_system, sizeof(__pyx_k_system), 0, 0, 1, 1},\n  {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},\n  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},\n  {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},\n  {&__pyx_n_s_threading, __pyx_k_threading, sizeof(__pyx_k_threading), 0, 0, 1, 1},\n  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},\n  {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},\n  {&__pyx_n_s_unhexlify, __pyx_k_unhexlify, sizeof(__pyx_k_unhexlify), 0, 0, 1, 1},\n  {&__pyx_n_s_url, __pyx_k_url, sizeof(__pyx_k_url), 0, 0, 1, 1},\n  {&__pyx_n_s_urllib3, __pyx_k_urllib3, sizeof(__pyx_k_urllib3), 0, 0, 1, 1},\n  {&__pyx_n_s_urllib_parse, __pyx_k_urllib_parse, sizeof(__pyx_k_urllib_parse), 0, 0, 1, 1},\n  {&__pyx_n_s_urlm, __pyx_k_urlm, sizeof(__pyx_k_urlm), 0, 0, 1, 1},\n  {&__pyx_n_s_user, __pyx_k_user, sizeof(__pyx_k_user), 0, 0, 1, 1},\n  {&__pyx_n_s_user_agent, __pyx_k_user_agent, sizeof(__pyx_k_user_agent), 0, 0, 1, 1},\n  {&__pyx_kp_u_user_agent_2, __pyx_k_user_agent_2, sizeof(__pyx_k_user_agent_2), 0, 1, 0, 0},\n  {&__pyx_n_s_whisper, __pyx_k_whisper, sizeof(__pyx_k_whisper), 0, 0, 1, 1},\n  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},\n  {&__pyx_n_s_xone, __pyx_k_xone, sizeof(__pyx_k_xone), 0, 0, 1, 1},\n  {&__pyx_n_s_yso, __pyx_k_yso, sizeof(__pyx_k_yso), 0, 0, 1, 1},\n  {0, 0, 0, 0, 0, 0, 0}\n};\nstatic CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {\n  __pyx_builtin_input = __Pyx_GetBuiltinName(__pyx_n_s_input); if (!__pyx_builtin_input) __PYX_ERR(0, 56, __pyx_L1_error)\n  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(0, 58, __pyx_L1_error)\n  __pyx_builtin_exit = __Pyx_GetBuiltinName(__pyx_n_s_exit); if (!__pyx_builtin_exit) __PYX_ERR(0, 62, __pyx_L1_error)\n  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 145, __pyx_L1_error)\n  return 0;\n  __pyx_L1_error:;\n  return -1;\n}\n\nstatic CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);\n\n\n  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_u_Telegram_Channel_https_t_me_atss); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 38, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__2);\n  __Pyx_GIVEREF(__pyx_tuple__2);\n\n\n  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_u__3); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 44, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__4);\n  __Pyx_GIVEREF(__pyx_tuple__4);\n\n\n  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_u__5); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 46, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__6);\n  __Pyx_GIVEREF(__pyx_tuple__6);\n\n\n  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_n_u_Atssrk001); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 26, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__8);\n  __Pyx_GIVEREF(__pyx_tuple__8);\n\n\n  __pyx_tuple__9 = PyTuple_Pack(2, __pyx_n_s_s, __pyx_n_s_c); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 29, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__9);\n  __Pyx_GIVEREF(__pyx_tuple__9);\n  __pyx_codeobj__10 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__9, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_source_py, __pyx_n_s_sped, 29, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__10)) __PYX_ERR(0, 29, __pyx_L1_error)\n\n\n  __pyx_codeobj__11 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_source_py, __pyx_n_s_xone, 36, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__11)) __PYX_ERR(0, 36, __pyx_L1_error)\n\n\n  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_int_2); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 59, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__12);\n  __Pyx_GIVEREF(__pyx_tuple__12);\n\n\n  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_n_u_clear); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 60, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__13);\n  __Pyx_GIVEREF(__pyx_tuple__13);\n\n\n  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_u_95m); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 89, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__14);\n  __Pyx_GIVEREF(__pyx_tuple__14);\n\n\n  __pyx_tuple__15 = PyTuple_Pack(2, __pyx_n_s_s, __pyx_n_s_c); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 103, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__15);\n  __Pyx_GIVEREF(__pyx_tuple__15);\n  __pyx_codeobj__16 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__15, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_source_py, __pyx_n_s_slowprint, 103, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__16)) __PYX_ERR(0, 103, __pyx_L1_error)\n\n\n  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_u_93m_This_Tool_For_Free_Coded_By); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 110, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__17);\n  __Pyx_GIVEREF(__pyx_tuple__17);\n\n\n  __pyx_tuple__18 = PyTuple_Pack(2, __pyx_n_s_s, __pyx_n_s_c); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 118, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__18);\n  __Pyx_GIVEREF(__pyx_tuple__18);\n  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_source_py, __pyx_n_s_slowprint, 118, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(0, 118, __pyx_L1_error)\n\n\n  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_u_95m_2); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 125, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__20);\n  __Pyx_GIVEREF(__pyx_tuple__20);\n\n\n  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_u_95m_Welcome_To_atssrk_script); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 126, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__21);\n  __Pyx_GIVEREF(__pyx_tuple__21);\n\n\n  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_u__22); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 128, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__23);\n  __Pyx_GIVEREF(__pyx_tuple__23);\n\n\n  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_u_Wait_The_Past_Order_Complet); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 156, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_tuple__30);\n  __Pyx_GIVEREF(__pyx_tuple__30);\n  __Pyx_RefNannyFinishContext();\n  return 0;\n  __pyx_L1_error:;\n  __Pyx_RefNannyFinishContext();\n  return -1;\n}\n\nstatic CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {\n  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_float_0_01 = PyFloat_FromDouble(0.01); if (unlikely(!__pyx_float_0_01)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_40 = PyInt_FromLong(40); if (unlikely(!__pyx_int_40)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_50 = PyInt_FromLong(50); if (unlikely(!__pyx_int_50)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_100 = PyInt_FromLong(100); if (unlikely(!__pyx_int_100)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_210 = PyInt_FromLong(210); if (unlikely(!__pyx_int_210)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_255 = PyInt_FromLong(255); if (unlikely(!__pyx_int_255)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_278 = PyInt_FromLong(278); if (unlikely(!__pyx_int_278)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_int_312 = PyInt_FromLong(312); if (unlikely(!__pyx_int_312)) __PYX_ERR(0, 4, __pyx_L1_error)\n  return 0;\n  __pyx_L1_error:;\n  return -1;\n}\n\nstatic CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/\nstatic CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/\nstatic CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/\nstatic CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/\nstatic CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/\nstatic CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/\nstatic CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/\n\nstatic int __Pyx_modinit_global_init_code(void) {\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);\n  /*--- Global init code ---*/\n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_variable_export_code(void) {\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);\n  /*--- Variable export code ---*/\n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_function_export_code(void) {\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);\n  /*--- Function export code ---*/\n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_type_init_code(void) {\n  __Pyx_RefNannyDeclarations\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);\n  /*--- Type init code ---*/\n  if (PyType_Ready(&__pyx_type_6source___pyx_scope_struct__genexpr) < 0) __PYX_ERR(0, 145, __pyx_L1_error)\n  #if PY_VERSION_HEX < 0x030800B1\n  __pyx_type_6source___pyx_scope_struct__genexpr.tp_print = 0;\n  #endif\n  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6source___pyx_scope_struct__genexpr.tp_dictoffset && __pyx_type_6source___pyx_scope_struct__genexpr.tp_getattro == PyObject_GenericGetAttr)) {\n    __pyx_type_6source___pyx_scope_struct__genexpr.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;\n  }\n  __pyx_ptype_6source___pyx_scope_struct__genexpr = &__pyx_type_6source___pyx_scope_struct__genexpr;\n  if (PyType_Ready(&__pyx_type_6source___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(0, 174, __pyx_L1_error)\n  #if PY_VERSION_HEX < 0x030800B1\n  __pyx_type_6source___pyx_scope_struct_1_genexpr.tp_print = 0;\n  #endif\n  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6source___pyx_scope_struct_1_genexpr.tp_dictoffset && __pyx_type_6source___pyx_scope_struct_1_genexpr.tp_getattro == PyObject_GenericGetAttr)) {\n    __pyx_type_6source___pyx_scope_struct_1_genexpr.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;\n  }\n  __pyx_ptype_6source___pyx_scope_struct_1_genexpr = &__pyx_type_6source___pyx_scope_struct_1_genexpr;\n  if (PyType_Ready(&__pyx_type_6source___pyx_scope_struct_2_genexpr) < 0) __PYX_ERR(0, 202, __pyx_L1_error)\n  #if PY_VERSION_HEX < 0x030800B1\n  __pyx_type_6source___pyx_scope_struct_2_genexpr.tp_print = 0;\n  #endif\n  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6source___pyx_scope_struct_2_genexpr.tp_dictoffset && __pyx_type_6source___pyx_scope_struct_2_genexpr.tp_getattro == PyObject_GenericGetAttr)) {\n    __pyx_type_6source___pyx_scope_struct_2_genexpr.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;\n  }\n  __pyx_ptype_6source___pyx_scope_struct_2_genexpr = &__pyx_type_6source___pyx_scope_struct_2_genexpr;\n  if (PyType_Ready(&__pyx_type_6source___pyx_scope_struct_3_genexpr) < 0) __PYX_ERR(0, 230, __pyx_L1_error)\n  #if PY_VERSION_HEX < 0x030800B1\n  __pyx_type_6source___pyx_scope_struct_3_genexpr.tp_print = 0;\n  #endif\n  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6source___pyx_scope_struct_3_genexpr.tp_dictoffset && __pyx_type_6source___pyx_scope_struct_3_genexpr.tp_getattro == PyObject_GenericGetAttr)) {\n    __pyx_type_6source___pyx_scope_struct_3_genexpr.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;\n  }\n  __pyx_ptype_6source___pyx_scope_struct_3_genexpr = &__pyx_type_6source___pyx_scope_struct_3_genexpr;\n  __Pyx_RefNannyFinishContext();\n  return 0;\n  __pyx_L1_error:;\n  __Pyx_RefNannyFinishContext();\n  return -1;\n}\n\nstatic int __Pyx_modinit_type_import_code(void) {\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);\n  /*--- Type import code ---*/\n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_variable_import_code(void) {\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);\n  /*--- Variable import code ---*/\n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_function_import_code(void) {\n  __Pyx_RefNannyDeclarations\n  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);\n  /*--- Function import code ---*/\n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\n\n#ifndef CYTHON_NO_PYINIT_EXPORT\n#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC\n#elif PY_MAJOR_VERSION < 3\n#ifdef __cplusplus\n#define __Pyx_PyMODINIT_FUNC extern "C" void\n#else\n#define __Pyx_PyMODINIT_FUNC void\n#endif\n#else\n#ifdef __cplusplus\n#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *\n#else\n#define __Pyx_PyMODINIT_FUNC PyObject *\n#endif\n#endif\n\n\n#if PY_MAJOR_VERSION < 3\n__Pyx_PyMODINIT_FUNC initsource(void) CYTHON_SMALL_CODE; /*proto*/\n__Pyx_PyMODINIT_FUNC initsource(void)\n#else\n__Pyx_PyMODINIT_FUNC PyInit_source(void) CYTHON_SMALL_CODE; /*proto*/\n__Pyx_PyMODINIT_FUNC PyInit_source(void)\n#if CYTHON_PEP489_MULTI_PHASE_INIT\n{\n  return PyModuleDef_Init(&__pyx_moduledef);\n}\nstatic CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {\n    #if PY_VERSION_HEX >= 0x030700A1\n    static PY_INT64_T main_interpreter_id = -1;\n    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);\n    if (main_interpreter_id == -1) {\n        main_interpreter_id = current_id;\n        return (unlikely(current_id == -1)) ? -1 : 0;\n    } else if (unlikely(main_interpreter_id != current_id))\n    #else\n    static PyInterpreterState *main_interpreter = NULL;\n    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;\n    if (!main_interpreter) {\n        main_interpreter = current_interpreter;\n    } else if (unlikely(main_interpreter != current_interpreter))\n    #endif\n    {\n        PyErr_SetString(\n            PyExc_ImportError,\n            "Interpreter change detected - this module can only be loaded into one interpreter per process.");\n        return -1;\n    }\n    return 0;\n}\nstatic CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {\n    PyObject *value = PyObject_GetAttrString(spec, from_name);\n    int result = 0;\n    if (likely(value)) {\n        if (allow_none || value != Py_None) {\n            result = PyDict_SetItemString(moddict, to_name, value);\n        }\n        Py_DECREF(value);\n    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {\n        PyErr_Clear();\n    } else {\n        result = -1;\n    }\n    return result;\n}\nstatic CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {\n    PyObject *module = NULL, *moddict, *modname;\n    if (__Pyx_check_single_interpreter())\n        return NULL;\n    if (__pyx_m)\n        return __Pyx_NewRef(__pyx_m);\n    modname = PyObject_GetAttrString(spec, "name");\n    if (unlikely(!modname)) goto bad;\n    module = PyModule_NewObject(modname);\n    Py_DECREF(modname);\n    if (unlikely(!module)) goto bad;\n    moddict = PyModule_GetDict(module);\n    if (unlikely(!moddict)) goto bad;\n    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;\n    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;\n    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;\n    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;\n    return module;\nbad:\n    Py_XDECREF(module);\n    return NULL;\n}\n\n\nstatic CYTHON_SMALL_CODE int __pyx_pymod_exec_source(PyObject *__pyx_pyinit_module)\n#endif\n#endif\n{\n  PyObject *__pyx_t_1 = NULL;\n  PyObject *__pyx_t_2 = NULL;\n  PyObject *__pyx_t_3 = NULL;\n  PyObject *__pyx_t_4 = NULL;\n  int __pyx_t_5;\n  Py_ssize_t __pyx_t_6;\n  Py_UCS4 __pyx_t_7;\n  int __pyx_t_8;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannyDeclarations\n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n  if (__pyx_m) {\n    if (__pyx_m == __pyx_pyinit_module) return 0;\n    PyErr_SetString(PyExc_RuntimeError, "Module \'source\' has already been imported. Re-initialisation is not supported.");\n    return -1;\n  }\n  #elif PY_MAJOR_VERSION >= 3\n  if (__pyx_m) return __Pyx_NewRef(__pyx_m);\n  #endif\n  #if CYTHON_REFNANNY\n__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");\nif (!__Pyx_RefNanny) {\n  PyErr_Clear();\n  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");\n  if (!__Pyx_RefNanny)\n      Py_FatalError("failed to import \'refnanny\' module");\n}\n#endif\n  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_source(void)", 0);\n  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #ifdef __Pxy_PyFrame_Initialize_Offsets\n  __Pxy_PyFrame_Initialize_Offsets();\n  #endif\n  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 4, __pyx_L1_error)\n  #ifdef __Pyx_CyFunction_USED\n  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_FusedFunction_USED\n  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_Coroutine_USED\n  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_Generator_USED\n  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_AsyncGen_USED\n  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_StopAsyncIteration_USED\n  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n  /*--- Library function declarations ---*/\n  /*--- Threads initialization code ---*/\n  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS\n  PyEval_InitThreads();\n  #endif\n  /*--- Module creation code ---*/\n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n  __pyx_m = __pyx_pyinit_module;\n  Py_INCREF(__pyx_m);\n  #else\n  #if PY_MAJOR_VERSION < 3\n  __pyx_m = Py_InitModule4("source", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);\n  #else\n  __pyx_m = PyModule_Create(&__pyx_moduledef);\n  #endif\n  if (unlikely(!__pyx_m)) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 4, __pyx_L1_error)\n  Py_INCREF(__pyx_d);\n  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 4, __pyx_L1_error)\n  Py_INCREF(__pyx_b);\n  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 4, __pyx_L1_error)\n  Py_INCREF(__pyx_cython_runtime);\n  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  /*--- Initialize various global constants etc. ---*/\n  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)\n  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n  if (__pyx_module_is_main_source) {\n    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  }\n  #if PY_MAJOR_VERSION >= 3\n  {\n    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 4, __pyx_L1_error)\n    if (!PyDict_GetItemString(modules, "source")) {\n      if (unlikely(PyDict_SetItemString(modules, "source", __pyx_m) < 0)) __PYX_ERR(0, 4, __pyx_L1_error)\n    }\n  }\n  #endif\n  /*--- Builtin init code ---*/\n  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  /*--- Constants init code ---*/\n  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  /*--- Global type/function init code ---*/\n  (void)__Pyx_modinit_global_init_code();\n  (void)__Pyx_modinit_variable_export_code();\n  (void)__Pyx_modinit_function_export_code();\n  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(0, 4, __pyx_L1_error)\n  (void)__Pyx_modinit_type_import_code();\n  (void)__Pyx_modinit_variable_import_code();\n  (void)__Pyx_modinit_function_import_code();\n  /*--- Execution code ---*/\n  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)\n  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  #endif\n\n\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_urllib3, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_urllib3, __pyx_t_1) < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_time, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_1) < 0) __PYX_ERR(0, 5, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_hashlib, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_hashlib, __pyx_t_1) < 0) __PYX_ERR(0, 6, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_random, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_random, __pyx_t_1) < 0) __PYX_ERR(0, 7, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_INCREF(__pyx_n_s_unhexlify);\n  __Pyx_GIVEREF(__pyx_n_s_unhexlify);\n  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_unhexlify);\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_binascii, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_unhexlify); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_unhexlify, __pyx_t_1) < 0) __PYX_ERR(0, 8, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_INCREF(__pyx_n_s_b64encode);\n  __Pyx_GIVEREF(__pyx_n_s_b64encode);\n  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_b64encode);\n  __Pyx_INCREF(__pyx_n_s_b64decode);\n  __Pyx_GIVEREF(__pyx_n_s_b64decode);\n  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_b64decode);\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_base64, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_b64encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_b64encode, __pyx_t_2) < 0) __PYX_ERR(0, 9, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_b64decode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_b64decode, __pyx_t_2) < 0) __PYX_ERR(0, 9, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 10, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_INCREF(__pyx_n_s__7);\n  __Pyx_GIVEREF(__pyx_n_s__7);\n  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s__7);\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_urllib_parse, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  if (__pyx_import_star(__pyx_t_2) < 0) __PYX_ERR(0, 10, __pyx_L1_error);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_INCREF(__pyx_n_s_generate_user_agent);\n  __Pyx_GIVEREF(__pyx_n_s_generate_user_agent);\n  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_generate_user_agent);\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_user_agent, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_generate_user_agent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_generate_user_agent, __pyx_t_2) < 0) __PYX_ERR(0, 11, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_requests, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_requests, __pyx_t_1) < 0) __PYX_ERR(0, 12, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_base64, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_base64, __pyx_t_1) < 0) __PYX_ERR(0, 13, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_INCREF(__pyx_n_s_Thread);\n  __Pyx_GIVEREF(__pyx_n_s_Thread);\n  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Thread);\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_threading, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Thread); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_t, __pyx_t_1) < 0) __PYX_ERR(0, 14, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_requests, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_requests, __pyx_t_2) < 0) __PYX_ERR(0, 15, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_os, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_2) < 0) __PYX_ERR(0, 16, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_sys, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sys, __pyx_t_2) < 0) __PYX_ERR(0, 17, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_time, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_2) < 0) __PYX_ERR(0, 18, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_pyfiglet, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyfiglet, __pyx_t_2) < 0) __PYX_ERR(0, 19, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_INCREF(__pyx_n_s_sleep);\n  __Pyx_GIVEREF(__pyx_n_s_sleep);\n  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_sleep);\n  __pyx_t_1 = __Pyx_Import(__pyx_n_s_time, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 20, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_sleep); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sleep, __pyx_t_2) < 0) __PYX_ERR(0, 20, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_INCREF(__pyx_n_s_Fore);\n  __Pyx_GIVEREF(__pyx_n_s_Fore);\n  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Fore);\n  __pyx_t_2 = __Pyx_Import(__pyx_n_s_colorama, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 21, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Fore); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Fore, __pyx_t_1) < 0) __PYX_ERR(0, 21, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Fore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GREEN); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 22, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G, __pyx_t_1) < 0) __PYX_ERR(0, 22, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Fore); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 23, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_RED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_R, __pyx_t_2) < 0) __PYX_ERR(0, 23, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Fore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_YELLOW); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Y, __pyx_t_1) < 0) __PYX_ERR(0, 24, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Fore); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_BLUE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B, __pyx_t_2) < 0) __PYX_ERR(0, 25, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_pyfiglet); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_figlet_format); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 26, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SK, __pyx_t_2) < 0) __PYX_ERR(0, 26, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_6source_1sped, 0, __pyx_n_s_sped, NULL, __pyx_n_s_source, __pyx_d, ((PyObject *)__pyx_codeobj__10)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 29, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sped, __pyx_t_2) < 0) __PYX_ERR(0, 29, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_6source_3xone, 0, __pyx_n_s_xone, NULL, __pyx_n_s_source, __pyx_d, ((PyObject *)__pyx_codeobj__11)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_xone, __pyx_t_2) < 0) __PYX_ERR(0, 36, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sped); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 51, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 51, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_SK); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 51, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = PyNumber_Add(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 51, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 51, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 52, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_generate_user_agent); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 52, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 52, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  if (PyDict_SetItem(__pyx_t_3, __pyx_kp_u_user_agent_2, __pyx_t_2) < 0) __PYX_ERR(0, 52, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_headers, __pyx_t_3) < 0) __PYX_ERR(0, 52, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_yso, __pyx_kp_u_24241186) < 0) __PYX_ERR(0, 53, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Z, __pyx_kp_u_1_31m) < 0) __PYX_ERR(0, 54, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X, __pyx_kp_u_1_36m) < 0) __PYX_ERR(0, 55, __pyx_L1_error)\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Z); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_kp_u_Enter_Pass); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 56, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pss, __pyx_t_3) < 0) __PYX_ERR(0, 56, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pss); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 57, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_yso); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 57, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 57, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  if (__pyx_t_5) {\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_X); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 58, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_kp_u_SUCCESSS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 58, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 58, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_time); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 59, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sleep); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 59, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 60, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_system); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 60, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 60, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n    goto __pyx_L2;\n  }\n\n\n  /*else*/ {\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_Z); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 62, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_kp_u_WRONG_BROTHER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_exit, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 62, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  }\n  __pyx_L2:;\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_cout, __pyx_int_0) < 0) __PYX_ERR(0, 63, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Green, __pyx_kp_u_1_92m) < 0) __PYX_ERR(0, 65, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RED, __pyx_kp_u_1_91m) < 0) __PYX_ERR(0, 66, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Z, __pyx_kp_u_1_31m) < 0) __PYX_ERR(0, 68, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X, __pyx_kp_u_1_33m) < 0) __PYX_ERR(0, 69, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_E, __pyx_kp_u_1_31m) < 0) __PYX_ERR(0, 70, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B, __pyx_kp_u_2_36m) < 0) __PYX_ERR(0, 71, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G, __pyx_kp_u_1_32m) < 0) __PYX_ERR(0, 72, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_S, __pyx_kp_u_1_33m) < 0) __PYX_ERR(0, 73, __pyx_L1_error)\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 74, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_system); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 74, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_user, __pyx_kp_u_1234567890qwertyuiopasdfghjklzxc) < 0) __PYX_ERR(0, 75, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_api, __pyx_kp_u_https_smmgrow_in_api_v2) < 0) __PYX_ERR(0, 76, __pyx_L1_error)\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 77, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_system); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 77, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 77, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_key, __pyx_n_u_f0a69d73de174d34c66818ff26d0a4c7) < 0) __PYX_ERR(0, 78, __pyx_L1_error)\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 79, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_system); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 79, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_R, __pyx_kp_u_1_31m) < 0) __PYX_ERR(0, 81, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B, __pyx_kp_u_2_36m) < 0) __PYX_ERR(0, 82, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G, __pyx_kp_u_1_32m) < 0) __PYX_ERR(0, 83, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_P, __pyx_kp_u_35m) < 0) __PYX_ERR(0, 84, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Y, __pyx_kp_u_1_33m) < 0) __PYX_ERR(0, 85, __pyx_L1_error)\n\n\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_W, __pyx_kp_u_0m) < 0) __PYX_ERR(0, 86, __pyx_L1_error)\n\n\n  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 89, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_6source_5slowprint, 0, __pyx_n_s_slowprint, NULL, __pyx_n_s_source, __pyx_d, ((PyObject *)__pyx_codeobj__16)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 103, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_slowprint, __pyx_t_4) < 0) __PYX_ERR(0, 103, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 110, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_6source_7slowprint, 0, __pyx_n_s_slowprint, NULL, __pyx_n_s_source, __pyx_d, ((PyObject *)__pyx_codeobj__19)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 118, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_slowprint, __pyx_t_4) < 0) __PYX_ERR(0, 118, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 125, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_slowprint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 126, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 128, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = PyTuple_New(10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_6 = 0;\n  __pyx_t_7 = 127;\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_R); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_Only_followers_like_views);\n  __pyx_t_6 += 43;\n  __Pyx_GIVEREF(__pyx_kp_u_Only_followers_like_views);\n  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_kp_u_Only_followers_like_views);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u_TeleGram_atssrk002);\n  __pyx_t_6 += 26;\n  __Pyx_GIVEREF(__pyx_kp_u_TeleGram_atssrk002);\n  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_kp_u_TeleGram_atssrk002);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_Tg_Username_Atssrk);\n  __pyx_t_6 += 28;\n  __Pyx_GIVEREF(__pyx_kp_u_Tg_Username_Atssrk);\n  PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_kp_u_Tg_Username_Atssrk);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u_INSTAGRAM_atssrk);\n  __pyx_t_6 += 24;\n  __Pyx_GIVEREF(__pyx_kp_u_INSTAGRAM_atssrk);\n  PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_kp_u_INSTAGRAM_atssrk);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_R); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u__24);\n  __pyx_t_6 += 36;\n  __Pyx_GIVEREF(__pyx_kp_u__24);\n  PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_kp_u__24);\n  __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_2, 10, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_logo, __pyx_t_3) < 0) __PYX_ERR(0, 129, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_logo); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __pyx_t_2 = PyTuple_New(42); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_6 = 0;\n  __pyx_t_7 = 127;\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__25);\n  __pyx_t_6 += 1;\n  __Pyx_GIVEREF(__pyx_kp_u__25);\n  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_kp_u__25);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_01);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u_01);\n  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_kp_u_01);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__26);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u__26);\n  PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_kp_u__26);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_S); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_IG_Followers);\n  __pyx_t_6 += 13;\n  __Pyx_GIVEREF(__pyx_kp_u_IG_Followers);\n  PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_kp_u_IG_Followers);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__25);\n  __pyx_t_6 += 1;\n  __Pyx_GIVEREF(__pyx_kp_u__25);\n  PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_kp_u__25);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 10, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_02);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u_02);\n  PyTuple_SET_ITEM(__pyx_t_2, 11, __pyx_kp_u_02);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 12, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__26);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u__26);\n  PyTuple_SET_ITEM(__pyx_t_2, 13, __pyx_kp_u__26);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_S); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 14, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_IG_LIKES);\n  __pyx_t_6 += 10;\n  __Pyx_GIVEREF(__pyx_kp_u_IG_LIKES);\n  PyTuple_SET_ITEM(__pyx_t_2, 15, __pyx_kp_u_IG_LIKES);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 16, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__25);\n  __pyx_t_6 += 1;\n  __Pyx_GIVEREF(__pyx_kp_u__25);\n  PyTuple_SET_ITEM(__pyx_t_2, 17, __pyx_kp_u__25);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 18, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_03);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u_03);\n  PyTuple_SET_ITEM(__pyx_t_2, 19, __pyx_kp_u_03);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 20, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__26);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u__26);\n  PyTuple_SET_ITEM(__pyx_t_2, 21, __pyx_kp_u__26);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_S); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 22, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_IG_VIEWS);\n  __pyx_t_6 += 10;\n  __Pyx_GIVEREF(__pyx_kp_u_IG_VIEWS);\n  PyTuple_SET_ITEM(__pyx_t_2, 23, __pyx_kp_u_IG_VIEWS);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 24, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__25);\n  __pyx_t_6 += 1;\n  __Pyx_GIVEREF(__pyx_kp_u__25);\n  PyTuple_SET_ITEM(__pyx_t_2, 25, __pyx_kp_u__25);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 26, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_04);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u_04);\n  PyTuple_SET_ITEM(__pyx_t_2, 27, __pyx_kp_u_04);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 28, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__26);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u__26);\n  PyTuple_SET_ITEM(__pyx_t_2, 29, __pyx_kp_u__26);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_S); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 30, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u_IG_COMMENTS);\n  __pyx_t_6 += 13;\n  __Pyx_GIVEREF(__pyx_kp_u_IG_COMMENTS);\n  PyTuple_SET_ITEM(__pyx_t_2, 31, __pyx_kp_u_IG_COMMENTS);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 32, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__25);\n  __pyx_t_6 += 1;\n  __Pyx_GIVEREF(__pyx_kp_u__25);\n  PyTuple_SET_ITEM(__pyx_t_2, 33, __pyx_kp_u__25);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_B); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 34, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u__27);\n  __pyx_t_6 += 1;\n  __Pyx_GIVEREF(__pyx_kp_u__27);\n  PyTuple_SET_ITEM(__pyx_t_2, 35, __pyx_kp_u__27);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_S); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 36, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u__27);\n  __pyx_t_6 += 1;\n  __Pyx_GIVEREF(__pyx_kp_u__27);\n  PyTuple_SET_ITEM(__pyx_t_2, 37, __pyx_kp_u__27);\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n  __Pyx_GIVEREF(__pyx_t_3);\n  PyTuple_SET_ITEM(__pyx_t_2, 38, __pyx_t_3);\n  __pyx_t_3 = 0;\n  __Pyx_INCREF(__pyx_kp_u__26);\n  __pyx_t_6 += 2;\n  __Pyx_GIVEREF(__pyx_kp_u__26);\n  PyTuple_SET_ITEM(__pyx_t_2, 39, __pyx_kp_u__26);\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n  __Pyx_GIVEREF(__pyx_t_4);\n  PyTuple_SET_ITEM(__pyx_t_2, 40, __pyx_t_4);\n  __pyx_t_4 = 0;\n  __Pyx_INCREF(__pyx_kp_u_Choose);\n  __pyx_t_6 += 11;\n  __Pyx_GIVEREF(__pyx_kp_u_Choose);\n  PyTuple_SET_ITEM(__pyx_t_2, 41, __pyx_kp_u_Choose);\n  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_2, 42, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_devil, __pyx_t_2) < 0) __PYX_ERR(0, 136, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_devil); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 141, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_8 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_kp_u_1, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 141, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  if (!__pyx_t_8) {\n  } else {\n    __pyx_t_5 = __pyx_t_8;\n    goto __pyx_L4_bool_binop_done;\n  }\n  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_devil); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 141, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  __pyx_t_8 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_kp_u_01, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 141, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n  __pyx_t_5 = __pyx_t_8;\n  __pyx_L4_bool_binop_done:;\n  if (__pyx_t_5) {\n\n\n    __pyx_t_2 = PyTuple_New(11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_6 = 0;\n    __pyx_t_7 = 127;\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_B); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n    __Pyx_GIVEREF(__pyx_t_3);\n    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);\n    __pyx_t_3 = 0;\n    __Pyx_INCREF(__pyx_kp_u__25);\n    __pyx_t_6 += 1;\n    __Pyx_GIVEREF(__pyx_kp_u__25);\n    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_kp_u__25);\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __Pyx_INCREF(__pyx_kp_u__28);\n    __pyx_t_7 = (65535 > __pyx_t_7) ? 65535 : __pyx_t_7;\n    __pyx_t_6 += 1;\n    __Pyx_GIVEREF(__pyx_kp_u__28);\n    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_kp_u__28);\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_B); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n    __Pyx_GIVEREF(__pyx_t_3);\n    PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_3);\n    __pyx_t_3 = 0;\n    __Pyx_INCREF(__pyx_kp_u__26);\n    __pyx_t_6 += 2;\n    __Pyx_GIVEREF(__pyx_kp_u__26);\n    PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_kp_u__26);\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_S); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __Pyx_INCREF(__pyx_kp_u_Post_URL);\n    __pyx_t_6 += 9;\n    __Pyx_GIVEREF(__pyx_kp_u_Post_URL);\n    PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_kp_u_Post_URL);\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_E); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n    __Pyx_GIVEREF(__pyx_t_3);\n    PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_t_3);\n    __pyx_t_3 = 0;\n    __Pyx_INCREF(__pyx_kp_u__29);\n    __pyx_t_6 += 4;\n    __Pyx_GIVEREF(__pyx_kp_u__29);\n    PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_kp_u__29);\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_2, 10, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_2, 11, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    if (PyDict_SetItem(__pyx_d, __pyx_n_s_url, __pyx_t_2) < 0) __PYX_ERR(0, 142, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n    if (PyDict_SetItem(__pyx_d, __pyx_n_s_fol, __pyx_int_0) < 0) __PYX_ERR(0, 143, __pyx_L1_error)\n\n\n    while (1) {\n\n\n      __pyx_t_2 = __pyx_pf_6source_8genexpr(NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 145, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __pyx_t_4 = __Pyx_Generator_Next(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 145, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_2 = PyUnicode_Join(__pyx_kp_u__3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 145, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 145, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_rn, __pyx_t_4) < 0) __PYX_ERR(0, 145, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_url); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 146, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 146, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __pyx_t_3 = PyNumber_Add(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 146, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_urlm, __pyx_t_3) < 0) __PYX_ERR(0, 146, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_id, __pyx_int_210) < 0) __PYX_ERR(0, 147, __pyx_L1_error)\n\n\n      __pyx_t_3 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 149, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_key); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 149, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_key, __pyx_t_2) < 0) __PYX_ERR(0, 149, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_action, __pyx_n_u_add) < 0) __PYX_ERR(0, 149, __pyx_L1_error)\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_id); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_service, __pyx_t_2) < 0) __PYX_ERR(0, 149, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_urlm); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 152, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_link, __pyx_t_2) < 0) __PYX_ERR(0, 149, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_quantity, __pyx_kp_u_10) < 0) __PYX_ERR(0, 149, __pyx_L1_error)\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_data, __pyx_t_3) < 0) __PYX_ERR(0, 148, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_requests); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_post); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_api); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_GIVEREF(__pyx_t_3);\n      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);\n      __pyx_t_3 = 0;\n      __pyx_t_3 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_data); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_data, __pyx_t_1) < 0) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_headers); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_headers, __pyx_t_1) < 0) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_whisper, __pyx_t_1) < 0) __PYX_ERR(0, 154, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_whisper); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 155, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_text); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 155, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_You_have_active_order_with_this, __pyx_t_3, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 155, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_8 = (__pyx_t_5 != 0);\n      if (__pyx_t_8) {\n\n\n        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n      }\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_whisper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_text); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 157, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_8 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_order, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 157, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_5 = (__pyx_t_8 != 0);\n      if (__pyx_t_5) {\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_fol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 158, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_10, 10, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 158, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_fol, __pyx_t_3) < 0) __PYX_ERR(0, 158, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_time); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_time); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 159, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {\n          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);\n          if (likely(__pyx_t_1)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);\n            __Pyx_INCREF(__pyx_t_1);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_4, function);\n          }\n        }\n        __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_4);\n        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;\n        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 159, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_start_time, __pyx_t_3) < 0) __PYX_ERR(0, 159, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_time); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 160, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sleep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 160, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {\n          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);\n          if (likely(__pyx_t_4)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);\n            __Pyx_INCREF(__pyx_t_4);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_1, function);\n          }\n        }\n        __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_int_40) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_int_40);\n        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 160, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_whisper); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 161, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_json); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 161, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {\n          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);\n          if (likely(__pyx_t_1)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);\n            __Pyx_INCREF(__pyx_t_1);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_4, function);\n          }\n        }\n        __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_4);\n        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;\n        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 161, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_3, __pyx_n_u_order_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 161, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 161, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_oid, __pyx_t_3) < 0) __PYX_ERR(0, 161, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n        __pyx_t_3 = PyTuple_New(18); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_6 = 0;\n        __pyx_t_7 = 127;\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Order_ID);\n        __pyx_t_7 = (65535 > __pyx_t_7) ? 65535 : __pyx_t_7;\n        __pyx_t_6 += 13;\n        __Pyx_GIVEREF(__pyx_kp_u_Order_ID);\n        PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_kp_u_Order_ID);\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_E); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u__29);\n        __pyx_t_6 += 4;\n        __Pyx_GIVEREF(__pyx_kp_u__29);\n        PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_kp_u__29);\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_B); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_oid); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u__31);\n        __pyx_t_6 += 1;\n        __Pyx_GIVEREF(__pyx_kp_u__31);\n        PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_kp_u__31);\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_E); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_3, 7, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u__32);\n        __pyx_t_6 += 2;\n        __Pyx_GIVEREF(__pyx_kp_u__32);\n        PyTuple_SET_ITEM(__pyx_t_3, 8, __pyx_kp_u__32);\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_3, 9, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Send);\n        __pyx_t_6 += 5;\n        __Pyx_GIVEREF(__pyx_kp_u_Send);\n        PyTuple_SET_ITEM(__pyx_t_3, 10, __pyx_kp_u_Send);\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_E); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_3, 11, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u__29);\n        __pyx_t_6 += 4;\n        __Pyx_GIVEREF(__pyx_kp_u__29);\n        PyTuple_SET_ITEM(__pyx_t_3, 12, __pyx_kp_u__29);\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_B); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_3, 13, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_fol); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_3, 14, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u__31);\n        __pyx_t_6 += 1;\n        __Pyx_GIVEREF(__pyx_kp_u__31);\n        PyTuple_SET_ITEM(__pyx_t_3, 15, __pyx_kp_u__31);\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_3, 16, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_n_u_Followers);\n        __pyx_t_6 += 9;\n        __Pyx_GIVEREF(__pyx_n_u_Followers);\n        PyTuple_SET_ITEM(__pyx_t_3, 17, __pyx_n_u_Followers);\n        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_3, 18, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n        __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 162, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n      }\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_whisper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 164, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_text); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 164, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_Invalid_API_key, __pyx_t_4, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 164, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __pyx_t_8 = (__pyx_t_5 != 0);\n      if (__pyx_t_8) {\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_E); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = __Pyx_PyUnicode_Concat(__pyx_t_3, __pyx_kp_u_Wrong_Key); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n        __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 166, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_6 = 0;\n        __pyx_t_7 = 127;\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_B); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 166, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Send_To_Developer);\n        __pyx_t_6 += 26;\n        __Pyx_GIVEREF(__pyx_kp_u_Send_To_Developer);\n        PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_kp_u_Send_To_Developer);\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 166, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u_atssrk002);\n        __pyx_t_6 += 10;\n        __Pyx_GIVEREF(__pyx_kp_u_atssrk002);\n        PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_kp_u_atssrk002);\n        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 166, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 166, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n        __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 167, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n        goto __pyx_L10;\n      }\n\n\n      /*else*/ {\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_whisper); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 169, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 169, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {\n          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);\n          if (likely(__pyx_t_4)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);\n            __Pyx_INCREF(__pyx_t_4);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_1, function);\n          }\n        }\n        __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_1);\n        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 169, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 169, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      }\n      __pyx_L10:;\n    }\n\n\n  }\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_devil); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 170, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_kp_u_2, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 170, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  if (!__pyx_t_5) {\n  } else {\n    __pyx_t_8 = __pyx_t_5;\n    goto __pyx_L12_bool_binop_done;\n  }\n  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_devil); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 170, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_1);\n  __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_kp_u_02, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 170, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n  __pyx_t_8 = __pyx_t_5;\n  __pyx_L12_bool_binop_done:;\n  if (__pyx_t_8) {\n\n\n    __pyx_t_1 = PyTuple_New(11); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __pyx_t_6 = 0;\n    __pyx_t_7 = 127;\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __Pyx_INCREF(__pyx_kp_u__25);\n    __pyx_t_6 += 1;\n    __Pyx_GIVEREF(__pyx_kp_u__25);\n    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u__25);\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n    __Pyx_GIVEREF(__pyx_t_3);\n    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_3);\n    __pyx_t_3 = 0;\n    __Pyx_INCREF(__pyx_kp_u__28);\n    __pyx_t_7 = (65535 > __pyx_t_7) ? 65535 : __pyx_t_7;\n    __pyx_t_6 += 1;\n    __Pyx_GIVEREF(__pyx_kp_u__28);\n    PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_kp_u__28);\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __Pyx_INCREF(__pyx_kp_u__26);\n    __pyx_t_6 += 2;\n    __Pyx_GIVEREF(__pyx_kp_u__26);\n    PyTuple_SET_ITEM(__pyx_t_1, 5, __pyx_kp_u__26);\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_S); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n    __Pyx_GIVEREF(__pyx_t_3);\n    PyTuple_SET_ITEM(__pyx_t_1, 6, __pyx_t_3);\n    __pyx_t_3 = 0;\n    __Pyx_INCREF(__pyx_kp_u_Post_URL);\n    __pyx_t_6 += 9;\n    __Pyx_GIVEREF(__pyx_kp_u_Post_URL);\n    PyTuple_SET_ITEM(__pyx_t_1, 7, __pyx_kp_u_Post_URL);\n    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_E); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_1, 8, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __Pyx_INCREF(__pyx_kp_u__29);\n    __pyx_t_6 += 4;\n    __Pyx_GIVEREF(__pyx_kp_u__29);\n    PyTuple_SET_ITEM(__pyx_t_1, 9, __pyx_kp_u__29);\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n    __Pyx_GIVEREF(__pyx_t_3);\n    PyTuple_SET_ITEM(__pyx_t_1, 10, __pyx_t_3);\n    __pyx_t_3 = 0;\n    __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_1, 11, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    if (PyDict_SetItem(__pyx_d, __pyx_n_s_url, __pyx_t_1) < 0) __PYX_ERR(0, 171, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n    if (PyDict_SetItem(__pyx_d, __pyx_n_s_fol, __pyx_int_0) < 0) __PYX_ERR(0, 172, __pyx_L1_error)\n\n\n    while (1) {\n\n\n      __pyx_t_1 = __pyx_pf_6source_11genexpr(NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 174, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __pyx_t_3 = __Pyx_Generator_Next(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 174, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_1 = PyUnicode_Join(__pyx_kp_u__3, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 174, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 174, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_rn, __pyx_t_3) < 0) __PYX_ERR(0, 174, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_url); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 175, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_rn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 175, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 175, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_urlm, __pyx_t_4) < 0) __PYX_ERR(0, 175, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_id, __pyx_int_255) < 0) __PYX_ERR(0, 176, __pyx_L1_error)\n\n\n      __pyx_t_4 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 178, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_key); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 178, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_key, __pyx_t_1) < 0) __PYX_ERR(0, 178, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_action, __pyx_n_u_add) < 0) __PYX_ERR(0, 178, __pyx_L1_error)\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 180, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_service, __pyx_t_1) < 0) __PYX_ERR(0, 178, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_urlm); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 181, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_link, __pyx_t_1) < 0) __PYX_ERR(0, 178, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_quantity, __pyx_kp_u_20) < 0) __PYX_ERR(0, 178, __pyx_L1_error)\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_data, __pyx_t_4) < 0) __PYX_ERR(0, 177, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_requests); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_post); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_api); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_GIVEREF(__pyx_t_4);\n      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);\n      __pyx_t_4 = 0;\n      __pyx_t_4 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_data); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_data, __pyx_t_2) < 0) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_headers); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_headers, __pyx_t_2) < 0) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_whisper, __pyx_t_2) < 0) __PYX_ERR(0, 183, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_whisper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_text); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 184, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_8 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_You_have_active_order_with_this, __pyx_t_4, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 184, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __pyx_t_5 = (__pyx_t_8 != 0);\n      if (__pyx_t_5) {\n\n\n        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 185, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n      }\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_whisper); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 186, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_text); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 186, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_order, __pyx_t_2, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 186, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_8 = (__pyx_t_5 != 0);\n      if (__pyx_t_8) {\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_fol); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 187, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_20, 20, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 187, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_fol, __pyx_t_4) < 0) __PYX_ERR(0, 187, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 188, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sleep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 188, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {\n          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);\n          if (likely(__pyx_t_2)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);\n            __Pyx_INCREF(__pyx_t_2);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_3, function);\n          }\n        }\n        __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_int_20) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_int_20);\n        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 188, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_whisper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 189, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_json); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 189, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {\n          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);\n          if (likely(__pyx_t_3)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);\n            __Pyx_INCREF(__pyx_t_3);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_2, function);\n          }\n        }\n        __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);\n        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 189, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_u_order_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 189, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 189, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_oid, __pyx_t_4) < 0) __PYX_ERR(0, 189, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n        __pyx_t_4 = PyTuple_New(18); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_6 = 0;\n        __pyx_t_7 = 127;\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_G); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Order_ID);\n        __pyx_t_7 = (65535 > __pyx_t_7) ? 65535 : __pyx_t_7;\n        __pyx_t_6 += 13;\n        __Pyx_GIVEREF(__pyx_kp_u_Order_ID);\n        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_kp_u_Order_ID);\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_E); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u__29);\n        __pyx_t_6 += 4;\n        __Pyx_GIVEREF(__pyx_kp_u__29);\n        PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_kp_u__29);\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_oid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u__31);\n        __pyx_t_6 += 1;\n        __Pyx_GIVEREF(__pyx_kp_u__31);\n        PyTuple_SET_ITEM(__pyx_t_4, 6, __pyx_kp_u__31);\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_E); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_4, 7, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u__32);\n        __pyx_t_6 += 2;\n        __Pyx_GIVEREF(__pyx_kp_u__32);\n        PyTuple_SET_ITEM(__pyx_t_4, 8, __pyx_kp_u__32);\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_4, 9, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Send);\n        __pyx_t_6 += 5;\n        __Pyx_GIVEREF(__pyx_kp_u_Send);\n        PyTuple_SET_ITEM(__pyx_t_4, 10, __pyx_kp_u_Send);\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_E); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_4, 11, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u__29);\n        __pyx_t_6 += 4;\n        __Pyx_GIVEREF(__pyx_kp_u__29);\n        PyTuple_SET_ITEM(__pyx_t_4, 12, __pyx_kp_u__29);\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_4, 13, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_fol); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_4, 14, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u__31);\n        __pyx_t_6 += 1;\n        __Pyx_GIVEREF(__pyx_kp_u__31);\n        PyTuple_SET_ITEM(__pyx_t_4, 15, __pyx_kp_u__31);\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_4, 16, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_n_u_Likes);\n        __pyx_t_6 += 5;\n        __Pyx_GIVEREF(__pyx_n_u_Likes);\n        PyTuple_SET_ITEM(__pyx_t_4, 17, __pyx_n_u_Likes);\n        __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_4, 18, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 190, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n      }\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_whisper); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 192, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_text); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 192, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __pyx_t_8 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_Invalid_API_key, __pyx_t_2, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 192, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_5 = (__pyx_t_8 != 0);\n      if (__pyx_t_5) {\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_E); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 193, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = __Pyx_PyUnicode_Concat(__pyx_t_4, __pyx_kp_u_Wrong_Key); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 193, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n        __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 194, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_6 = 0;\n        __pyx_t_7 = 127;\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 194, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 194, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Send_To_Developer);\n        __pyx_t_6 += 26;\n        __Pyx_GIVEREF(__pyx_kp_u_Send_To_Developer);\n        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_kp_u_Send_To_Developer);\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 194, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 194, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Atssrk002);\n        __pyx_t_6 += 10;\n        __Pyx_GIVEREF(__pyx_kp_u_Atssrk002);\n        PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_kp_u_Atssrk002);\n        __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_4, 4, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 194, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 194, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n        __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 195, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n        goto __pyx_L18;\n      }\n\n\n      /*else*/ {\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_whisper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_json); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 197, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {\n          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);\n          if (likely(__pyx_t_2)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);\n            __Pyx_INCREF(__pyx_t_2);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_3, function);\n          }\n        }\n        __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);\n        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 197, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 197, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      }\n      __pyx_L18:;\n    }\n\n\n  }\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_devil); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 198, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_8 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_kp_u_3, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 198, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  if (!__pyx_t_8) {\n  } else {\n    __pyx_t_5 = __pyx_t_8;\n    goto __pyx_L20_bool_binop_done;\n  }\n  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_devil); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 198, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  __pyx_t_8 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_kp_u_03, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 198, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n  __pyx_t_5 = __pyx_t_8;\n  __pyx_L20_bool_binop_done:;\n  if (__pyx_t_5) {\n\n\n    __pyx_t_3 = PyTuple_New(11); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __pyx_t_6 = 0;\n    __pyx_t_7 = 127;\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_B); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n    __Pyx_GIVEREF(__pyx_t_2);\n    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);\n    __pyx_t_2 = 0;\n    __Pyx_INCREF(__pyx_kp_u__25);\n    __pyx_t_6 += 1;\n    __Pyx_GIVEREF(__pyx_kp_u__25);\n    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_kp_u__25);\n    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_G); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __Pyx_INCREF(__pyx_kp_u__28);\n    __pyx_t_7 = (65535 > __pyx_t_7) ? 65535 : __pyx_t_7;\n    __pyx_t_6 += 1;\n    __Pyx_GIVEREF(__pyx_kp_u__28);\n    PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_kp_u__28);\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_B); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n    __Pyx_GIVEREF(__pyx_t_2);\n    PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_t_2);\n    __pyx_t_2 = 0;\n    __Pyx_INCREF(__pyx_kp_u__26);\n    __pyx_t_6 += 2;\n    __Pyx_GIVEREF(__pyx_kp_u__26);\n    PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_kp_u__26);\n    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_S); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __Pyx_INCREF(__pyx_kp_u_Post_URL);\n    __pyx_t_6 += 9;\n    __Pyx_GIVEREF(__pyx_kp_u_Post_URL);\n    PyTuple_SET_ITEM(__pyx_t_3, 7, __pyx_kp_u_Post_URL);\n    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_E); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n    __Pyx_GIVEREF(__pyx_t_2);\n    PyTuple_SET_ITEM(__pyx_t_3, 8, __pyx_t_2);\n    __pyx_t_2 = 0;\n    __Pyx_INCREF(__pyx_kp_u__29);\n    __pyx_t_6 += 4;\n    __Pyx_GIVEREF(__pyx_kp_u__29);\n    PyTuple_SET_ITEM(__pyx_t_3, 9, __pyx_kp_u__29);\n    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_G); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n    __Pyx_GIVEREF(__pyx_t_4);\n    PyTuple_SET_ITEM(__pyx_t_3, 10, __pyx_t_4);\n    __pyx_t_4 = 0;\n    __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_3, 11, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_3);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    if (PyDict_SetItem(__pyx_d, __pyx_n_s_url, __pyx_t_3) < 0) __PYX_ERR(0, 199, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n    if (PyDict_SetItem(__pyx_d, __pyx_n_s_fol, __pyx_int_0) < 0) __PYX_ERR(0, 200, __pyx_L1_error)\n\n\n    while (1) {\n\n\n      __pyx_t_3 = __pyx_pf_6source_14genexpr(NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 202, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __pyx_t_4 = __Pyx_Generator_Next(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 202, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_3 = PyUnicode_Join(__pyx_kp_u__3, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 202, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 202, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_rn, __pyx_t_4) < 0) __PYX_ERR(0, 202, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_url); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 203, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_rn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 203, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 203, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_urlm, __pyx_t_2) < 0) __PYX_ERR(0, 203, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_id, __pyx_int_278) < 0) __PYX_ERR(0, 204, __pyx_L1_error)\n\n\n      __pyx_t_2 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_key); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 206, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_key, __pyx_t_3) < 0) __PYX_ERR(0, 206, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_action, __pyx_n_u_add) < 0) __PYX_ERR(0, 206, __pyx_L1_error)\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_id); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 208, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_service, __pyx_t_3) < 0) __PYX_ERR(0, 206, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_urlm); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_link, __pyx_t_3) < 0) __PYX_ERR(0, 206, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_quantity, __pyx_kp_u_100) < 0) __PYX_ERR(0, 206, __pyx_L1_error)\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_data, __pyx_t_2) < 0) __PYX_ERR(0, 205, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_requests); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_post); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_api); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_GIVEREF(__pyx_t_2);\n      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);\n      __pyx_t_2 = 0;\n      __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_data); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_data, __pyx_t_1) < 0) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_headers); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_headers, __pyx_t_1) < 0) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_whisper, __pyx_t_1) < 0) __PYX_ERR(0, 211, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_whisper); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 212, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_text); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 212, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_You_have_active_order_with_this, __pyx_t_2, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 212, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_8 = (__pyx_t_5 != 0);\n      if (__pyx_t_8) {\n\n\n        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 213, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n      }\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_whisper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 214, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_text); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 214, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_8 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_order, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 214, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_5 = (__pyx_t_8 != 0);\n      if (__pyx_t_5) {\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_fol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 215, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_100, 0x64, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 215, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_fol, __pyx_t_2) < 0) __PYX_ERR(0, 215, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_time); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 216, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sleep); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 216, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {\n          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);\n          if (likely(__pyx_t_1)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);\n            __Pyx_INCREF(__pyx_t_1);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_4, function);\n          }\n        }\n        __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_1, __pyx_int_20) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_int_20);\n        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;\n        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 216, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_whisper); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 217, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 217, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {\n          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);\n          if (likely(__pyx_t_4)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);\n            __Pyx_INCREF(__pyx_t_4);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_1, function);\n          }\n        }\n        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_1);\n        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 217, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_u_order_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 217, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 217, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_oid, __pyx_t_2) < 0) __PYX_ERR(0, 217, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n        __pyx_t_2 = PyTuple_New(18); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_6 = 0;\n        __pyx_t_7 = 127;\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Order_ID);\n        __pyx_t_7 = (65535 > __pyx_t_7) ? 65535 : __pyx_t_7;\n        __pyx_t_6 += 13;\n        __Pyx_GIVEREF(__pyx_kp_u_Order_ID);\n        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_kp_u_Order_ID);\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_E); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u__29);\n        __pyx_t_6 += 4;\n        __Pyx_GIVEREF(__pyx_kp_u__29);\n        PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_kp_u__29);\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_B); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_oid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u__31);\n        __pyx_t_6 += 1;\n        __Pyx_GIVEREF(__pyx_kp_u__31);\n        PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_kp_u__31);\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_E); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u__32);\n        __pyx_t_6 += 2;\n        __Pyx_GIVEREF(__pyx_kp_u__32);\n        PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_kp_u__32);\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Send);\n        __pyx_t_6 += 5;\n        __Pyx_GIVEREF(__pyx_kp_u_Send);\n        PyTuple_SET_ITEM(__pyx_t_2, 10, __pyx_kp_u_Send);\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_E); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_2, 11, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u__29);\n        __pyx_t_6 += 4;\n        __Pyx_GIVEREF(__pyx_kp_u__29);\n        PyTuple_SET_ITEM(__pyx_t_2, 12, __pyx_kp_u__29);\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_B); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_2, 13, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_fol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_2, 14, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u__31);\n        __pyx_t_6 += 1;\n        __Pyx_GIVEREF(__pyx_kp_u__31);\n        PyTuple_SET_ITEM(__pyx_t_2, 15, __pyx_kp_u__31);\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_2, 16, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_n_u_Views);\n        __pyx_t_6 += 5;\n        __Pyx_GIVEREF(__pyx_n_u_Views);\n        PyTuple_SET_ITEM(__pyx_t_2, 17, __pyx_n_u_Views);\n        __pyx_t_1 = __Pyx_PyUnicode_Join(__pyx_t_2, 18, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 218, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n      }\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_whisper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 220, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_text); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 220, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_Invalid_API_key, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 220, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_8 = (__pyx_t_5 != 0);\n      if (__pyx_t_8) {\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_E); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 221, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 221, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = __Pyx_PyUnicode_Concat(__pyx_t_2, __pyx_kp_u_Wrong_Key); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 221, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 221, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n        __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_6 = 0;\n        __pyx_t_7 = 127;\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_B); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 222, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 222, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);\n        __Pyx_GIVEREF(__pyx_t_4);\n        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);\n        __pyx_t_4 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Send_To_Developer);\n        __pyx_t_6 += 26;\n        __Pyx_GIVEREF(__pyx_kp_u_Send_To_Developer);\n        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_kp_u_Send_To_Developer);\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_G); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 222, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 222, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n        __Pyx_GIVEREF(__pyx_t_1);\n        PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);\n        __pyx_t_1 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Atssrk002);\n        __pyx_t_6 += 10;\n        __Pyx_GIVEREF(__pyx_kp_u_Atssrk002);\n        PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_kp_u_Atssrk002);\n        __pyx_t_1 = __Pyx_PyUnicode_Join(__pyx_t_2, 4, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 222, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 223, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n        goto __pyx_L26;\n      }\n\n\n      /*else*/ {\n        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_whisper); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 225, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_json); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 225, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {\n          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);\n          if (likely(__pyx_t_1)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);\n            __Pyx_INCREF(__pyx_t_1);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_4, function);\n          }\n        }\n        __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_4);\n        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;\n        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 225, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 225, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      }\n      __pyx_L26:;\n    }\n\n\n  }\n\n\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_devil); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 226, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_4, __pyx_kp_u_4, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 226, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  if (!__pyx_t_5) {\n  } else {\n    __pyx_t_8 = __pyx_t_5;\n    goto __pyx_L28_bool_binop_done;\n  }\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_devil); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 226, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_4, __pyx_kp_u_04, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 226, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_8 = __pyx_t_5;\n  __pyx_L28_bool_binop_done:;\n  if (__pyx_t_8) {\n\n\n    __pyx_t_4 = PyTuple_New(11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __pyx_t_6 = 0;\n    __pyx_t_7 = 127;\n    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n    __Pyx_GIVEREF(__pyx_t_1);\n    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);\n    __pyx_t_1 = 0;\n    __Pyx_INCREF(__pyx_kp_u__25);\n    __pyx_t_6 += 1;\n    __Pyx_GIVEREF(__pyx_kp_u__25);\n    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_kp_u__25);\n    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n    __Pyx_GIVEREF(__pyx_t_2);\n    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_2);\n    __pyx_t_2 = 0;\n    __Pyx_INCREF(__pyx_kp_u__28);\n    __pyx_t_7 = (65535 > __pyx_t_7) ? 65535 : __pyx_t_7;\n    __pyx_t_6 += 1;\n    __Pyx_GIVEREF(__pyx_kp_u__28);\n    PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_kp_u__28);\n    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n    __Pyx_GIVEREF(__pyx_t_1);\n    PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_t_1);\n    __pyx_t_1 = 0;\n    __Pyx_INCREF(__pyx_kp_u__26);\n    __pyx_t_6 += 2;\n    __Pyx_GIVEREF(__pyx_kp_u__26);\n    PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_kp_u__26);\n    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_S); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n    __Pyx_GIVEREF(__pyx_t_2);\n    PyTuple_SET_ITEM(__pyx_t_4, 6, __pyx_t_2);\n    __pyx_t_2 = 0;\n    __Pyx_INCREF(__pyx_kp_u_Post_URL);\n    __pyx_t_6 += 9;\n    __Pyx_GIVEREF(__pyx_kp_u_Post_URL);\n    PyTuple_SET_ITEM(__pyx_t_4, 7, __pyx_kp_u_Post_URL);\n    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_E); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);\n    __Pyx_GIVEREF(__pyx_t_1);\n    PyTuple_SET_ITEM(__pyx_t_4, 8, __pyx_t_1);\n    __pyx_t_1 = 0;\n    __Pyx_INCREF(__pyx_kp_u__29);\n    __pyx_t_6 += 4;\n    __Pyx_GIVEREF(__pyx_kp_u__29);\n    PyTuple_SET_ITEM(__pyx_t_4, 9, __pyx_kp_u__29);\n    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_1);\n    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n    __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n    __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n    __Pyx_GIVEREF(__pyx_t_2);\n    PyTuple_SET_ITEM(__pyx_t_4, 10, __pyx_t_2);\n    __pyx_t_2 = 0;\n    __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_4, 11, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_4);\n    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n    if (PyDict_SetItem(__pyx_d, __pyx_n_s_url, __pyx_t_4) < 0) __PYX_ERR(0, 227, __pyx_L1_error)\n    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n    if (PyDict_SetItem(__pyx_d, __pyx_n_s_fol, __pyx_int_0) < 0) __PYX_ERR(0, 228, __pyx_L1_error)\n\n\n    while (1) {\n\n\n      __pyx_t_4 = __pyx_pf_6source_17genexpr(NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 230, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __pyx_t_2 = __Pyx_Generator_Next(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __pyx_t_4 = PyUnicode_Join(__pyx_kp_u__3, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 230, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_rn, __pyx_t_2) < 0) __PYX_ERR(0, 230, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_url); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 231, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rn); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 231, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 231, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_urlm, __pyx_t_1) < 0) __PYX_ERR(0, 231, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_id, __pyx_int_312) < 0) __PYX_ERR(0, 232, __pyx_L1_error)\n\n\n      __pyx_t_1 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 234, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_key); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 234, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_key, __pyx_t_4) < 0) __PYX_ERR(0, 234, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_action, __pyx_n_u_add) < 0) __PYX_ERR(0, 234, __pyx_L1_error)\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_id); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 236, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_service, __pyx_t_4) < 0) __PYX_ERR(0, 234, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_urlm); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 237, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_link, __pyx_t_4) < 0) __PYX_ERR(0, 234, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_quantity, __pyx_kp_u_10) < 0) __PYX_ERR(0, 234, __pyx_L1_error)\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_data, __pyx_t_1) < 0) __PYX_ERR(0, 233, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_requests); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_post); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_api); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_2);\n      __Pyx_GIVEREF(__pyx_t_1);\n      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);\n      __pyx_t_1 = 0;\n      __pyx_t_1 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_data); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_data, __pyx_t_3) < 0) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_headers); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_headers, __pyx_t_3) < 0) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      if (PyDict_SetItem(__pyx_d, __pyx_n_s_whisper, __pyx_t_3) < 0) __PYX_ERR(0, 239, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_whisper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 240, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_text); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 240, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_8 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_You_have_active_order_with_this, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 240, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_5 = (__pyx_t_8 != 0);\n      if (__pyx_t_5) {\n\n\n        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 241, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n      }\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_whisper); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 242, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_text); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 242, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_order, __pyx_t_3, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 242, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_8 = (__pyx_t_5 != 0);\n      if (__pyx_t_8) {\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fol); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 243, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_10, 10, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 243, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_fol, __pyx_t_1) < 0) __PYX_ERR(0, 243, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_time); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 244, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sleep); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 244, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {\n          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);\n          if (likely(__pyx_t_3)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);\n            __Pyx_INCREF(__pyx_t_3);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_2, function);\n          }\n        }\n        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_int_50) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_50);\n        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 244, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_whisper); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 245, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_json); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 245, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {\n          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);\n          if (likely(__pyx_t_2)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);\n            __Pyx_INCREF(__pyx_t_2);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_3, function);\n          }\n        }\n        __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);\n        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_t_1, __pyx_n_u_order_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 245, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        if (PyDict_SetItem(__pyx_d, __pyx_n_s_oid, __pyx_t_1) < 0) __PYX_ERR(0, 245, __pyx_L1_error)\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n        __pyx_t_1 = PyTuple_New(18); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_6 = 0;\n        __pyx_t_7 = 127;\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Order_ID);\n        __pyx_t_7 = (65535 > __pyx_t_7) ? 65535 : __pyx_t_7;\n        __pyx_t_6 += 13;\n        __Pyx_GIVEREF(__pyx_kp_u_Order_ID);\n        PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u_Order_ID);\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_E); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u__29);\n        __pyx_t_6 += 4;\n        __Pyx_GIVEREF(__pyx_kp_u__29);\n        PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_kp_u__29);\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_oid); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_1, 5, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u__31);\n        __pyx_t_6 += 1;\n        __Pyx_GIVEREF(__pyx_kp_u__31);\n        PyTuple_SET_ITEM(__pyx_t_1, 6, __pyx_kp_u__31);\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_E); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_1, 7, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u__32);\n        __pyx_t_6 += 2;\n        __Pyx_GIVEREF(__pyx_kp_u__32);\n        PyTuple_SET_ITEM(__pyx_t_1, 8, __pyx_kp_u__32);\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_G); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_1, 9, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Send);\n        __pyx_t_6 += 5;\n        __Pyx_GIVEREF(__pyx_kp_u_Send);\n        PyTuple_SET_ITEM(__pyx_t_1, 10, __pyx_kp_u_Send);\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_E); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_1, 11, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u__29);\n        __pyx_t_6 += 4;\n        __Pyx_GIVEREF(__pyx_kp_u__29);\n        PyTuple_SET_ITEM(__pyx_t_1, 12, __pyx_kp_u__29);\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_1, 13, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fol); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_1, 14, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u__31);\n        __pyx_t_6 += 1;\n        __Pyx_GIVEREF(__pyx_kp_u__31);\n        PyTuple_SET_ITEM(__pyx_t_1, 15, __pyx_kp_u__31);\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_G); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_1, 16, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_n_u_Comments);\n        __pyx_t_6 += 8;\n        __Pyx_GIVEREF(__pyx_n_u_Comments);\n        PyTuple_SET_ITEM(__pyx_t_1, 17, __pyx_n_u_Comments);\n        __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_1, 18, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 246, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n      }\n\n\n      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_whisper); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 248, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_1);\n      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_text); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 248, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_3);\n      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_8 = (__Pyx_PySequence_ContainsTF(__pyx_kp_u_Invalid_API_key, __pyx_t_3, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 248, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __pyx_t_5 = (__pyx_t_8 != 0);\n      if (__pyx_t_5) {\n\n\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_E); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 249, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 249, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = __Pyx_PyUnicode_Concat(__pyx_t_1, __pyx_kp_u_Wrong_Key); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 249, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 249, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n        __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 250, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __pyx_t_6 = 0;\n        __pyx_t_7 = 127;\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_B); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 250, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);\n        __Pyx_GIVEREF(__pyx_t_2);\n        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);\n        __pyx_t_2 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Send_To_Developer);\n        __pyx_t_6 += 26;\n        __Pyx_GIVEREF(__pyx_kp_u_Send_To_Developer);\n        PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u_Send_To_Developer);\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_G); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 250, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;\n        __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);\n        __Pyx_GIVEREF(__pyx_t_3);\n        PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_3);\n        __pyx_t_3 = 0;\n        __Pyx_INCREF(__pyx_kp_u_Atssrk002);\n        __pyx_t_6 += 10;\n        __Pyx_GIVEREF(__pyx_kp_u_Atssrk002);\n        PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_kp_u_Atssrk002);\n        __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_1, 4, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 250, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n        __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n\n\n        goto __pyx_L34;\n      }\n\n\n      /*else*/ {\n        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_whisper); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 253, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_json); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 253, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        __pyx_t_3 = NULL;\n        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {\n          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);\n          if (likely(__pyx_t_3)) {\n            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);\n            __Pyx_INCREF(__pyx_t_3);\n            __Pyx_INCREF(function);\n            __Pyx_DECREF_SET(__pyx_t_2, function);\n          }\n        }\n        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);\n        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 253, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_1);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 253, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n      }\n      __pyx_L34:;\n    }\n\n\n  }\n\n\n  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 4, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n  /*--- Wrapped vars code ---*/\n\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_t_1);\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_3);\n  __Pyx_XDECREF(__pyx_t_4);\n  if (__pyx_m) {\n    if (__pyx_d) {\n      __Pyx_AddTraceback("init source", __pyx_clineno, __pyx_lineno, __pyx_filename);\n    }\n    Py_CLEAR(__pyx_m);\n  } else if (!PyErr_Occurred()) {\n    PyErr_SetString(PyExc_ImportError, "init source");\n  }\n  __pyx_L0:;\n  __Pyx_RefNannyFinishContext();\n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n  return (__pyx_m != NULL) ? 0 : -1;\n  #elif PY_MAJOR_VERSION >= 3\n  return __pyx_m;\n  #else\n  return;\n  #endif\n}\n\n/* --- Runtime support code --- */\n/* Refnanny */\n#if CYTHON_REFNANNY\nstatic __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {\n    PyObject *m = NULL, *p = NULL;\n    void *r = NULL;\n    m = PyImport_ImportModule(modname);\n    if (!m) goto end;\n    p = PyObject_GetAttrString(m, "RefNannyAPI");\n    if (!p) goto end;\n    r = PyLong_AsVoidPtr(p);\nend:\n    Py_XDECREF(p);\n    Py_XDECREF(m);\n    return (__Pyx_RefNannyAPIStruct *)r;\n}\n#endif\n\n/* PyObjectGetAttrStr */\n#if CYTHON_USE_TYPE_SLOTS\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {\n    PyTypeObject* tp = Py_TYPE(obj);\n    if (likely(tp->tp_getattro))\n        return tp->tp_getattro(obj, attr_name);\n#if PY_MAJOR_VERSION < 3\n    if (likely(tp->tp_getattr))\n        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));\n#endif\n    return PyObject_GetAttr(obj, attr_name);\n}\n#endif\n\n/* GetBuiltinName */\nstatic PyObject *__Pyx_GetBuiltinName(PyObject *name) {\n    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);\n    if (unlikely(!result)) {\n        PyErr_Format(PyExc_NameError,\n#if PY_MAJOR_VERSION >= 3\n            "name \'%U\' is not defined", name);\n#else\n            "name \'%.200s\' is not defined", PyString_AS_STRING(name));\n#endif\n    }\n    return result;\n}\n\n/* PyDictVersioning */\n#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS\nstatic CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {\n    PyObject *dict = Py_TYPE(obj)->tp_dict;\n    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;\n}\nstatic CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {\n    PyObject **dictptr = NULL;\n    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;\n    if (offset) {\n#if CYTHON_COMPILING_IN_CPYTHON\n        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);\n#else\n        dictptr = _PyObject_GetDictPtr(obj);\n#endif\n    }\n    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;\n}\nstatic CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {\n    PyObject *dict = Py_TYPE(obj)->tp_dict;\n    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))\n        return 0;\n    return obj_dict_version == __Pyx_get_object_dict_version(obj);\n}\n#endif\n\n/* GetModuleGlobalName */\n#if CYTHON_USE_DICT_VERSIONS\nstatic PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)\n#else\nstatic CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n#endif\n{\n    PyObject *result;\n#if !CYTHON_AVOID_BORROWED_REFS\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1\n    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);\n    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)\n    if (likely(result)) {\n        return __Pyx_NewRef(result);\n    } else if (unlikely(PyErr_Occurred())) {\n        return NULL;\n    }\n#else\n    result = PyDict_GetItem(__pyx_d, name);\n    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)\n    if (likely(result)) {\n        return __Pyx_NewRef(result);\n    }\n#endif\n#else\n    result = PyObject_GetItem(__pyx_d, name);\n    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)\n    if (likely(result)) {\n        return __Pyx_NewRef(result);\n    }\n    PyErr_Clear();\n#endif\n    return __Pyx_GetBuiltinName(name);\n}\n\n/* PyCFunctionFastCall */\n#if CYTHON_FAST_PYCCALL\nstatic CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {\n    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;\n    PyCFunction meth = PyCFunction_GET_FUNCTION(func);\n    PyObject *self = PyCFunction_GET_SELF(func);\n    int flags = PyCFunction_GET_FLAGS(func);\n    assert(PyCFunction_Check(func));\n    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));\n    assert(nargs >= 0);\n    assert(nargs == 0 || args != NULL);\n    /* _PyCFunction_FastCallDict() must not be called with an exception set,\n       because it may clear it (directly or indirectly) and so the\n       caller loses its exception */\n    assert(!PyErr_Occurred());\n    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {\n        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);\n    } else {\n        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);\n    }\n}\n#endif\n\n/* PyFunctionFastCall */\n#if CYTHON_FAST_PYCALL\nstatic PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,\n                                               PyObject *globals) {\n    PyFrameObject *f;\n    PyThreadState *tstate = __Pyx_PyThreadState_Current;\n    PyObject **fastlocals;\n    Py_ssize_t i;\n    PyObject *result;\n    assert(globals != NULL);\n    /* XXX Perhaps we should create a specialized\n       PyFrame_New() that doesn\'t take locals, but does\n       take builtins without sanity checking them.\n       */\n    assert(tstate != NULL);\n    f = PyFrame_New(tstate, co, globals, NULL);\n    if (f == NULL) {\n        return NULL;\n    }\n    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);\n    for (i = 0; i < na; i++) {\n        Py_INCREF(*args);\n        fastlocals[i] = *args++;\n    }\n    result = PyEval_EvalFrameEx(f,0);\n    ++tstate->recursion_depth;\n    Py_DECREF(f);\n    --tstate->recursion_depth;\n    return result;\n}\n#if 1 || PY_VERSION_HEX < 0x030600B1\nstatic PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {\n    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);\n    PyObject *globals = PyFunction_GET_GLOBALS(func);\n    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);\n    PyObject *closure;\n#if PY_MAJOR_VERSION >= 3\n    PyObject *kwdefs;\n#endif\n    PyObject *kwtuple, **k;\n    PyObject **d;\n    Py_ssize_t nd;\n    Py_ssize_t nk;\n    PyObject *result;\n    assert(kwargs == NULL || PyDict_Check(kwargs));\n    nk = kwargs ? PyDict_Size(kwargs) : 0;\n    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {\n        return NULL;\n    }\n    if (\n#if PY_MAJOR_VERSION >= 3\n            co->co_kwonlyargcount == 0 &&\n#endif\n            likely(kwargs == NULL || nk == 0) &&\n            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {\n        if (argdefs == NULL && co->co_argcount == nargs) {\n            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);\n            goto done;\n        }\n        else if (nargs == 0 && argdefs != NULL\n                 && co->co_argcount == Py_SIZE(argdefs)) {\n            /* function called with no arguments, but all parameters have\n               a default value: use default values as arguments .*/\n            args = &PyTuple_GET_ITEM(argdefs, 0);\n            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);\n            goto done;\n        }\n    }\n    if (kwargs != NULL) {\n        Py_ssize_t pos, i;\n        kwtuple = PyTuple_New(2 * nk);\n        if (kwtuple == NULL) {\n            result = NULL;\n            goto done;\n        }\n        k = &PyTuple_GET_ITEM(kwtuple, 0);\n        pos = i = 0;\n        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {\n            Py_INCREF(k[i]);\n            Py_INCREF(k[i+1]);\n            i += 2;\n        }\n        nk = i / 2;\n    }\n    else {\n        kwtuple = NULL;\n        k = NULL;\n    }\n    closure = PyFunction_GET_CLOSURE(func);\n#if PY_MAJOR_VERSION >= 3\n    kwdefs = PyFunction_GET_KW_DEFAULTS(func);\n#endif\n    if (argdefs != NULL) {\n        d = &PyTuple_GET_ITEM(argdefs, 0);\n        nd = Py_SIZE(argdefs);\n    }\n    else {\n        d = NULL;\n        nd = 0;\n    }\n#if PY_MAJOR_VERSION >= 3\n    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,\n                               args, (int)nargs,\n                               k, (int)nk,\n                               d, (int)nd, kwdefs, closure);\n#else\n    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,\n                               args, (int)nargs,\n                               k, (int)nk,\n                               d, (int)nd, closure);\n#endif\n    Py_XDECREF(kwtuple);\ndone:\n    Py_LeaveRecursiveCall();\n    return result;\n}\n#endif\n#endif\n\n/* PyObjectCall */\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {\n    PyObject *result;\n    ternaryfunc call = Py_TYPE(func)->tp_call;\n    if (unlikely(!call))\n        return PyObject_Call(func, arg, kw);\n    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))\n        return NULL;\n    result = (*call)(func, arg, kw);\n    Py_LeaveRecursiveCall();\n    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {\n        PyErr_SetString(\n            PyExc_SystemError,\n            "NULL result without error in PyObject_Call");\n    }\n    return result;\n}\n#endif\n\n/* PyObjectCall2Args */\nstatic CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {\n    PyObject *args, *result = NULL;\n    #if CYTHON_FAST_PYCALL\n    if (PyFunction_Check(function)) {\n        PyObject *args[2] = {arg1, arg2};\n        return __Pyx_PyFunction_FastCall(function, args, 2);\n    }\n    #endif\n    #if CYTHON_FAST_PYCCALL\n    if (__Pyx_PyFastCFunction_Check(function)) {\n        PyObject *args[2] = {arg1, arg2};\n        return __Pyx_PyCFunction_FastCall(function, args, 2);\n    }\n    #endif\n    args = PyTuple_New(2);\n    if (unlikely(!args)) goto done;\n    Py_INCREF(arg1);\n    PyTuple_SET_ITEM(args, 0, arg1);\n    Py_INCREF(arg2);\n    PyTuple_SET_ITEM(args, 1, arg2);\n    Py_INCREF(function);\n    result = __Pyx_PyObject_Call(function, args, NULL);\n    Py_DECREF(args);\n    Py_DECREF(function);\ndone:\n    return result;\n}\n\n/* PyObjectCallMethO */\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {\n    PyObject *self, *result;\n    PyCFunction cfunc;\n    cfunc = PyCFunction_GET_FUNCTION(func);\n    self = PyCFunction_GET_SELF(func);\n    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))\n        return NULL;\n    result = cfunc(self, arg);\n    Py_LeaveRecursiveCall();\n    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {\n        PyErr_SetString(\n            PyExc_SystemError,\n            "NULL result without error in PyObject_Call");\n    }\n    return result;\n}\n#endif\n\n/* PyObjectCallOneArg */\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {\n    PyObject *result;\n    PyObject *args = PyTuple_New(1);\n    if (unlikely(!args)) return NULL;\n    Py_INCREF(arg);\n    PyTuple_SET_ITEM(args, 0, arg);\n    result = __Pyx_PyObject_Call(func, args, NULL);\n    Py_DECREF(args);\n    return result;\n}\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {\n#if CYTHON_FAST_PYCALL\n    if (PyFunction_Check(func)) {\n        return __Pyx_PyFunction_FastCall(func, &arg, 1);\n    }\n#endif\n    if (likely(PyCFunction_Check(func))) {\n        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {\n            return __Pyx_PyObject_CallMethO(func, arg);\n#if CYTHON_FAST_PYCCALL\n        } else if (__Pyx_PyFastCFunction_Check(func)) {\n            return __Pyx_PyCFunction_FastCall(func, &arg, 1);\n#endif\n        }\n    }\n    return __Pyx__PyObject_CallOneArg(func, arg);\n}\n#else\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {\n    PyObject *result;\n    PyObject *args = PyTuple_Pack(1, arg);\n    if (unlikely(!args)) return NULL;\n    result = __Pyx_PyObject_Call(func, args, NULL);\n    Py_DECREF(args);\n    return result;\n}\n#endif\n\n/* PyObjectCallNoArg */\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {\n#if CYTHON_FAST_PYCALL\n    if (PyFunction_Check(func)) {\n        return __Pyx_PyFunction_FastCall(func, NULL, 0);\n    }\n#endif\n#if defined(__Pyx_CyFunction_USED) && defined(NDEBUG)\n    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))\n#else\n    if (likely(PyCFunction_Check(func)))\n#endif\n    {\n        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {\n            return __Pyx_PyObject_CallMethO(func, NULL);\n        }\n    }\n    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);\n}\n#endif\n\n/* PyObject_GenericGetAttrNoDict */\n#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000\nstatic PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {\n    PyErr_Format(PyExc_AttributeError,\n#if PY_MAJOR_VERSION >= 3\n                 "\'%.50s\' object has no attribute \'%U\'",\n                 tp->tp_name, attr_name);\n#else\n                 "\'%.50s\' object has no attribute \'%.400s\'",\n                 tp->tp_name, PyString_AS_STRING(attr_name));\n#endif\n    return NULL;\n}\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {\n    PyObject *descr;\n    PyTypeObject *tp = Py_TYPE(obj);\n    if (unlikely(!PyString_Check(attr_name))) {\n        return PyObject_GenericGetAttr(obj, attr_name);\n    }\n    assert(!tp->tp_dictoffset);\n    descr = _PyType_Lookup(tp, attr_name);\n    if (unlikely(!descr)) {\n        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);\n    }\n    Py_INCREF(descr);\n    #if PY_MAJOR_VERSION < 3\n    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))\n    #endif\n    {\n        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;\n        if (unlikely(f)) {\n            PyObject *res = f(descr, obj, (PyObject *)tp);\n            Py_DECREF(descr);\n            return res;\n        }\n    }\n    return descr;\n}\n#endif\n\n/* Import */\nstatic PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {\n    PyObject *empty_list = 0;\n    PyObject *module = 0;\n    PyObject *global_dict = 0;\n    PyObject *empty_dict = 0;\n    PyObject *list;\n    #if PY_MAJOR_VERSION < 3\n    PyObject *py_import;\n    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);\n    if (!py_import)\n        goto bad;\n    #endif\n    if (from_list)\n        list = from_list;\n    else {\n        empty_list = PyList_New(0);\n        if (!empty_list)\n            goto bad;\n        list = empty_list;\n    }\n    global_dict = PyModule_GetDict(__pyx_m);\n    if (!global_dict)\n        goto bad;\n    empty_dict = PyDict_New();\n    if (!empty_dict)\n        goto bad;\n    {\n        #if PY_MAJOR_VERSION >= 3\n        if (level == -1) {\n            if ((1) && (strchr(__Pyx_MODULE_NAME, \'.\'))) {\n                module = PyImport_ImportModuleLevelObject(\n                    name, global_dict, empty_dict, list, 1);\n                if (!module) {\n                    if (!PyErr_ExceptionMatches(PyExc_ImportError))\n                        goto bad;\n                    PyErr_Clear();\n                }\n            }\n            level = 0;\n        }\n        #endif\n        if (!module) {\n            #if PY_MAJOR_VERSION < 3\n            PyObject *py_level = PyInt_FromLong(level);\n            if (!py_level)\n                goto bad;\n            module = PyObject_CallFunctionObjArgs(py_import,\n                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);\n            Py_DECREF(py_level);\n            #else\n            module = PyImport_ImportModuleLevelObject(\n                name, global_dict, empty_dict, list, level);\n            #endif\n        }\n    }\nbad:\n    #if PY_MAJOR_VERSION < 3\n    Py_XDECREF(py_import);\n    #endif\n    Py_XDECREF(empty_list);\n    Py_XDECREF(empty_dict);\n    return module;\n}\n\n/* ImportFrom */\nstatic PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {\n    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);\n    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {\n        PyErr_Format(PyExc_ImportError,\n        #if PY_MAJOR_VERSION < 3\n            "cannot import name %.230s", PyString_AS_STRING(name));\n        #else\n            "cannot import name %S", name);\n        #endif\n    }\n    return value;\n}\n\n/* FetchCommonType */\nstatic PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n    PyObject* fake_module;\n    PyTypeObject* cached_type = NULL;\n    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);\n    if (!fake_module) return NULL;\n    Py_INCREF(fake_module);\n    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);\n    if (cached_type) {\n        if (!PyType_Check((PyObject*)cached_type)) {\n            PyErr_Format(PyExc_TypeError,\n                "Shared Cython type %.200s is not a type object",\n                type->tp_name);\n            goto bad;\n        }\n        if (cached_type->tp_basicsize != type->tp_basicsize) {\n            PyErr_Format(PyExc_TypeError,\n                "Shared Cython type %.200s has the wrong size, try recompiling",\n                type->tp_name);\n            goto bad;\n        }\n    } else {\n        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;\n        PyErr_Clear();\n        if (PyType_Ready(type) < 0) goto bad;\n        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)\n            goto bad;\n        Py_INCREF(type);\n        cached_type = type;\n    }\ndone:\n    Py_DECREF(fake_module);\n    return cached_type;\nbad:\n    Py_XDECREF(cached_type);\n    cached_type = NULL;\n    goto done;\n}\n\n/* CythonFunctionShared */\n#include <structmember.h>\nstatic PyObject *\n__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)\n{\n    if (unlikely(op->func_doc == NULL)) {\n        if (op->func.m_ml->ml_doc) {\n#if PY_MAJOR_VERSION >= 3\n            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);\n#else\n            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);\n#endif\n            if (unlikely(op->func_doc == NULL))\n                return NULL;\n        } else {\n            Py_INCREF(Py_None);\n            return Py_None;\n        }\n    }\n    Py_INCREF(op->func_doc);\n    return op->func_doc;\n}\nstatic int\n__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)\n{\n    PyObject *tmp = op->func_doc;\n    if (value == NULL) {\n        value = Py_None;\n    }\n    Py_INCREF(value);\n    op->func_doc = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)\n{\n    if (unlikely(op->func_name == NULL)) {\n#if PY_MAJOR_VERSION >= 3\n        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);\n#else\n        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);\n#endif\n        if (unlikely(op->func_name == NULL))\n            return NULL;\n    }\n    Py_INCREF(op->func_name);\n    return op->func_name;\n}\nstatic int\n__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)\n{\n    PyObject *tmp;\n#if PY_MAJOR_VERSION >= 3\n    if (unlikely(value == NULL || !PyUnicode_Check(value)))\n#else\n    if (unlikely(value == NULL || !PyString_Check(value)))\n#endif\n    {\n        PyErr_SetString(PyExc_TypeError,\n                        "__name__ must be set to a string object");\n        return -1;\n    }\n    tmp = op->func_name;\n    Py_INCREF(value);\n    op->func_name = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)\n{\n    Py_INCREF(op->func_qualname);\n    return op->func_qualname;\n}\nstatic int\n__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)\n{\n    PyObject *tmp;\n#if PY_MAJOR_VERSION >= 3\n    if (unlikely(value == NULL || !PyUnicode_Check(value)))\n#else\n    if (unlikely(value == NULL || !PyString_Check(value)))\n#endif\n    {\n        PyErr_SetString(PyExc_TypeError,\n                        "__qualname__ must be set to a string object");\n        return -1;\n    }\n    tmp = op->func_qualname;\n    Py_INCREF(value);\n    op->func_qualname = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)\n{\n    PyObject *self;\n    self = m->func_closure;\n    if (self == NULL)\n        self = Py_None;\n    Py_INCREF(self);\n    return self;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)\n{\n    if (unlikely(op->func_dict == NULL)) {\n        op->func_dict = PyDict_New();\n        if (unlikely(op->func_dict == NULL))\n            return NULL;\n    }\n    Py_INCREF(op->func_dict);\n    return op->func_dict;\n}\nstatic int\n__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)\n{\n    PyObject *tmp;\n    if (unlikely(value == NULL)) {\n        PyErr_SetString(PyExc_TypeError,\n               "function\'s dictionary may not be deleted");\n        return -1;\n    }\n    if (unlikely(!PyDict_Check(value))) {\n        PyErr_SetString(PyExc_TypeError,\n               "setting function\'s dictionary to a non-dict");\n        return -1;\n    }\n    tmp = op->func_dict;\n    Py_INCREF(value);\n    op->func_dict = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)\n{\n    Py_INCREF(op->func_globals);\n    return op->func_globals;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)\n{\n    Py_INCREF(Py_None);\n    return Py_None;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)\n{\n    PyObject* result = (op->func_code) ? op->func_code : Py_None;\n    Py_INCREF(result);\n    return result;\n}\nstatic int\n__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {\n    int result = 0;\n    PyObject *res = op->defaults_getter((PyObject *) op);\n    if (unlikely(!res))\n        return -1;\n    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);\n    Py_INCREF(op->defaults_tuple);\n    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);\n    Py_INCREF(op->defaults_kwdict);\n    #else\n    op->defaults_tuple = PySequence_ITEM(res, 0);\n    if (unlikely(!op->defaults_tuple)) result = -1;\n    else {\n        op->defaults_kwdict = PySequence_ITEM(res, 1);\n        if (unlikely(!op->defaults_kwdict)) result = -1;\n    }\n    #endif\n    Py_DECREF(res);\n    return result;\n}\nstatic int\n__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {\n    PyObject* tmp;\n    if (!value) {\n        value = Py_None;\n    } else if (value != Py_None && !PyTuple_Check(value)) {\n        PyErr_SetString(PyExc_TypeError,\n                        "__defaults__ must be set to a tuple object");\n        return -1;\n    }\n    Py_INCREF(value);\n    tmp = op->defaults_tuple;\n    op->defaults_tuple = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n    PyObject* result = op->defaults_tuple;\n    if (unlikely(!result)) {\n        if (op->defaults_getter) {\n            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;\n            result = op->defaults_tuple;\n        } else {\n            result = Py_None;\n        }\n    }\n    Py_INCREF(result);\n    return result;\n}\nstatic int\n__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {\n    PyObject* tmp;\n    if (!value) {\n        value = Py_None;\n    } else if (value != Py_None && !PyDict_Check(value)) {\n        PyErr_SetString(PyExc_TypeError,\n                        "__kwdefaults__ must be set to a dict object");\n        return -1;\n    }\n    Py_INCREF(value);\n    tmp = op->defaults_kwdict;\n    op->defaults_kwdict = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n    PyObject* result = op->defaults_kwdict;\n    if (unlikely(!result)) {\n        if (op->defaults_getter) {\n            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;\n            result = op->defaults_kwdict;\n        } else {\n            result = Py_None;\n        }\n    }\n    Py_INCREF(result);\n    return result;\n}\nstatic int\n__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {\n    PyObject* tmp;\n    if (!value || value == Py_None) {\n        value = NULL;\n    } else if (!PyDict_Check(value)) {\n        PyErr_SetString(PyExc_TypeError,\n                        "__annotations__ must be set to a dict object");\n        return -1;\n    }\n    Py_XINCREF(value);\n    tmp = op->func_annotations;\n    op->func_annotations = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n    PyObject* result = op->func_annotations;\n    if (unlikely(!result)) {\n        result = PyDict_New();\n        if (unlikely(!result)) return NULL;\n        op->func_annotations = result;\n    }\n    Py_INCREF(result);\n    return result;\n}\nstatic PyGetSetDef __pyx_CyFunction_getsets[] = {\n    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},\n    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},\n    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},\n    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},\n    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},\n    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},\n    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},\n    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},\n    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},\n    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},\n    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},\n    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},\n    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},\n    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},\n    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},\n    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},\n    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},\n    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},\n    {0, 0, 0, 0, 0}\n};\nstatic PyMemberDef __pyx_CyFunction_members[] = {\n    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},\n    {0, 0, 0,  0, 0}\n};\nstatic PyObject *\n__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)\n{\n#if PY_MAJOR_VERSION >= 3\n    Py_INCREF(m->func_qualname);\n    return m->func_qualname;\n#else\n    return PyString_FromString(m->func.m_ml->ml_name);\n#endif\n}\nstatic PyMethodDef __pyx_CyFunction_methods[] = {\n    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},\n    {0, 0, 0, 0}\n};\n#if PY_VERSION_HEX < 0x030500A0\n#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)\n#else\n#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)\n#endif\nstatic PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,\n                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {\n    if (unlikely(op == NULL))\n        return NULL;\n    op->flags = flags;\n    __Pyx_CyFunction_weakreflist(op) = NULL;\n    op->func.m_ml = ml;\n    op->func.m_self = (PyObject *) op;\n    Py_XINCREF(closure);\n    op->func_closure = closure;\n    Py_XINCREF(module);\n    op->func.m_module = module;\n    op->func_dict = NULL;\n    op->func_name = NULL;\n    Py_INCREF(qualname);\n    op->func_qualname = qualname;\n    op->func_doc = NULL;\n    op->func_classobj = NULL;\n    op->func_globals = globals;\n    Py_INCREF(op->func_globals);\n    Py_XINCREF(code);\n    op->func_code = code;\n    op->defaults_pyobjects = 0;\n    op->defaults_size = 0;\n    op->defaults = NULL;\n    op->defaults_tuple = NULL;\n    op->defaults_kwdict = NULL;\n    op->defaults_getter = NULL;\n    op->func_annotations = NULL;\n    return (PyObject *) op;\n}\nstatic int\n__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)\n{\n    Py_CLEAR(m->func_closure);\n    Py_CLEAR(m->func.m_module);\n    Py_CLEAR(m->func_dict);\n    Py_CLEAR(m->func_name);\n    Py_CLEAR(m->func_qualname);\n    Py_CLEAR(m->func_doc);\n    Py_CLEAR(m->func_globals);\n    Py_CLEAR(m->func_code);\n    Py_CLEAR(m->func_classobj);\n    Py_CLEAR(m->defaults_tuple);\n    Py_CLEAR(m->defaults_kwdict);\n    Py_CLEAR(m->func_annotations);\n    if (m->defaults) {\n        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);\n        int i;\n        for (i = 0; i < m->defaults_pyobjects; i++)\n            Py_XDECREF(pydefaults[i]);\n        PyObject_Free(m->defaults);\n        m->defaults = NULL;\n    }\n    return 0;\n}\nstatic void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)\n{\n    if (__Pyx_CyFunction_weakreflist(m) != NULL)\n        PyObject_ClearWeakRefs((PyObject *) m);\n    __Pyx_CyFunction_clear(m);\n    PyObject_GC_Del(m);\n}\nstatic void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)\n{\n    PyObject_GC_UnTrack(m);\n    __Pyx__CyFunction_dealloc(m);\n}\nstatic int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)\n{\n    Py_VISIT(m->func_closure);\n    Py_VISIT(m->func.m_module);\n    Py_VISIT(m->func_dict);\n    Py_VISIT(m->func_name);\n    Py_VISIT(m->func_qualname);\n    Py_VISIT(m->func_doc);\n    Py_VISIT(m->func_globals);\n    Py_VISIT(m->func_code);\n    Py_VISIT(m->func_classobj);\n    Py_VISIT(m->defaults_tuple);\n    Py_VISIT(m->defaults_kwdict);\n    if (m->defaults) {\n        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);\n        int i;\n        for (i = 0; i < m->defaults_pyobjects; i++)\n            Py_VISIT(pydefaults[i]);\n    }\n    return 0;\n}\nstatic PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)\n{\n#if PY_MAJOR_VERSION < 3\n    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;\n    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {\n        Py_INCREF(func);\n        return func;\n    }\n    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {\n        if (type == NULL)\n            type = (PyObject *)(Py_TYPE(obj));\n        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));\n    }\n    if (obj == Py_None)\n        obj = NULL;\n#endif\n    return __Pyx_PyMethod_New(func, obj, type);\n}\nstatic PyObject*\n__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)\n{\n#if PY_MAJOR_VERSION >= 3\n    return PyUnicode_FromFormat("<cyfunction %U at %p>",\n                                op->func_qualname, (void *)op);\n#else\n    return PyString_FromFormat("<cyfunction %s at %p>",\n                               PyString_AsString(op->func_qualname), (void *)op);\n#endif\n}\nstatic PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {\n    PyCFunctionObject* f = (PyCFunctionObject*)func;\n    PyCFunction meth = f->m_ml->ml_meth;\n    Py_ssize_t size;\n    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {\n    case METH_VARARGS:\n        if (likely(kw == NULL || PyDict_Size(kw) == 0))\n            return (*meth)(self, arg);\n        break;\n    case METH_VARARGS | METH_KEYWORDS:\n        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);\n    case METH_NOARGS:\n        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {\n            size = PyTuple_GET_SIZE(arg);\n            if (likely(size == 0))\n                return (*meth)(self, NULL);\n            PyErr_Format(PyExc_TypeError,\n                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",\n                f->m_ml->ml_name, size);\n            return NULL;\n        }\n        break;\n    case METH_O:\n        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {\n            size = PyTuple_GET_SIZE(arg);\n            if (likely(size == 1)) {\n                PyObject *result, *arg0;\n                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n                arg0 = PyTuple_GET_ITEM(arg, 0);\n                #else\n                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;\n                #endif\n                result = (*meth)(self, arg0);\n                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)\n                Py_DECREF(arg0);\n                #endif\n                return result;\n            }\n            PyErr_Format(PyExc_TypeError,\n                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",\n                f->m_ml->ml_name, size);\n            return NULL;\n        }\n        break;\n    default:\n        PyErr_SetString(PyExc_SystemError, "Bad call flags in "\n                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "\n                        "longer supported!");\n        return NULL;\n    }\n    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",\n                 f->m_ml->ml_name);\n    return NULL;\n}\nstatic CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {\n    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);\n}\nstatic PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {\n    PyObject *result;\n    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;\n    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {\n        Py_ssize_t argc;\n        PyObject *new_args;\n        PyObject *self;\n        argc = PyTuple_GET_SIZE(args);\n        new_args = PyTuple_GetSlice(args, 1, argc);\n        if (unlikely(!new_args))\n            return NULL;\n        self = PyTuple_GetItem(args, 0);\n        if (unlikely(!self)) {\n            Py_DECREF(new_args);\n#if PY_MAJOR_VERSION > 2\n            PyErr_Format(PyExc_TypeError,\n                         "unbound method %.200S() needs an argument",\n                         cyfunc->func_qualname);\n#else\n            PyErr_SetString(PyExc_TypeError,\n                            "unbound method needs an argument");\n#endif\n            return NULL;\n        }\n        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);\n        Py_DECREF(new_args);\n    } else {\n        result = __Pyx_CyFunction_Call(func, args, kw);\n    }\n    return result;\n}\nstatic PyTypeObject __pyx_CyFunctionType_type = {\n    PyVarObject_HEAD_INIT(0, 0)\n    "cython_function_or_method",\n    sizeof(__pyx_CyFunctionObject),\n    0,\n    (destructor) __Pyx_CyFunction_dealloc,\n    0,\n    0,\n    0,\n#if PY_MAJOR_VERSION < 3\n    0,\n#else\n    0,\n#endif\n    (reprfunc) __Pyx_CyFunction_repr,\n    0,\n    0,\n    0,\n    0,\n    __Pyx_CyFunction_CallAsMethod,\n    0,\n    0,\n    0,\n    0,\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,\n    0,\n    (traverseproc) __Pyx_CyFunction_traverse,\n    (inquiry) __Pyx_CyFunction_clear,\n    0,\n#if PY_VERSION_HEX < 0x030500A0\n    offsetof(__pyx_CyFunctionObject, func_weakreflist),\n#else\n    offsetof(PyCFunctionObject, m_weakreflist),\n#endif\n    0,\n    0,\n    __pyx_CyFunction_methods,\n    __pyx_CyFunction_members,\n    __pyx_CyFunction_getsets,\n    0,\n    0,\n    __Pyx_CyFunction_descr_get,\n    0,\n    offsetof(__pyx_CyFunctionObject, func_dict),\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n#if PY_VERSION_HEX >= 0x030400a1\n    0,\n#endif\n#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)\n    0,\n#endif\n#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000\n    0,\n#endif\n#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000\n    0,\n#endif\n};\nstatic int __pyx_CyFunction_init(void) {\n    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);\n    if (unlikely(__pyx_CyFunctionType == NULL)) {\n        return -1;\n    }\n    return 0;\n}\nstatic CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {\n    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;\n    m->defaults = PyObject_Malloc(size);\n    if (unlikely(!m->defaults))\n        return PyErr_NoMemory();\n    memset(m->defaults, 0, size);\n    m->defaults_pyobjects = pyobjects;\n    m->defaults_size = size;\n    return m->defaults;\n}\nstatic CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {\n    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;\n    m->defaults_tuple = tuple;\n    Py_INCREF(tuple);\n}\nstatic CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {\n    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;\n    m->defaults_kwdict = dict;\n    Py_INCREF(dict);\n}\nstatic CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {\n    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;\n    m->func_annotations = dict;\n    Py_INCREF(dict);\n}\n\n/* CythonFunction */\nstatic PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,\n                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {\n    PyObject *op = __Pyx_CyFunction_Init(\n        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),\n        ml, flags, qualname, closure, module, globals, code\n    );\n    if (likely(op)) {\n        PyObject_GC_Track(op);\n    }\n    return op;\n}\n\n/* JoinPyUnicode */\nstatic PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,\n                                      CYTHON_UNUSED Py_UCS4 max_char) {\n#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n    PyObject *result_uval;\n    int result_ukind;\n    Py_ssize_t i, char_pos;\n    void *result_udata;\n#if CYTHON_PEP393_ENABLED\n    result_uval = PyUnicode_New(result_ulength, max_char);\n    if (unlikely(!result_uval)) return NULL;\n    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;\n    result_udata = PyUnicode_DATA(result_uval);\n#else\n    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);\n    if (unlikely(!result_uval)) return NULL;\n    result_ukind = sizeof(Py_UNICODE);\n    result_udata = PyUnicode_AS_UNICODE(result_uval);\n#endif\n    char_pos = 0;\n    for (i=0; i < value_count; i++) {\n        int ukind;\n        Py_ssize_t ulength;\n        void *udata;\n        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);\n        if (unlikely(__Pyx_PyUnicode_READY(uval)))\n            goto bad;\n        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);\n        if (unlikely(!ulength))\n            continue;\n        if (unlikely(char_pos + ulength < 0))\n            goto overflow;\n        ukind = __Pyx_PyUnicode_KIND(uval);\n        udata = __Pyx_PyUnicode_DATA(uval);\n        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {\n            memcpy((char *)result_udata + char_pos * result_ukind, udata, (size_t) (ulength * result_ukind));\n        } else {\n            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)\n            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);\n            #else\n            Py_ssize_t j;\n            for (j=0; j < ulength; j++) {\n                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);\n                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);\n            }\n            #endif\n        }\n        char_pos += ulength;\n    }\n    return result_uval;\noverflow:\n    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");\nbad:\n    Py_DECREF(result_uval);\n    return NULL;\n#else\n    result_ulength++;\n    value_count++;\n    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);\n#endif\n}\n\n/* BytesEquals */\nstatic CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {\n#if CYTHON_COMPILING_IN_PYPY\n    return PyObject_RichCompareBool(s1, s2, equals);\n#else\n    if (s1 == s2) {\n        return (equals == Py_EQ);\n    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {\n        const char *ps1, *ps2;\n        Py_ssize_t length = PyBytes_GET_SIZE(s1);\n        if (length != PyBytes_GET_SIZE(s2))\n            return (equals == Py_NE);\n        ps1 = PyBytes_AS_STRING(s1);\n        ps2 = PyBytes_AS_STRING(s2);\n        if (ps1[0] != ps2[0]) {\n            return (equals == Py_NE);\n        } else if (length == 1) {\n            return (equals == Py_EQ);\n        } else {\n            int result;\n#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)\n            Py_hash_t hash1, hash2;\n            hash1 = ((PyBytesObject*)s1)->ob_shash;\n            hash2 = ((PyBytesObject*)s2)->ob_shash;\n            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {\n                return (equals == Py_NE);\n            }\n#endif\n            result = memcmp(ps1, ps2, (size_t)length);\n            return (equals == Py_EQ) ? (result == 0) : (result != 0);\n        }\n    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {\n        return (equals == Py_NE);\n    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {\n        return (equals == Py_NE);\n    } else {\n        int result;\n        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);\n        if (!py_result)\n            return -1;\n        result = __Pyx_PyObject_IsTrue(py_result);\n        Py_DECREF(py_result);\n        return result;\n    }\n#endif\n}\n\n/* UnicodeEquals */\nstatic CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {\n#if CYTHON_COMPILING_IN_PYPY\n    return PyObject_RichCompareBool(s1, s2, equals);\n#else\n#if PY_MAJOR_VERSION < 3\n    PyObject* owned_ref = NULL;\n#endif\n    int s1_is_unicode, s2_is_unicode;\n    if (s1 == s2) {\n        goto return_eq;\n    }\n    s1_is_unicode = PyUnicode_CheckExact(s1);\n    s2_is_unicode = PyUnicode_CheckExact(s2);\n#if PY_MAJOR_VERSION < 3\n    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {\n        owned_ref = PyUnicode_FromObject(s2);\n        if (unlikely(!owned_ref))\n            return -1;\n        s2 = owned_ref;\n        s2_is_unicode = 1;\n    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {\n        owned_ref = PyUnicode_FromObject(s1);\n        if (unlikely(!owned_ref))\n            return -1;\n        s1 = owned_ref;\n        s1_is_unicode = 1;\n    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {\n        return __Pyx_PyBytes_Equals(s1, s2, equals);\n    }\n#endif\n    if (s1_is_unicode & s2_is_unicode) {\n        Py_ssize_t length;\n        int kind;\n        void *data1, *data2;\n        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))\n            return -1;\n        length = __Pyx_PyUnicode_GET_LENGTH(s1);\n        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {\n            goto return_ne;\n        }\n#if CYTHON_USE_UNICODE_INTERNALS\n        {\n            Py_hash_t hash1, hash2;\n        #if CYTHON_PEP393_ENABLED\n            hash1 = ((PyASCIIObject*)s1)->hash;\n            hash2 = ((PyASCIIObject*)s2)->hash;\n        #else\n            hash1 = ((PyUnicodeObject*)s1)->hash;\n            hash2 = ((PyUnicodeObject*)s2)->hash;\n        #endif\n            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {\n                goto return_ne;\n            }\n        }\n#endif\n        kind = __Pyx_PyUnicode_KIND(s1);\n        if (kind != __Pyx_PyUnicode_KIND(s2)) {\n            goto return_ne;\n        }\n        data1 = __Pyx_PyUnicode_DATA(s1);\n        data2 = __Pyx_PyUnicode_DATA(s2);\n        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {\n            goto return_ne;\n        } else if (length == 1) {\n            goto return_eq;\n        } else {\n            int result = memcmp(data1, data2, (size_t)(length * kind));\n            #if PY_MAJOR_VERSION < 3\n            Py_XDECREF(owned_ref);\n            #endif\n            return (equals == Py_EQ) ? (result == 0) : (result != 0);\n        }\n    } else if ((s1 == Py_None) & s2_is_unicode) {\n        goto return_ne;\n    } else if ((s2 == Py_None) & s1_is_unicode) {\n        goto return_ne;\n    } else {\n        int result;\n        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);\n        #if PY_MAJOR_VERSION < 3\n        Py_XDECREF(owned_ref);\n        #endif\n        if (!py_result)\n            return -1;\n        result = __Pyx_PyObject_IsTrue(py_result);\n        Py_DECREF(py_result);\n        return result;\n    }\nreturn_eq:\n    #if PY_MAJOR_VERSION < 3\n    Py_XDECREF(owned_ref);\n    #endif\n    return (equals == Py_EQ);\nreturn_ne:\n    #if PY_MAJOR_VERSION < 3\n    Py_XDECREF(owned_ref);\n    #endif\n    return (equals == Py_NE);\n#endif\n}\n\n/* PyIntBinop */\n#if !CYTHON_COMPILING_IN_PYPY\nstatic PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {\n    (void)inplace;\n    (void)zerodivision_check;\n    #if PY_MAJOR_VERSION < 3\n    if (likely(PyInt_CheckExact(op1))) {\n        const long b = intval;\n        long x;\n        long a = PyInt_AS_LONG(op1);\n            x = (long)((unsigned long)a + b);\n            if (likely((x^a) >= 0 || (x^b) >= 0))\n                return PyInt_FromLong(x);\n            return PyLong_Type.tp_as_number->nb_add(op1, op2);\n    }\n    #endif\n    #if CYTHON_USE_PYLONG_INTERNALS\n    if (likely(PyLong_CheckExact(op1))) {\n        const long b = intval;\n        long a, x;\n#ifdef HAVE_LONG_LONG\n        const PY_LONG_LONG llb = intval;\n        PY_LONG_LONG lla, llx;\n#endif\n        const digit* digits = ((PyLongObject*)op1)->ob_digit;\n        const Py_ssize_t size = Py_SIZE(op1);\n        if (likely(__Pyx_sst_abs(size) <= 1)) {\n            a = likely(size) ? digits[0] : 0;\n            if (size == -1) a = -a;\n        } else {\n            switch (size) {\n                case -2:\n                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {\n                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));\n                        break;\n#ifdef HAVE_LONG_LONG\n                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {\n                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));\n                        goto long_long;\n#endif\n                    }\n                    CYTHON_FALLTHROUGH;\n                case 2:\n                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {\n                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));\n                        break;\n#ifdef HAVE_LONG_LONG\n                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {\n                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));\n                        goto long_long;\n#endif\n                    }\n                    CYTHON_FALLTHROUGH;\n                case -3:\n                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {\n                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));\n                        break;\n#ifdef HAVE_LONG_LONG\n                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {\n                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));\n                        goto long_long;\n#endif\n                    }\n                    CYTHON_FALLTHROUGH;\n                case 3:\n                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {\n                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));\n                        break;\n#ifdef HAVE_LONG_LONG\n                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {\n                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));\n                        goto long_long;\n#endif\n                    }\n                    CYTHON_FALLTHROUGH;\n                case -4:\n                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {\n                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));\n                        break;\n#ifdef HAVE_LONG_LONG\n                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {\n                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));\n                        goto long_long;\n#endif\n                    }\n                    CYTHON_FALLTHROUGH;\n                case 4:\n                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {\n                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));\n                        break;\n#ifdef HAVE_LONG_LONG\n                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {\n                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));\n                        goto long_long;\n#endif\n                    }\n                    CYTHON_FALLTHROUGH;\n                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);\n            }\n        }\n                x = a + b;\n            return PyLong_FromLong(x);\n#ifdef HAVE_LONG_LONG\n        long_long:\n                llx = lla + llb;\n            return PyLong_FromLongLong(llx);\n#endif\n\n\n    }\n    #endif\n    if (PyFloat_CheckExact(op1)) {\n        const long b = intval;\n        double a = PyFloat_AS_DOUBLE(op1);\n            double result;\n            PyFPE_START_PROTECT("add", return NULL)\n            result = ((double)a) + (double)b;\n            PyFPE_END_PROTECT(result)\n            return PyFloat_FromDouble(result);\n    }\n    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);\n}\n#endif\n\n/* DictGetItem */\n#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY\nstatic PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {\n    PyObject *value;\n    value = PyDict_GetItemWithError(d, key);\n    if (unlikely(!value)) {\n        if (!PyErr_Occurred()) {\n            if (unlikely(PyTuple_Check(key))) {\n                PyObject* args = PyTuple_Pack(1, key);\n                if (likely(args)) {\n                    PyErr_SetObject(PyExc_KeyError, args);\n                    Py_DECREF(args);\n                }\n            } else {\n                PyErr_SetObject(PyExc_KeyError, key);\n            }\n        }\n        return NULL;\n    }\n    Py_INCREF(value);\n    return value;\n}\n#endif\n\n/* PyErrFetchRestore */\n#if CYTHON_FAST_THREAD_STATE\nstatic CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n    tmp_type = tstate->curexc_type;\n    tmp_value = tstate->curexc_value;\n    tmp_tb = tstate->curexc_traceback;\n    tstate->curexc_type = type;\n    tstate->curexc_value = value;\n    tstate->curexc_traceback = tb;\n    Py_XDECREF(tmp_type);\n    Py_XDECREF(tmp_value);\n    Py_XDECREF(tmp_tb);\n}\nstatic CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {\n    *type = tstate->curexc_type;\n    *value = tstate->curexc_value;\n    *tb = tstate->curexc_traceback;\n    tstate->curexc_type = 0;\n    tstate->curexc_value = 0;\n    tstate->curexc_traceback = 0;\n}\n#endif\n\n/* CLineInTraceback */\n#ifndef CYTHON_CLINE_IN_TRACEBACK\nstatic int __Pyx_CLineForTraceback(CYTHON_UNUSED PyThreadState *tstate, int c_line) {\n    PyObject *use_cline;\n    PyObject *ptype, *pvalue, *ptraceback;\n#if CYTHON_COMPILING_IN_CPYTHON\n    PyObject **cython_runtime_dict;\n#endif\n    if (unlikely(!__pyx_cython_runtime)) {\n        return c_line;\n    }\n    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);\n#if CYTHON_COMPILING_IN_CPYTHON\n    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);\n    if (likely(cython_runtime_dict)) {\n        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(\n            use_cline, *cython_runtime_dict,\n            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))\n    } else\n#endif\n    {\n      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);\n      if (use_cline_obj) {\n        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;\n        Py_DECREF(use_cline_obj);\n      } else {\n        PyErr_Clear();\n        use_cline = NULL;\n      }\n    }\n    if (!use_cline) {\n        c_line = 0;\n        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);\n    }\n    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {\n        c_line = 0;\n    }\n    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);\n    return c_line;\n}\n#endif\n\n/* CodeObjectCache */\nstatic int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {\n    int start = 0, mid = 0, end = count - 1;\n    if (end >= 0 && code_line > entries[end].code_line) {\n        return count;\n    }\n    while (start < end) {\n        mid = start + (end - start) / 2;\n        if (code_line < entries[mid].code_line) {\n            end = mid;\n        } else if (code_line > entries[mid].code_line) {\n             start = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    if (code_line <= entries[mid].code_line) {\n        return mid;\n    } else {\n        return mid + 1;\n    }\n}\nstatic PyCodeObject *__pyx_find_code_object(int code_line) {\n    PyCodeObject* code_object;\n    int pos;\n    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {\n        return NULL;\n    }\n    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);\n    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {\n        return NULL;\n    }\n    code_object = __pyx_code_cache.entries[pos].code_object;\n    Py_INCREF(code_object);\n    return code_object;\n}\nstatic void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {\n    int pos, i;\n    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;\n    if (unlikely(!code_line)) {\n        return;\n    }\n    if (unlikely(!entries)) {\n        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));\n        if (likely(entries)) {\n            __pyx_code_cache.entries = entries;\n            __pyx_code_cache.max_count = 64;\n            __pyx_code_cache.count = 1;\n            entries[0].code_line = code_line;\n            entries[0].code_object = code_object;\n            Py_INCREF(code_object);\n        }\n        return;\n    }\n    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);\n    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {\n        PyCodeObject* tmp = entries[pos].code_object;\n        entries[pos].code_object = code_object;\n        Py_DECREF(tmp);\n        return;\n    }\n    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {\n        int new_max = __pyx_code_cache.max_count + 64;\n        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(\n            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));\n        if (unlikely(!entries)) {\n            return;\n        }\n        __pyx_code_cache.entries = entries;\n        __pyx_code_cache.max_count = new_max;\n    }\n    for (i=__pyx_code_cache.count; i>pos; i--) {\n        entries[i] = entries[i-1];\n    }\n    entries[pos].code_line = code_line;\n    entries[pos].code_object = code_object;\n    __pyx_code_cache.count++;\n    Py_INCREF(code_object);\n}\n\n/* AddTraceback */\n#include "compile.h"\n#include "frameobject.h"\n#include "traceback.h"\n#if PY_VERSION_HEX >= 0x030b00a6\n  #ifndef Py_BUILD_CORE\n    #define Py_BUILD_CORE 1\n  #endif\n  #include "internal/pycore_frame.h"\n#endif\nstatic PyCodeObject* __Pyx_CreateCodeObjectForTraceback(\n            const char *funcname, int c_line,\n            int py_line, const char *filename) {\n    PyCodeObject *py_code = NULL;\n    PyObject *py_funcname = NULL;\n    #if PY_MAJOR_VERSION < 3\n    PyObject *py_srcfile = NULL;\n    py_srcfile = PyString_FromString(filename);\n    if (!py_srcfile) goto bad;\n    #endif\n    if (c_line) {\n        #if PY_MAJOR_VERSION < 3\n        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);\n        if (!py_funcname) goto bad;\n        #else\n        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);\n        if (!py_funcname) goto bad;\n        funcname = PyUnicode_AsUTF8(py_funcname);\n        if (!funcname) goto bad;\n        #endif\n    }\n    else {\n        #if PY_MAJOR_VERSION < 3\n        py_funcname = PyString_FromString(funcname);\n        if (!py_funcname) goto bad;\n        #endif\n    }\n    #if PY_MAJOR_VERSION < 3\n    py_code = __Pyx_PyCode_New(\n        0,\n        0,\n        0,\n        0,\n        0,\n        __pyx_empty_bytes, /*PyObject *code,*/\n        __pyx_empty_tuple, /*PyObject *consts,*/\n        __pyx_empty_tuple, /*PyObject *names,*/\n        __pyx_empty_tuple, /*PyObject *varnames,*/\n        __pyx_empty_tuple, /*PyObject *freevars,*/\n        __pyx_empty_tuple, /*PyObject *cellvars,*/\n        py_srcfile,   /*PyObject *filename,*/\n        py_funcname,  /*PyObject *name,*/\n        py_line,\n        __pyx_empty_bytes  /*PyObject *lnotab*/\n    );\n    Py_DECREF(py_srcfile);\n    #else\n    py_code = PyCode_NewEmpty(filename, funcname, py_line);\n    #endif\n    Py_XDECREF(py_funcname);  // XDECREF since it\'s only set on Py3 if cline\n    return py_code;\nbad:\n    Py_XDECREF(py_funcname);\n    #if PY_MAJOR_VERSION < 3\n    Py_XDECREF(py_srcfile);\n    #endif\n    return NULL;\n}\nstatic void __Pyx_AddTraceback(const char *funcname, int c_line,\n                               int py_line, const char *filename) {\n    PyCodeObject *py_code = 0;\n    PyFrameObject *py_frame = 0;\n    PyThreadState *tstate = __Pyx_PyThreadState_Current;\n    PyObject *ptype, *pvalue, *ptraceback;\n    if (c_line) {\n        c_line = __Pyx_CLineForTraceback(tstate, c_line);\n    }\n    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);\n    if (!py_code) {\n        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);\n        py_code = __Pyx_CreateCodeObjectForTraceback(\n            funcname, c_line, py_line, filename);\n        if (!py_code) {\n            /* If the code object creation fails, then we should clear the\n               fetched exception references and propagate the new exception */\n            Py_XDECREF(ptype);\n            Py_XDECREF(pvalue);\n            Py_XDECREF(ptraceback);\n            goto bad;\n        }\n        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);\n        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);\n    }\n    py_frame = PyFrame_New(\n        tstate,            /*PyThreadState *tstate,*/\n        py_code,           /*PyCodeObject *code,*/\n        __pyx_d,    /*PyObject *globals,*/\n        0                  /*PyObject *locals*/\n    );\n    if (!py_frame) goto bad;\n    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);\n    PyTraceBack_Here(py_frame);\nbad:\n    Py_XDECREF(py_code);\n    Py_XDECREF(py_frame);\n}\n\n/* MainFunction */\n#ifdef __FreeBSD__\n#include <floatingpoint.h>\n#endif\n#if PY_MAJOR_VERSION < 3\nint main(int argc, char** argv) {\n#elif defined(WIN32) || defined(MS_WINDOWS)\nint wmain(int argc, wchar_t **argv) {\n#else\nstatic int __Pyx_main(int argc, wchar_t **argv) {\n#endif\n    /* 754 requires that FP exceptions run in "no stop" mode by default,\n     * and until C vendors implement C99\'s ways to control FP exceptions,\n     * Python requires non-stop mode.  Alas, some platforms enable FP\n     * exceptions by default.  Here we disable them.\n     */\n#ifdef __FreeBSD__\n    fp_except_t m;\n    m = fpgetmask();\n    fpsetmask(m & ~FP_X_OFL);\n#endif\n    if (argc && argv)\n        Py_SetProgramName(argv[0]);\n    Py_Initialize();\n    if (argc && argv)\n        PySys_SetArgv(argc, argv);\n    {\n      PyObject* m = NULL;\n      __pyx_module_is_main_source = 1;\n      #if PY_MAJOR_VERSION < 3\n          initsource();\n      #elif CYTHON_PEP489_MULTI_PHASE_INIT\n          m = PyInit_source();\n          if (!PyModule_Check(m)) {\n              PyModuleDef *mdef = (PyModuleDef *) m;\n              PyObject *modname = PyUnicode_FromString("__main__");\n              m = NULL;\n              if (modname) {\n                  m = PyModule_NewObject(modname);\n                  Py_DECREF(modname);\n                  if (m) PyModule_ExecDef(m, mdef);\n              }\n          }\n      #else\n          m = PyInit_source();\n      #endif\n      if (PyErr_Occurred()) {\n          PyErr_Print();\n          #if PY_MAJOR_VERSION < 3\n          if (Py_FlushLine()) PyErr_Clear();\n          #endif\n          return 1;\n      }\n      Py_XDECREF(m);\n    }\n#if PY_VERSION_HEX < 0x03060000\n    Py_Finalize();\n#else\n    if (Py_FinalizeEx() < 0)\n        return 2;\n#endif\n    return 0;\n}\n#if PY_MAJOR_VERSION >= 3 && !defined(WIN32) && !defined(MS_WINDOWS)\n#include <locale.h>\nstatic wchar_t*\n__Pyx_char2wchar(char* arg)\n{\n    wchar_t *res;\n#ifdef HAVE_BROKEN_MBSTOWCS\n    /* Some platforms have a broken implementation of\n     * mbstowcs which does not count the characters that\n     * would result from conversion.  Use an upper bound.\n     */\n    size_t argsize = strlen(arg);\n#else\n    size_t argsize = mbstowcs(NULL, arg, 0);\n#endif\n    size_t count;\n    unsigned char *in;\n    wchar_t *out;\n#ifdef HAVE_MBRTOWC\n    mbstate_t mbs;\n#endif\n    if (argsize != (size_t)-1) {\n        res = (wchar_t *)malloc((argsize+1)*sizeof(wchar_t));\n        if (!res)\n            goto oom;\n        count = mbstowcs(res, arg, argsize+1);\n        if (count != (size_t)-1) {\n            wchar_t *tmp;\n            /* Only use the result if it contains no\n               surrogate characters. */\n            for (tmp = res; *tmp != 0 &&\n                     (*tmp < 0xd800 || *tmp > 0xdfff); tmp++)\n                ;\n            if (*tmp == 0)\n                return res;\n        }\n        free(res);\n    }\n#ifdef HAVE_MBRTOWC\n    /* Overallocate; as multi-byte characters are in the argument, the\n       actual output could use less memory. */\n    argsize = strlen(arg) + 1;\n    res = (wchar_t *)malloc(argsize*sizeof(wchar_t));\n    if (!res) goto oom;\n    in = (unsigned char*)arg;\n    out = res;\n    memset(&mbs, 0, sizeof mbs);\n    while (argsize) {\n        size_t converted = mbrtowc(out, (char*)in, argsize, &mbs);\n        if (converted == 0)\n            break;\n        if (converted == (size_t)-2) {\n            /* Incomplete character. This should never happen,\n               since we provide everything that we have -\n               unless there is a bug in the C library, or I\n               misunderstood how mbrtowc works. */\n            fprintf(stderr, "unexpected mbrtowc result -2\\\\n");\n            free(res);\n            return NULL;\n        }\n        if (converted == (size_t)-1) {\n            /* Conversion error. Escape as UTF-8b, and start over\n               in the initial shift state. */\n            *out++ = 0xdc00 + *in++;\n            argsize--;\n            memset(&mbs, 0, sizeof mbs);\n            continue;\n        }\n        if (*out >= 0xd800 && *out <= 0xdfff) {\n            /* Surrogate character.  Escape the original\n               byte sequence with surrogateescape. */\n            argsize -= converted;\n            while (converted--)\n                *out++ = 0xdc00 + *in++;\n            continue;\n        }\n        in += converted;\n        argsize -= converted;\n        out++;\n    }\n#else\n    /* Cannot use C locale for escaping; manually escape as if charset\n       is ASCII (i.e. escape all bytes > 128. This will still roundtrip\n       correctly in the locale\'s charset, which must be an ASCII superset. */\n    res = (wchar_t *)malloc((strlen(arg)+1)*sizeof(wchar_t));\n    if (!res) goto oom;\n    in = (unsigned char*)arg;\n    out = res;\n    while(*in)\n        if(*in < 128)\n            *out++ = *in++;\n        else\n            *out++ = 0xdc00 + *in++;\n    *out = 0;\n#endif\n    return res;\noom:\n    fprintf(stderr, "out of memory\\\\n");\n    return NULL;\n}\nint\nmain(int argc, char **argv)\n{\n    if (!argc) {\n        return __Pyx_main(0, NULL);\n    }\n    else {\n        int i, res;\n        wchar_t **argv_copy = (wchar_t **)malloc(sizeof(wchar_t*)*argc);\n        wchar_t **argv_copy2 = (wchar_t **)malloc(sizeof(wchar_t*)*argc);\n        char *oldloc = strdup(setlocale(LC_ALL, NULL));\n        if (!argv_copy || !argv_copy2 || !oldloc) {\n            fprintf(stderr, "out of memory\\\\n");\n            free(argv_copy);\n            free(argv_copy2);\n            free(oldloc);\n            return 1;\n        }\n        res = 0;\n        setlocale(LC_ALL, "");\n        for (i = 0; i < argc; i++) {\n            argv_copy2[i] = argv_copy[i] = __Pyx_char2wchar(argv[i]);\n            if (!argv_copy[i]) res = 1;\n        }\n        setlocale(LC_ALL, oldloc);\n        free(oldloc);\n        if (res == 0)\n            res = __Pyx_main(argc, argv_copy);\n        for (i = 0; i < argc; i++) {\n#if PY_VERSION_HEX < 0x03050000\n            free(argv_copy2[i]);\n#else\n            PyMem_RawFree(argv_copy2[i]);\n#endif\n        }\n        free(argv_copy);\n        free(argv_copy2);\n        return res;\n    }\n}\n#endif\n\n/* CIntFromPyVerify */\n    #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\\\n    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)\n#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\\\n    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)\n#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\\\n    {\\\n        func_type value = func_value;\\\n        if (sizeof(target_type) < sizeof(func_type)) {\\\n            if (unlikely(value != (func_type) (target_type) value)) {\\\n                func_type zero = 0;\\\n                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\\\n                    return (target_type) -1;\\\n                if (is_unsigned && unlikely(value < zero))\\\n                    goto raise_neg_overflow;\\\n                else\\\n                    goto raise_overflow;\\\n            }\\\n        }\\\n        return (target_type) value;\\\n    }\n\n/* CIntFromPy */\n    static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored "-Wconversion"\n#endif\n    const long neg_one = (long) -1, const_zero = (long) 0;\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic pop\n#endif\n    const int is_unsigned = neg_one > const_zero;\n#if PY_MAJOR_VERSION < 3\n    if (likely(PyInt_Check(x))) {\n        if (sizeof(long) < sizeof(long)) {\n            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))\n        } else {\n            long val = PyInt_AS_LONG(x);\n            if (is_unsigned && unlikely(val < 0)) {\n                goto raise_neg_overflow;\n            }\n            return (long) val;\n        }\n    } else\n#endif\n    if (likely(PyLong_Check(x))) {\n        if (is_unsigned) {\n#if CYTHON_USE_PYLONG_INTERNALS\n            const digit* digits = ((PyLongObject*)x)->ob_digit;\n            switch (Py_SIZE(x)) {\n                case  0: return (long) 0;\n                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])\n                case 2:\n                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {\n                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));\n                        }\n                    }\n                    break;\n                case 3:\n                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {\n                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));\n                        }\n                    }\n                    break;\n                case 4:\n                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {\n                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));\n                        }\n                    }\n                    break;\n            }\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON\n            if (unlikely(Py_SIZE(x) < 0)) {\n                goto raise_neg_overflow;\n            }\n#else\n            {\n                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);\n                if (unlikely(result < 0))\n                    return (long) -1;\n                if (unlikely(result == 1))\n                    goto raise_neg_overflow;\n            }\n#endif\n            if (sizeof(long) <= sizeof(unsigned long)) {\n                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))\n#ifdef HAVE_LONG_LONG\n            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {\n                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))\n#endif\n            }\n        } else {\n#if CYTHON_USE_PYLONG_INTERNALS\n            const digit* digits = ((PyLongObject*)x)->ob_digit;\n            switch (Py_SIZE(x)) {\n                case  0: return (long) 0;\n                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))\n                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])\n                case -2:\n                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {\n                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case 2:\n                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {\n                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case -3:\n                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {\n                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case 3:\n                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {\n                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case -4:\n                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {\n                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case 4:\n                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {\n                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n            }\n#endif\n            if (sizeof(long) <= sizeof(long)) {\n                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))\n#ifdef HAVE_LONG_LONG\n            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {\n                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))\n#endif\n            }\n        }\n        {\n#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)\n            PyErr_SetString(PyExc_RuntimeError,\n                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");\n#else\n            long val;\n            PyObject *v = __Pyx_PyNumber_IntOrLong(x);\n #if PY_MAJOR_VERSION < 3\n            if (likely(v) && !PyLong_Check(v)) {\n                PyObject *tmp = v;\n                v = PyNumber_Long(tmp);\n                Py_DECREF(tmp);\n            }\n #endif\n            if (likely(v)) {\n                int one = 1; int is_little = (int)*(unsigned char *)&one;\n                unsigned char *bytes = (unsigned char *)&val;\n                int ret = _PyLong_AsByteArray((PyLongObject *)v,\n                                              bytes, sizeof(val),\n                                              is_little, !is_unsigned);\n                Py_DECREF(v);\n                if (likely(!ret))\n                    return val;\n            }\n#endif\n            return (long) -1;\n        }\n    } else {\n        long val;\n        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);\n        if (!tmp) return (long) -1;\n        val = __Pyx_PyInt_As_long(tmp);\n        Py_DECREF(tmp);\n        return val;\n    }\nraise_overflow:\n    PyErr_SetString(PyExc_OverflowError,\n        "value too large to convert to long");\n    return (long) -1;\nraise_neg_overflow:\n    PyErr_SetString(PyExc_OverflowError,\n        "can\'t convert negative value to long");\n    return (long) -1;\n}\n\n/* CIntToPy */\n    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored "-Wconversion"\n#endif\n    const long neg_one = (long) -1, const_zero = (long) 0;\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic pop\n#endif\n    const int is_unsigned = neg_one > const_zero;\n    if (is_unsigned) {\n        if (sizeof(long) < sizeof(long)) {\n            return PyInt_FromLong((long) value);\n        } else if (sizeof(long) <= sizeof(unsigned long)) {\n            return PyLong_FromUnsignedLong((unsigned long) value);\n#ifdef HAVE_LONG_LONG\n        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {\n            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);\n#endif\n        }\n    } else {\n        if (sizeof(long) <= sizeof(long)) {\n            return PyInt_FromLong((long) value);\n#ifdef HAVE_LONG_LONG\n        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {\n            return PyLong_FromLongLong((PY_LONG_LONG) value);\n#endif\n        }\n    }\n    {\n        int one = 1; int little = (int)*(unsigned char *)&one;\n        unsigned char *bytes = (unsigned char *)&value;\n        return _PyLong_FromByteArray(bytes, sizeof(long),\n                                     little, !is_unsigned);\n    }\n}\n\n/* CIntFromPy */\n    static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored "-Wconversion"\n#endif\n    const int neg_one = (int) -1, const_zero = (int) 0;\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic pop\n#endif\n    const int is_unsigned = neg_one > const_zero;\n#if PY_MAJOR_VERSION < 3\n    if (likely(PyInt_Check(x))) {\n        if (sizeof(int) < sizeof(long)) {\n            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))\n        } else {\n            long val = PyInt_AS_LONG(x);\n            if (is_unsigned && unlikely(val < 0)) {\n                goto raise_neg_overflow;\n            }\n            return (int) val;\n        }\n    } else\n#endif\n    if (likely(PyLong_Check(x))) {\n        if (is_unsigned) {\n#if CYTHON_USE_PYLONG_INTERNALS\n            const digit* digits = ((PyLongObject*)x)->ob_digit;\n            switch (Py_SIZE(x)) {\n                case  0: return (int) 0;\n                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])\n                case 2:\n                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {\n                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));\n                        }\n                    }\n                    break;\n                case 3:\n                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {\n                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));\n                        }\n                    }\n                    break;\n                case 4:\n                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {\n                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));\n                        }\n                    }\n                    break;\n            }\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON\n            if (unlikely(Py_SIZE(x) < 0)) {\n                goto raise_neg_overflow;\n            }\n#else\n            {\n                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);\n                if (unlikely(result < 0))\n                    return (int) -1;\n                if (unlikely(result == 1))\n                    goto raise_neg_overflow;\n            }\n#endif\n            if (sizeof(int) <= sizeof(unsigned long)) {\n                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))\n#ifdef HAVE_LONG_LONG\n            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {\n                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))\n#endif\n            }\n        } else {\n#if CYTHON_USE_PYLONG_INTERNALS\n            const digit* digits = ((PyLongObject*)x)->ob_digit;\n            switch (Py_SIZE(x)) {\n                case  0: return (int) 0;\n                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))\n                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])\n                case -2:\n                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {\n                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case 2:\n                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {\n                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case -3:\n                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {\n                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case 3:\n                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {\n                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case -4:\n                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {\n                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case 4:\n                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {\n                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {\n                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n            }\n#endif\n            if (sizeof(int) <= sizeof(long)) {\n                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))\n#ifdef HAVE_LONG_LONG\n            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {\n                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))\n#endif\n            }\n        }\n        {\n#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)\n            PyErr_SetString(PyExc_RuntimeError,\n                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");\n#else\n            int val;\n            PyObject *v = __Pyx_PyNumber_IntOrLong(x);\n #if PY_MAJOR_VERSION < 3\n            if (likely(v) && !PyLong_Check(v)) {\n                PyObject *tmp = v;\n                v = PyNumber_Long(tmp);\n                Py_DECREF(tmp);\n            }\n #endif\n            if (likely(v)) {\n                int one = 1; int is_little = (int)*(unsigned char *)&one;\n                unsigned char *bytes = (unsigned char *)&val;\n                int ret = _PyLong_AsByteArray((PyLongObject *)v,\n                                              bytes, sizeof(val),\n                                              is_little, !is_unsigned);\n                Py_DECREF(v);\n                if (likely(!ret))\n                    return val;\n            }\n#endif\n            return (int) -1;\n        }\n    } else {\n        int val;\n        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);\n        if (!tmp) return (int) -1;\n        val = __Pyx_PyInt_As_int(tmp);\n        Py_DECREF(tmp);\n        return val;\n    }\nraise_overflow:\n    PyErr_SetString(PyExc_OverflowError,\n        "value too large to convert to int");\n    return (int) -1;\nraise_neg_overflow:\n    PyErr_SetString(PyExc_OverflowError,\n        "can\'t convert negative value to int");\n    return (int) -1;\n}\n\n/* FastTypeChecks */\n    #if CYTHON_COMPILING_IN_CPYTHON\nstatic int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {\n    while (a) {\n        a = a->tp_base;\n        if (a == b)\n            return 1;\n    }\n    return b == &PyBaseObject_Type;\n}\nstatic CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {\n    PyObject *mro;\n    if (a == b) return 1;\n    mro = a->tp_mro;\n    if (likely(mro)) {\n        Py_ssize_t i, n;\n        n = PyTuple_GET_SIZE(mro);\n        for (i = 0; i < n; i++) {\n            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)\n                return 1;\n        }\n        return 0;\n    }\n    return __Pyx_InBases(a, b);\n}\n#if PY_MAJOR_VERSION == 2\nstatic int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {\n    PyObject *exception, *value, *tb;\n    int res;\n    __Pyx_PyThreadState_declare\n    __Pyx_PyThreadState_assign\n    __Pyx_ErrFetch(&exception, &value, &tb);\n    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;\n    if (unlikely(res == -1)) {\n        PyErr_WriteUnraisable(err);\n        res = 0;\n    }\n    if (!res) {\n        res = PyObject_IsSubclass(err, exc_type2);\n        if (unlikely(res == -1)) {\n            PyErr_WriteUnraisable(err);\n            res = 0;\n        }\n    }\n    __Pyx_ErrRestore(exception, value, tb);\n    return res;\n}\n#else\nstatic CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {\n    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;\n    if (!res) {\n        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);\n    }\n    return res;\n}\n#endif\nstatic int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {\n    Py_ssize_t i, n;\n    assert(PyExceptionClass_Check(exc_type));\n    n = PyTuple_GET_SIZE(tuple);\n#if PY_MAJOR_VERSION >= 3\n    for (i=0; i<n; i++) {\n        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;\n    }\n#endif\n    for (i=0; i<n; i++) {\n        PyObject *t = PyTuple_GET_ITEM(tuple, i);\n        #if PY_MAJOR_VERSION < 3\n        if (likely(exc_type == t)) return 1;\n        #endif\n        if (likely(PyExceptionClass_Check(t))) {\n            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;\n        } else {\n        }\n    }\n    return 0;\n}\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {\n    if (likely(err == exc_type)) return 1;\n    if (likely(PyExceptionClass_Check(err))) {\n        if (likely(PyExceptionClass_Check(exc_type))) {\n            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);\n        } else if (likely(PyTuple_Check(exc_type))) {\n            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);\n        } else {\n        }\n    }\n    return PyErr_GivenExceptionMatches(err, exc_type);\n}\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {\n    assert(PyExceptionClass_Check(exc_type1));\n    assert(PyExceptionClass_Check(exc_type2));\n    if (likely(err == exc_type1 || err == exc_type2)) return 1;\n    if (likely(PyExceptionClass_Check(err))) {\n        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);\n    }\n    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));\n}\n#endif\n\n/* RaiseException */\n    #if PY_MAJOR_VERSION < 3\nstatic void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,\n                        CYTHON_UNUSED PyObject *cause) {\n    __Pyx_PyThreadState_declare\n    Py_XINCREF(type);\n    if (!value || value == Py_None)\n        value = NULL;\n    else\n        Py_INCREF(value);\n    if (!tb || tb == Py_None)\n        tb = NULL;\n    else {\n        Py_INCREF(tb);\n        if (!PyTraceBack_Check(tb)) {\n            PyErr_SetString(PyExc_TypeError,\n                "raise: arg 3 must be a traceback or None");\n            goto raise_error;\n        }\n    }\n    if (PyType_Check(type)) {\n#if CYTHON_COMPILING_IN_PYPY\n        if (!value) {\n            Py_INCREF(Py_None);\n            value = Py_None;\n        }\n#endif\n        PyErr_NormalizeException(&type, &value, &tb);\n    } else {\n        if (value) {\n            PyErr_SetString(PyExc_TypeError,\n                "instance exception may not have a separate value");\n            goto raise_error;\n        }\n        value = type;\n        type = (PyObject*) Py_TYPE(type);\n        Py_INCREF(type);\n        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {\n            PyErr_SetString(PyExc_TypeError,\n                "raise: exception class must be a subclass of BaseException");\n            goto raise_error;\n        }\n    }\n    __Pyx_PyThreadState_assign\n    __Pyx_ErrRestore(type, value, tb);\n    return;\nraise_error:\n    Py_XDECREF(value);\n    Py_XDECREF(type);\n    Py_XDECREF(tb);\n    return;\n}\n#else\nstatic void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {\n    PyObject* owned_instance = NULL;\n    if (tb == Py_None) {\n        tb = 0;\n    } else if (tb && !PyTraceBack_Check(tb)) {\n        PyErr_SetString(PyExc_TypeError,\n            "raise: arg 3 must be a traceback or None");\n        goto bad;\n    }\n    if (value == Py_None)\n        value = 0;\n    if (PyExceptionInstance_Check(type)) {\n        if (value) {\n            PyErr_SetString(PyExc_TypeError,\n                "instance exception may not have a separate value");\n            goto bad;\n        }\n        value = type;\n        type = (PyObject*) Py_TYPE(value);\n    } else if (PyExceptionClass_Check(type)) {\n        PyObject *instance_class = NULL;\n        if (value && PyExceptionInstance_Check(value)) {\n            instance_class = (PyObject*) Py_TYPE(value);\n            if (instance_class != type) {\n                int is_subclass = PyObject_IsSubclass(instance_class, type);\n                if (!is_subclass) {\n                    instance_class = NULL;\n                } else if (unlikely(is_subclass == -1)) {\n                    goto bad;\n                } else {\n                    type = instance_class;\n                }\n            }\n        }\n        if (!instance_class) {\n            PyObject *args;\n            if (!value)\n                args = PyTuple_New(0);\n            else if (PyTuple_Check(value)) {\n                Py_INCREF(value);\n                args = value;\n            } else\n                args = PyTuple_Pack(1, value);\n            if (!args)\n                goto bad;\n            owned_instance = PyObject_Call(type, args, NULL);\n            Py_DECREF(args);\n            if (!owned_instance)\n                goto bad;\n            value = owned_instance;\n            if (!PyExceptionInstance_Check(value)) {\n                PyErr_Format(PyExc_TypeError,\n                             "calling %R should have returned an instance of "\n                             "BaseException, not %R",\n                             type, Py_TYPE(value));\n                goto bad;\n            }\n        }\n    } else {\n        PyErr_SetString(PyExc_TypeError,\n            "raise: exception class must be a subclass of BaseException");\n        goto bad;\n    }\n    if (cause) {\n        PyObject *fixed_cause;\n        if (cause == Py_None) {\n            fixed_cause = NULL;\n        } else if (PyExceptionClass_Check(cause)) {\n            fixed_cause = PyObject_CallObject(cause, NULL);\n            if (fixed_cause == NULL)\n                goto bad;\n        } else if (PyExceptionInstance_Check(cause)) {\n            fixed_cause = cause;\n            Py_INCREF(fixed_cause);\n        } else {\n            PyErr_SetString(PyExc_TypeError,\n                            "exception causes must derive from "\n                            "BaseException");\n            goto bad;\n        }\n        PyException_SetCause(value, fixed_cause);\n    }\n    PyErr_SetObject(type, value);\n    if (tb) {\n#if CYTHON_COMPILING_IN_PYPY\n        PyObject *tmp_type, *tmp_value, *tmp_tb;\n        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);\n        Py_INCREF(tb);\n        PyErr_Restore(tmp_type, tmp_value, tb);\n        Py_XDECREF(tmp_tb);\n#else\n        PyThreadState *tstate = __Pyx_PyThreadState_Current;\n        PyObject* tmp_tb = tstate->curexc_traceback;\n        if (tb != tmp_tb) {\n            Py_INCREF(tb);\n            tstate->curexc_traceback = tb;\n            Py_XDECREF(tmp_tb);\n        }\n#endif\n    }\nbad:\n    Py_XDECREF(owned_instance);\n    return;\n}\n#endif\n\n/* GetTopmostException */\n    #if CYTHON_USE_EXC_INFO_STACK\nstatic _PyErr_StackItem *\n__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)\n{\n    _PyErr_StackItem *exc_info = tstate->exc_info;\n    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&\n           exc_info->previous_item != NULL)\n    {\n        exc_info = exc_info->previous_item;\n    }\n    return exc_info;\n}\n#endif\n\n/* SaveResetException */\n    #if CYTHON_FAST_THREAD_STATE\nstatic CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {\n    #if CYTHON_USE_EXC_INFO_STACK\n    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);\n    *type = exc_info->exc_type;\n    *value = exc_info->exc_value;\n    *tb = exc_info->exc_traceback;\n    #else\n    *type = tstate->exc_type;\n    *value = tstate->exc_value;\n    *tb = tstate->exc_traceback;\n    #endif\n    Py_XINCREF(*type);\n    Py_XINCREF(*value);\n    Py_XINCREF(*tb);\n}\nstatic CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n    #if CYTHON_USE_EXC_INFO_STACK\n    _PyErr_StackItem *exc_info = tstate->exc_info;\n    tmp_type = exc_info->exc_type;\n    tmp_value = exc_info->exc_value;\n    tmp_tb = exc_info->exc_traceback;\n    exc_info->exc_type = type;\n    exc_info->exc_value = value;\n    exc_info->exc_traceback = tb;\n    #else\n    tmp_type = tstate->exc_type;\n    tmp_value = tstate->exc_value;\n    tmp_tb = tstate->exc_traceback;\n    tstate->exc_type = type;\n    tstate->exc_value = value;\n    tstate->exc_traceback = tb;\n    #endif\n    Py_XDECREF(tmp_type);\n    Py_XDECREF(tmp_value);\n    Py_XDECREF(tmp_tb);\n}\n#endif\n\n/* SwapException */\n    #if CYTHON_FAST_THREAD_STATE\nstatic CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n    #if CYTHON_USE_EXC_INFO_STACK\n    _PyErr_StackItem *exc_info = tstate->exc_info;\n    tmp_type = exc_info->exc_type;\n    tmp_value = exc_info->exc_value;\n    tmp_tb = exc_info->exc_traceback;\n    exc_info->exc_type = *type;\n    exc_info->exc_value = *value;\n    exc_info->exc_traceback = *tb;\n    #else\n    tmp_type = tstate->exc_type;\n    tmp_value = tstate->exc_value;\n    tmp_tb = tstate->exc_traceback;\n    tstate->exc_type = *type;\n    tstate->exc_value = *value;\n    tstate->exc_traceback = *tb;\n    #endif\n    *type = tmp_type;\n    *value = tmp_value;\n    *tb = tmp_tb;\n}\n#else\nstatic CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);\n    PyErr_SetExcInfo(*type, *value, *tb);\n    *type = tmp_type;\n    *value = tmp_value;\n    *tb = tmp_tb;\n}\n#endif\n\n/* PyObjectGetMethod */\n    static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {\n    PyObject *attr;\n#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP\n    PyTypeObject *tp = Py_TYPE(obj);\n    PyObject *descr;\n    descrgetfunc f = NULL;\n    PyObject **dictptr, *dict;\n    int meth_found = 0;\n    assert (*method == NULL);\n    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {\n        attr = __Pyx_PyObject_GetAttrStr(obj, name);\n        goto try_unpack;\n    }\n    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {\n        return 0;\n    }\n    descr = _PyType_Lookup(tp, name);\n    if (likely(descr != NULL)) {\n        Py_INCREF(descr);\n#if PY_MAJOR_VERSION >= 3\n        #ifdef __Pyx_CyFunction_USED\n        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))\n        #else\n        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))\n        #endif\n#else\n        #ifdef __Pyx_CyFunction_USED\n        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))\n        #else\n        if (likely(PyFunction_Check(descr)))\n        #endif\n#endif\n        {\n            meth_found = 1;\n        } else {\n            f = Py_TYPE(descr)->tp_descr_get;\n            if (f != NULL && PyDescr_IsData(descr)) {\n                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));\n                Py_DECREF(descr);\n                goto try_unpack;\n            }\n        }\n    }\n    dictptr = _PyObject_GetDictPtr(obj);\n    if (dictptr != NULL && (dict = *dictptr) != NULL) {\n        Py_INCREF(dict);\n        attr = __Pyx_PyDict_GetItemStr(dict, name);\n        if (attr != NULL) {\n            Py_INCREF(attr);\n            Py_DECREF(dict);\n            Py_XDECREF(descr);\n            goto try_unpack;\n        }\n        Py_DECREF(dict);\n    }\n    if (meth_found) {\n        *method = descr;\n        return 1;\n    }\n    if (f != NULL) {\n        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));\n        Py_DECREF(descr);\n        goto try_unpack;\n    }\n    if (descr != NULL) {\n        *method = descr;\n        return 0;\n    }\n    PyErr_Format(PyExc_AttributeError,\n#if PY_MAJOR_VERSION >= 3\n                 "\'%.50s\' object has no attribute \'%U\'",\n                 tp->tp_name, name);\n#else\n                 "\'%.50s\' object has no attribute \'%.400s\'",\n                 tp->tp_name, PyString_AS_STRING(name));\n#endif\n    return 0;\n#else\n    attr = __Pyx_PyObject_GetAttrStr(obj, name);\n    goto try_unpack;\n#endif\ntry_unpack:\n#if CYTHON_UNPACK_METHODS\n    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {\n        PyObject *function = PyMethod_GET_FUNCTION(attr);\n        Py_INCREF(function);\n        Py_DECREF(attr);\n        *method = function;\n        return 1;\n    }\n#endif\n    *method = attr;\n    return 0;\n}\n\n/* PyObjectCallMethod1 */\n    static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {\n    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);\n    Py_DECREF(method);\n    return result;\n}\nstatic PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {\n    PyObject *method = NULL, *result;\n    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);\n    if (likely(is_method)) {\n        result = __Pyx_PyObject_Call2Args(method, obj, arg);\n        Py_DECREF(method);\n        return result;\n    }\n    if (unlikely(!method)) return NULL;\n    return __Pyx__PyObject_CallMethod1(method, arg);\n}\n\n/* CoroutineBase */\n    #include <structmember.h>\n#include <frameobject.h>\n#if PY_VERSION_HEX >= 0x030b00a6\n  #ifndef Py_BUILD_CORE\n    #define Py_BUILD_CORE 1\n  #endif\n  #include "internal/pycore_frame.h"\n#endif\n#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)\nstatic int __Pyx_PyGen__FetchStopIterationValue(CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject **pvalue) {\n    PyObject *et, *ev, *tb;\n    PyObject *value = NULL;\n    __Pyx_ErrFetch(&et, &ev, &tb);\n    if (!et) {\n        Py_XDECREF(tb);\n        Py_XDECREF(ev);\n        Py_INCREF(Py_None);\n        *pvalue = Py_None;\n        return 0;\n    }\n    if (likely(et == PyExc_StopIteration)) {\n        if (!ev) {\n            Py_INCREF(Py_None);\n            value = Py_None;\n        }\n#if PY_VERSION_HEX >= 0x030300A0\n        else if (Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {\n            value = ((PyStopIterationObject *)ev)->value;\n            Py_INCREF(value);\n            Py_DECREF(ev);\n        }\n#endif\n        else if (unlikely(PyTuple_Check(ev))) {\n            if (PyTuple_GET_SIZE(ev) >= 1) {\n#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n                value = PyTuple_GET_ITEM(ev, 0);\n                Py_INCREF(value);\n#else\n                value = PySequence_ITEM(ev, 0);\n#endif\n            } else {\n                Py_INCREF(Py_None);\n                value = Py_None;\n            }\n            Py_DECREF(ev);\n        }\n        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {\n            value = ev;\n        }\n        if (likely(value)) {\n            Py_XDECREF(tb);\n            Py_DECREF(et);\n            *pvalue = value;\n            return 0;\n        }\n    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {\n        __Pyx_ErrRestore(et, ev, tb);\n        return -1;\n    }\n    PyErr_NormalizeException(&et, &ev, &tb);\n    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {\n        __Pyx_ErrRestore(et, ev, tb);\n        return -1;\n    }\n    Py_XDECREF(tb);\n    Py_DECREF(et);\n#if PY_VERSION_HEX >= 0x030300A0\n    value = ((PyStopIterationObject *)ev)->value;\n    Py_INCREF(value);\n    Py_DECREF(ev);\n#else\n    {\n        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);\n        Py_DECREF(ev);\n        if (likely(args)) {\n            value = PySequence_GetItem(args, 0);\n            Py_DECREF(args);\n        }\n        if (unlikely(!value)) {\n            __Pyx_ErrRestore(NULL, NULL, NULL);\n            Py_INCREF(Py_None);\n            value = Py_None;\n        }\n    }\n#endif\n    *pvalue = value;\n    return 0;\n}\nstatic CYTHON_INLINE\nvoid __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {\n    PyObject *t, *v, *tb;\n    t = exc_state->exc_type;\n    v = exc_state->exc_value;\n    tb = exc_state->exc_traceback;\n    exc_state->exc_type = NULL;\n    exc_state->exc_value = NULL;\n    exc_state->exc_traceback = NULL;\n    Py_XDECREF(t);\n    Py_XDECREF(v);\n    Py_XDECREF(tb);\n}\n#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)\nstatic void __Pyx__Coroutine_AlreadyRunningError(CYTHON_UNUSED __pyx_CoroutineObject *gen) {\n    const char *msg;\n    if ((0)) {\n    #ifdef __Pyx_Coroutine_USED\n    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {\n        msg = "coroutine already executing";\n    #endif\n    #ifdef __Pyx_AsyncGen_USED\n    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {\n        msg = "async generator already executing";\n    #endif\n    } else {\n        msg = "generator already executing";\n    }\n    PyErr_SetString(PyExc_ValueError, msg);\n}\n#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)\nstatic void __Pyx__Coroutine_NotStartedError(CYTHON_UNUSED PyObject *gen) {\n    const char *msg;\n    if ((0)) {\n    #ifdef __Pyx_Coroutine_USED\n    } else if (__Pyx_Coroutine_Check(gen)) {\n        msg = "can\'t send non-None value to a just-started coroutine";\n    #endif\n    #ifdef __Pyx_AsyncGen_USED\n    } else if (__Pyx_AsyncGen_CheckExact(gen)) {\n        msg = "can\'t send non-None value to a just-started async generator";\n    #endif\n    } else {\n        msg = "can\'t send non-None value to a just-started generator";\n    }\n    PyErr_SetString(PyExc_TypeError, msg);\n}\n#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)\nstatic void __Pyx__Coroutine_AlreadyTerminatedError(CYTHON_UNUSED PyObject *gen, PyObject *value, CYTHON_UNUSED int closing) {\n    #ifdef __Pyx_Coroutine_USED\n    if (!closing && __Pyx_Coroutine_Check(gen)) {\n        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");\n    } else\n    #endif\n    if (value) {\n        #ifdef __Pyx_AsyncGen_USED\n        if (__Pyx_AsyncGen_CheckExact(gen))\n            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);\n        else\n        #endif\n        PyErr_SetNone(PyExc_StopIteration);\n    }\n}\nstatic\nPyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {\n    __Pyx_PyThreadState_declare\n    PyThreadState *tstate;\n    __Pyx_ExcInfoStruct *exc_state;\n    PyObject *retval;\n    assert(!self->is_running);\n    if (unlikely(self->resume_label == 0)) {\n        if (unlikely(value && value != Py_None)) {\n            return __Pyx_Coroutine_NotStartedError((PyObject*)self);\n        }\n    }\n    if (unlikely(self->resume_label == -1)) {\n        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);\n    }\n#if CYTHON_FAST_THREAD_STATE\n    __Pyx_PyThreadState_assign\n    tstate = __pyx_tstate;\n#else\n    tstate = __Pyx_PyThreadState_Current;\n#endif\n    exc_state = &self->gi_exc_state;\n    if (exc_state->exc_type) {\n        #if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON\n        #else\n        if (exc_state->exc_traceback) {\n            PyTracebackObject *tb = (PyTracebackObject *) exc_state->exc_traceback;\n            PyFrameObject *f = tb->tb_frame;\n            assert(f->f_back == NULL);\n            #if PY_VERSION_HEX >= 0x030B00A1\n            f->f_back = PyThreadState_GetFrame(tstate);\n            #else\n            Py_XINCREF(tstate->frame);\n            f->f_back = tstate->frame;\n            #endif\n        }\n        #endif\n    }\n#if CYTHON_USE_EXC_INFO_STACK\n    exc_state->previous_item = tstate->exc_info;\n    tstate->exc_info = exc_state;\n#else\n    if (exc_state->exc_type) {\n        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);\n    } else {\n        __Pyx_Coroutine_ExceptionClear(exc_state);\n        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);\n    }\n#endif\n    self->is_running = 1;\n    retval = self->body((PyObject *) self, tstate, value);\n    self->is_running = 0;\n#if CYTHON_USE_EXC_INFO_STACK\n    exc_state = &self->gi_exc_state;\n    tstate->exc_info = exc_state->previous_item;\n    exc_state->previous_item = NULL;\n    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);\n#endif\n    return retval;\n}\nstatic CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {\n    PyObject *exc_tb = exc_state->exc_traceback;\n    if (likely(exc_tb)) {\n#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON\n#else\n        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;\n        PyFrameObject *f = tb->tb_frame;\n        Py_CLEAR(f->f_back);\n#endif\n    }\n}\nstatic CYTHON_INLINE\nPyObject *__Pyx_Coroutine_MethodReturn(CYTHON_UNUSED PyObject* gen, PyObject *retval) {\n    if (unlikely(!retval)) {\n        __Pyx_PyThreadState_declare\n        __Pyx_PyThreadState_assign\n        if (!__Pyx_PyErr_Occurred()) {\n            PyObject *exc = PyExc_StopIteration;\n            #ifdef __Pyx_AsyncGen_USED\n            if (__Pyx_AsyncGen_CheckExact(gen))\n                exc = __Pyx_PyExc_StopAsyncIteration;\n            #endif\n            __Pyx_PyErr_SetNone(exc);\n        }\n    }\n    return retval;\n}\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)\nstatic CYTHON_INLINE\nPyObject *__Pyx_PyGen_Send(PyGenObject *gen, PyObject *arg) {\n#if PY_VERSION_HEX <= 0x030A00A1\n    return _PyGen_Send(gen, arg);\n#else\n    PyObject *result;\n    if (PyIter_Send((PyObject*)gen, arg ? arg : Py_None, &result) == PYGEN_RETURN) {\n        if (PyAsyncGen_CheckExact(gen)) {\n            assert(result == Py_None);\n            PyErr_SetNone(PyExc_StopAsyncIteration);\n        }\n        else if (result == Py_None) {\n            PyErr_SetNone(PyExc_StopIteration);\n        }\n        else {\n            _PyGen_SetStopIterationValue(result);\n        }\n        Py_CLEAR(result);\n    }\n    return result;\n#endif\n}\n#endif\nstatic CYTHON_INLINE\nPyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {\n    PyObject *ret;\n    PyObject *val = NULL;\n    __Pyx_Coroutine_Undelegate(gen);\n    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);\n    ret = __Pyx_Coroutine_SendEx(gen, val, 0);\n    Py_XDECREF(val);\n    return ret;\n}\nstatic PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {\n    PyObject *retval;\n    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;\n    PyObject *yf = gen->yieldfrom;\n    if (unlikely(gen->is_running))\n        return __Pyx_Coroutine_AlreadyRunningError(gen);\n    if (yf) {\n        PyObject *ret;\n        gen->is_running = 1;\n        #ifdef __Pyx_Generator_USED\n        if (__Pyx_Generator_CheckExact(yf)) {\n            ret = __Pyx_Coroutine_Send(yf, value);\n        } else\n        #endif\n        #ifdef __Pyx_Coroutine_USED\n        if (__Pyx_Coroutine_Check(yf)) {\n            ret = __Pyx_Coroutine_Send(yf, value);\n        } else\n        #endif\n        #ifdef __Pyx_AsyncGen_USED\n        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {\n            ret = __Pyx_async_gen_asend_send(yf, value);\n        } else\n        #endif\n        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)\n        if (PyGen_CheckExact(yf)) {\n            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);\n        } else\n        #endif\n        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)\n        if (PyCoro_CheckExact(yf)) {\n            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);\n        } else\n        #endif\n        {\n            if (value == Py_None)\n                ret = Py_TYPE(yf)->tp_iternext(yf);\n            else\n                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);\n        }\n        gen->is_running = 0;\n        if (likely(ret)) {\n            return ret;\n        }\n        retval = __Pyx_Coroutine_FinishDelegation(gen);\n    } else {\n        retval = __Pyx_Coroutine_SendEx(gen, value, 0);\n    }\n    return __Pyx_Coroutine_MethodReturn(self, retval);\n}\nstatic int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {\n    PyObject *retval = NULL;\n    int err = 0;\n    #ifdef __Pyx_Generator_USED\n    if (__Pyx_Generator_CheckExact(yf)) {\n        retval = __Pyx_Coroutine_Close(yf);\n        if (!retval)\n            return -1;\n    } else\n    #endif\n    #ifdef __Pyx_Coroutine_USED\n    if (__Pyx_Coroutine_Check(yf)) {\n        retval = __Pyx_Coroutine_Close(yf);\n        if (!retval)\n            return -1;\n    } else\n    if (__Pyx_CoroutineAwait_CheckExact(yf)) {\n        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);\n        if (!retval)\n            return -1;\n    } else\n    #endif\n    #ifdef __Pyx_AsyncGen_USED\n    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {\n        retval = __Pyx_async_gen_asend_close(yf, NULL);\n    } else\n    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {\n        retval = __Pyx_async_gen_athrow_close(yf, NULL);\n    } else\n    #endif\n    {\n        PyObject *meth;\n        gen->is_running = 1;\n        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);\n        if (unlikely(!meth)) {\n            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {\n                PyErr_WriteUnraisable(yf);\n            }\n            PyErr_Clear();\n        } else {\n            retval = PyObject_CallFunction(meth, NULL);\n            Py_DECREF(meth);\n            if (!retval)\n                err = -1;\n        }\n        gen->is_running = 0;\n    }\n    Py_XDECREF(retval);\n    return err;\n}\nstatic PyObject *__Pyx_Generator_Next(PyObject *self) {\n    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;\n    PyObject *yf = gen->yieldfrom;\n    if (unlikely(gen->is_running))\n        return __Pyx_Coroutine_AlreadyRunningError(gen);\n    if (yf) {\n        PyObject *ret;\n        gen->is_running = 1;\n        #ifdef __Pyx_Generator_USED\n        if (__Pyx_Generator_CheckExact(yf)) {\n            ret = __Pyx_Generator_Next(yf);\n        } else\n        #endif\n        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)\n        if (PyGen_CheckExact(yf)) {\n            ret = __Pyx_PyGen_Send((PyGenObject*)yf, NULL);\n        } else\n        #endif\n        #ifdef __Pyx_Coroutine_USED\n        if (__Pyx_Coroutine_Check(yf)) {\n            ret = __Pyx_Coroutine_Send(yf, Py_None);\n        } else\n        #endif\n            ret = Py_TYPE(yf)->tp_iternext(yf);\n        gen->is_running = 0;\n        if (likely(ret)) {\n            return ret;\n        }\n        return __Pyx_Coroutine_FinishDelegation(gen);\n    }\n    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);\n}\nstatic PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, CYTHON_UNUSED PyObject *arg) {\n    return __Pyx_Coroutine_Close(self);\n}\nstatic PyObject *__Pyx_Coroutine_Close(PyObject *self) {\n    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;\n    PyObject *retval, *raised_exception;\n    PyObject *yf = gen->yieldfrom;\n    int err = 0;\n    if (unlikely(gen->is_running))\n        return __Pyx_Coroutine_AlreadyRunningError(gen);\n    if (yf) {\n        Py_INCREF(yf);\n        err = __Pyx_Coroutine_CloseIter(gen, yf);\n        __Pyx_Coroutine_Undelegate(gen);\n        Py_DECREF(yf);\n    }\n    if (err == 0)\n        PyErr_SetNone(PyExc_GeneratorExit);\n    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);\n    if (unlikely(retval)) {\n        const char *msg;\n        Py_DECREF(retval);\n        if ((0)) {\n        #ifdef __Pyx_Coroutine_USED\n        } else if (__Pyx_Coroutine_Check(self)) {\n            msg = "coroutine ignored GeneratorExit";\n        #endif\n        #ifdef __Pyx_AsyncGen_USED\n        } else if (__Pyx_AsyncGen_CheckExact(self)) {\n#if PY_VERSION_HEX < 0x03060000\n            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";\n#else\n            msg = "async generator ignored GeneratorExit";\n#endif\n        #endif\n        } else {\n            msg = "generator ignored GeneratorExit";\n        }\n        PyErr_SetString(PyExc_RuntimeError, msg);\n        return NULL;\n    }\n    raised_exception = PyErr_Occurred();\n    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {\n        if (raised_exception) PyErr_Clear();\n        Py_INCREF(Py_None);\n        return Py_None;\n    }\n    return NULL;\n}\nstatic PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,\n                                        PyObject *args, int close_on_genexit) {\n    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;\n    PyObject *yf = gen->yieldfrom;\n    if (unlikely(gen->is_running))\n        return __Pyx_Coroutine_AlreadyRunningError(gen);\n    if (yf) {\n        PyObject *ret;\n        Py_INCREF(yf);\n        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {\n            int err = __Pyx_Coroutine_CloseIter(gen, yf);\n            Py_DECREF(yf);\n            __Pyx_Coroutine_Undelegate(gen);\n            if (err < 0)\n                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));\n            goto throw_here;\n        }\n        gen->is_running = 1;\n        if (0\n        #ifdef __Pyx_Generator_USED\n            || __Pyx_Generator_CheckExact(yf)\n        #endif\n        #ifdef __Pyx_Coroutine_USED\n            || __Pyx_Coroutine_Check(yf)\n        #endif\n            ) {\n            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);\n        #ifdef __Pyx_Coroutine_USED\n        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {\n            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);\n        #endif\n        } else {\n            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);\n            if (unlikely(!meth)) {\n                Py_DECREF(yf);\n                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {\n                    gen->is_running = 0;\n                    return NULL;\n                }\n                PyErr_Clear();\n                __Pyx_Coroutine_Undelegate(gen);\n                gen->is_running = 0;\n                goto throw_here;\n            }\n            if (likely(args)) {\n                ret = PyObject_CallObject(meth, args);\n            } else {\n                ret = PyObject_CallFunctionObjArgs(meth, typ, val, tb, NULL);\n            }\n            Py_DECREF(meth);\n        }\n        gen->is_running = 0;\n        Py_DECREF(yf);\n        if (!ret) {\n            ret = __Pyx_Coroutine_FinishDelegation(gen);\n        }\n        return __Pyx_Coroutine_MethodReturn(self, ret);\n    }\nthrow_here:\n    __Pyx_Raise(typ, val, tb, NULL);\n    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));\n}\nstatic PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {\n    PyObject *typ;\n    PyObject *val = NULL;\n    PyObject *tb = NULL;\n    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))\n        return NULL;\n    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);\n}\nstatic CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {\n    Py_VISIT(exc_state->exc_type);\n    Py_VISIT(exc_state->exc_value);\n    Py_VISIT(exc_state->exc_traceback);\n    return 0;\n}\nstatic int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {\n    Py_VISIT(gen->closure);\n    Py_VISIT(gen->classobj);\n    Py_VISIT(gen->yieldfrom);\n    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);\n}\nstatic int __Pyx_Coroutine_clear(PyObject *self) {\n    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;\n    Py_CLEAR(gen->closure);\n    Py_CLEAR(gen->classobj);\n    Py_CLEAR(gen->yieldfrom);\n    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);\n#ifdef __Pyx_AsyncGen_USED\n    if (__Pyx_AsyncGen_CheckExact(self)) {\n        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);\n    }\n#endif\n    Py_CLEAR(gen->gi_code);\n    Py_CLEAR(gen->gi_frame);\n    Py_CLEAR(gen->gi_name);\n    Py_CLEAR(gen->gi_qualname);\n    Py_CLEAR(gen->gi_modulename);\n    return 0;\n}\nstatic void __Pyx_Coroutine_dealloc(PyObject *self) {\n    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;\n    PyObject_GC_UnTrack(gen);\n    if (gen->gi_weakreflist != NULL)\n        PyObject_ClearWeakRefs(self);\n    if (gen->resume_label >= 0) {\n        PyObject_GC_Track(self);\n#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE\n        if (PyObject_CallFinalizerFromDealloc(self))\n#else\n        Py_TYPE(gen)->tp_del(self);\n        if (Py_REFCNT(self) > 0)\n#endif\n        {\n            return;\n        }\n        PyObject_GC_UnTrack(self);\n    }\n#ifdef __Pyx_AsyncGen_USED\n    if (__Pyx_AsyncGen_CheckExact(self)) {\n        /* We have to handle this case for asynchronous generators\n           right here, because this code has to be between UNTRACK\n           and GC_Del. */\n        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);\n    }\n#endif\n    __Pyx_Coroutine_clear(self);\n    PyObject_GC_Del(gen);\n}\nstatic void __Pyx_Coroutine_del(PyObject *self) {\n    PyObject *error_type, *error_value, *error_traceback;\n    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;\n    __Pyx_PyThreadState_declare\n    if (gen->resume_label < 0) {\n        return;\n    }\n#if !CYTHON_USE_TP_FINALIZE\n    assert(self->ob_refcnt == 0);\n    __Pyx_SET_REFCNT(self, 1);\n#endif\n    __Pyx_PyThreadState_assign\n    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);\n#ifdef __Pyx_AsyncGen_USED\n    if (__Pyx_AsyncGen_CheckExact(self)) {\n        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;\n        PyObject *finalizer = agen->ag_finalizer;\n        if (finalizer && !agen->ag_closed) {\n            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);\n            if (unlikely(!res)) {\n                PyErr_WriteUnraisable(self);\n            } else {\n                Py_DECREF(res);\n            }\n            __Pyx_ErrRestore(error_type, error_value, error_traceback);\n            return;\n        }\n    }\n#endif\n    if (unlikely(gen->resume_label == 0 && !error_value)) {\n#ifdef __Pyx_Coroutine_USED\n#ifdef __Pyx_Generator_USED\n    if (!__Pyx_Generator_CheckExact(self))\n#endif\n        {\n        PyObject_GC_UnTrack(self);\n#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)\n        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine \'%.50S\' was never awaited", gen->gi_qualname) < 0))\n            PyErr_WriteUnraisable(self);\n#else\n        {PyObject *msg;\n        char *cmsg;\n        #if CYTHON_COMPILING_IN_PYPY\n        msg = NULL;\n        cmsg = (char*) "coroutine was never awaited";\n        #else\n        char *cname;\n        PyObject *qualname;\n        qualname = gen->gi_qualname;\n        cname = PyString_AS_STRING(qualname);\n        msg = PyString_FromFormat("coroutine \'%.50s\' was never awaited", cname);\n        if (unlikely(!msg)) {\n            PyErr_Clear();\n            cmsg = (char*) "coroutine was never awaited";\n        } else {\n            cmsg = PyString_AS_STRING(msg);\n        }\n        #endif\n        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))\n            PyErr_WriteUnraisable(self);\n        Py_XDECREF(msg);}\n#endif\n        PyObject_GC_Track(self);\n        }\n#endif\n    } else {\n        PyObject *res = __Pyx_Coroutine_Close(self);\n        if (unlikely(!res)) {\n            if (PyErr_Occurred())\n                PyErr_WriteUnraisable(self);\n        } else {\n            Py_DECREF(res);\n        }\n    }\n    __Pyx_ErrRestore(error_type, error_value, error_traceback);\n#if !CYTHON_USE_TP_FINALIZE\n    assert(Py_REFCNT(self) > 0);\n    if (--self->ob_refcnt == 0) {\n        return;\n    }\n    {\n        Py_ssize_t refcnt = Py_REFCNT(self);\n        _Py_NewReference(self);\n        __Pyx_SET_REFCNT(self, refcnt);\n    }\n#if CYTHON_COMPILING_IN_CPYTHON\n    assert(PyType_IS_GC(Py_TYPE(self)) &&\n           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);\n    _Py_DEC_REFTOTAL;\n#endif\n#ifdef COUNT_ALLOCS\n    --Py_TYPE(self)->tp_frees;\n    --Py_TYPE(self)->tp_allocs;\n#endif\n#endif\n}\nstatic PyObject *\n__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)\n{\n    PyObject *name = self->gi_name;\n    if (unlikely(!name)) name = Py_None;\n    Py_INCREF(name);\n    return name;\n}\nstatic int\n__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)\n{\n    PyObject *tmp;\n#if PY_MAJOR_VERSION >= 3\n    if (unlikely(value == NULL || !PyUnicode_Check(value)))\n#else\n    if (unlikely(value == NULL || !PyString_Check(value)))\n#endif\n    {\n        PyErr_SetString(PyExc_TypeError,\n                        "__name__ must be set to a string object");\n        return -1;\n    }\n    tmp = self->gi_name;\n    Py_INCREF(value);\n    self->gi_name = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)\n{\n    PyObject *name = self->gi_qualname;\n    if (unlikely(!name)) name = Py_None;\n    Py_INCREF(name);\n    return name;\n}\nstatic int\n__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)\n{\n    PyObject *tmp;\n#if PY_MAJOR_VERSION >= 3\n    if (unlikely(value == NULL || !PyUnicode_Check(value)))\n#else\n    if (unlikely(value == NULL || !PyString_Check(value)))\n#endif\n    {\n        PyErr_SetString(PyExc_TypeError,\n                        "__qualname__ must be set to a string object");\n        return -1;\n    }\n    tmp = self->gi_qualname;\n    Py_INCREF(value);\n    self->gi_qualname = value;\n    Py_XDECREF(tmp);\n    return 0;\n}\nstatic PyObject *\n__Pyx_Coroutine_get_frame(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)\n{\n    PyObject *frame = self->gi_frame;\n    if (!frame) {\n        if (unlikely(!self->gi_code)) {\n            Py_RETURN_NONE;\n        }\n        frame = (PyObject *) PyFrame_New(\n            PyThreadState_Get(),            /*PyThreadState *tstate,*/\n            (PyCodeObject*) self->gi_code,  /*PyCodeObject *code,*/\n            __pyx_d,                 /*PyObject *globals,*/\n            0                               /*PyObject *locals*/\n        );\n        if (unlikely(!frame))\n            return NULL;\n        self->gi_frame = frame;\n    }\n    Py_INCREF(frame);\n    return frame;\n}\nstatic __pyx_CoroutineObject *__Pyx__Coroutine_New(\n            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,\n            PyObject *name, PyObject *qualname, PyObject *module_name) {\n    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);\n    if (unlikely(!gen))\n        return NULL;\n    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);\n}\nstatic __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(\n            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,\n            PyObject *name, PyObject *qualname, PyObject *module_name) {\n    gen->body = body;\n    gen->closure = closure;\n    Py_XINCREF(closure);\n    gen->is_running = 0;\n    gen->resume_label = 0;\n    gen->classobj = NULL;\n    gen->yieldfrom = NULL;\n    gen->gi_exc_state.exc_type = NULL;\n    gen->gi_exc_state.exc_value = NULL;\n    gen->gi_exc_state.exc_traceback = NULL;\n#if CYTHON_USE_EXC_INFO_STACK\n    gen->gi_exc_state.previous_item = NULL;\n#endif\n    gen->gi_weakreflist = NULL;\n    Py_XINCREF(qualname);\n    gen->gi_qualname = qualname;\n    Py_XINCREF(name);\n    gen->gi_name = name;\n    Py_XINCREF(module_name);\n    gen->gi_modulename = module_name;\n    Py_XINCREF(code);\n    gen->gi_code = code;\n    gen->gi_frame = NULL;\n    PyObject_GC_Track(gen);\n    return gen;\n}\n\n/* PatchModuleWithCoroutine */\n    static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {\n#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)\n    int result;\n    PyObject *globals, *result_obj;\n    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;\n    result = PyDict_SetItemString(globals, "_cython_coroutine_type",\n    #ifdef __Pyx_Coroutine_USED\n        (PyObject*)__pyx_CoroutineType);\n    #else\n        Py_None);\n    #endif\n    if (unlikely(result < 0)) goto ignore;\n    result = PyDict_SetItemString(globals, "_cython_generator_type",\n    #ifdef __Pyx_Generator_USED\n        (PyObject*)__pyx_GeneratorType);\n    #else\n        Py_None);\n    #endif\n    if (unlikely(result < 0)) goto ignore;\n    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;\n    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;\n    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);\n    if (unlikely(!result_obj)) goto ignore;\n    Py_DECREF(result_obj);\n    Py_DECREF(globals);\n    return module;\nignore:\n    Py_XDECREF(globals);\n    PyErr_WriteUnraisable(module);\n    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {\n        Py_DECREF(module);\n        module = NULL;\n    }\n#else\n    py_code++;\n#endif\n    return module;\n}\n\n/* PatchGeneratorABC */\n    #ifndef CYTHON_REGISTER_ABCS\n#define CYTHON_REGISTER_ABCS 1\n#endif\n#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)\nstatic PyObject* __Pyx_patch_abc_module(PyObject *module);\nstatic PyObject* __Pyx_patch_abc_module(PyObject *module) {\n    module = __Pyx_Coroutine_patch_module(\n        module, ""\n"if _cython_generator_type is not None:\\n"\n"    try: Generator = _module.Generator\\n"\n"    except AttributeError: pass\\n"\n"    else: Generator.register(_cython_generator_type)\\n"\n"if _cython_coroutine_type is not None:\\n"\n"    try: Coroutine = _module.Coroutine\\n"\n"    except AttributeError: pass\\n"\n"    else: Coroutine.register(_cython_coroutine_type)\\n"\n    );\n    return module;\n}\n#endif\nstatic int __Pyx_patch_abc(void) {\n#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)\n    static int abc_patched = 0;\n    if (CYTHON_REGISTER_ABCS && !abc_patched) {\n        PyObject *module;\n        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");\n        if (!module) {\n            PyErr_WriteUnraisable(NULL);\n            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,\n                    ((PY_MAJOR_VERSION >= 3) ?\n                        "Cython module failed to register with collections.abc module" :\n                        "Cython module failed to register with collections module"), 1) < 0)) {\n                return -1;\n            }\n        } else {\n            module = __Pyx_patch_abc_module(module);\n            abc_patched = 1;\n            if (unlikely(!module))\n                return -1;\n            Py_DECREF(module);\n        }\n        module = PyImport_ImportModule("backports_abc");\n        if (module) {\n            module = __Pyx_patch_abc_module(module);\n            Py_XDECREF(module);\n        }\n        if (!module) {\n            PyErr_Clear();\n        }\n    }\n#else\n    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);\n#endif\n    return 0;\n}\n\n/* Generator */\n    static PyMethodDef __pyx_Generator_methods[] = {\n    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,\n     (char*) PyDoc_STR("send(arg) -> send \'arg\' into generator,\\nreturn next yielded value or raise StopIteration.")},\n    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,\n     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\\nreturn next yielded value or raise StopIteration.")},\n    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,\n     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},\n    {0, 0, 0, 0}\n};\nstatic PyMemberDef __pyx_Generator_memberlist[] = {\n    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},\n    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,\n     (char*) PyDoc_STR("object being iterated by \'yield from\', or None")},\n    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},\n    {0, 0, 0, 0, 0}\n};\nstatic PyGetSetDef __pyx_Generator_getsets[] = {\n    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,\n     (char*) PyDoc_STR("name of the generator"), 0},\n    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,\n     (char*) PyDoc_STR("qualified name of the generator"), 0},\n    {(char *) "gi_frame", (getter)__Pyx_Coroutine_get_frame, NULL,\n     (char*) PyDoc_STR("Frame of the generator"), 0},\n    {0, 0, 0, 0, 0}\n};\nstatic PyTypeObject __pyx_GeneratorType_type = {\n    PyVarObject_HEAD_INIT(0, 0)\n    "generator",\n    sizeof(__pyx_CoroutineObject),\n    0,\n    (destructor) __Pyx_Coroutine_dealloc,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,\n    0,\n    (traverseproc) __Pyx_Coroutine_traverse,\n    0,\n    0,\n    offsetof(__pyx_CoroutineObject, gi_weakreflist),\n    0,\n    (iternextfunc) __Pyx_Generator_Next,\n    __pyx_Generator_methods,\n    __pyx_Generator_memberlist,\n    __pyx_Generator_getsets,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n#if CYTHON_USE_TP_FINALIZE\n    0,\n#else\n    __Pyx_Coroutine_del,\n#endif\n    0,\n#if CYTHON_USE_TP_FINALIZE\n    __Pyx_Coroutine_del,\n#elif PY_VERSION_HEX >= 0x030400a1\n    0,\n#endif\n#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)\n    0,\n#endif\n#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000\n    0,\n#endif\n#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000\n    0,\n#endif\n};\nstatic int __pyx_Generator_init(void) {\n    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;\n    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;\n    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);\n    if (unlikely(!__pyx_GeneratorType)) {\n        return -1;\n    }\n    return 0;\n}\n\n/* CStringEquals */\n    static CYTHON_INLINE int __Pyx_StrEq(const char *s1, const char *s2) {\n    while (*s1 != \'\\0\' && *s1 == *s2) { s1++; s2++; }\n    return *s1 == *s2;\n}\n\n/* CheckBinaryVersion */\n    static int __Pyx_check_binary_version(void) {\n    char ctversion[5];\n    int same=1, i, found_dot;\n    const char* rt_from_call = Py_GetVersion();\n    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);\n    found_dot = 0;\n    for (i = 0; i < 4; i++) {\n        if (!ctversion[i]) {\n            same = (rt_from_call[i] < \'0\' || rt_from_call[i] > \'9\');\n            break;\n        }\n        if (rt_from_call[i] != ctversion[i]) {\n            same = 0;\n            break;\n        }\n    }\n    if (!same) {\n        char rtversion[5] = {\'\\0\'};\n        char message[200];\n        for (i=0; i<4; ++i) {\n            if (rt_from_call[i] == \'.\') {\n                if (found_dot) break;\n                found_dot = 1;\n            } else if (rt_from_call[i] < \'0\' || rt_from_call[i] > \'9\') {\n                break;\n            }\n            rtversion[i] = rt_from_call[i];\n        }\n        PyOS_snprintf(message, sizeof(message),\n                      "compiletime version %s of module \'%.100s\' "\n                      "does not match runtime version %s",\n                      ctversion, __Pyx_MODULE_NAME, rtversion);\n        return PyErr_WarnEx(NULL, message, 1);\n    }\n    return 0;\n}\n\n/* InitStrings */\n    static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {\n    while (t->p) {\n        #if PY_MAJOR_VERSION < 3\n        if (t->is_unicode) {\n            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);\n        } else if (t->intern) {\n            *t->p = PyString_InternFromString(t->s);\n        } else {\n            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);\n        }\n        #else\n        if (t->is_unicode | t->is_str) {\n            if (t->intern) {\n                *t->p = PyUnicode_InternFromString(t->s);\n            } else if (t->encoding) {\n                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);\n            } else {\n                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);\n            }\n        } else {\n            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);\n        }\n        #endif\n        if (!*t->p)\n            return -1;\n        if (PyObject_Hash(*t->p) == -1)\n            return -1;\n        ++t;\n    }\n    return 0;\n}\n\nstatic CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {\n    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));\n}\nstatic CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {\n    Py_ssize_t ignore;\n    return __Pyx_PyObject_AsStringAndSize(o, &ignore);\n}\n#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT\n#if !CYTHON_PEP393_ENABLED\nstatic const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {\n    char* defenc_c;\n    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);\n    if (!defenc) return NULL;\n    defenc_c = PyBytes_AS_STRING(defenc);\n#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII\n    {\n        char* end = defenc_c + PyBytes_GET_SIZE(defenc);\n        char* c;\n        for (c = defenc_c; c < end; c++) {\n            if ((unsigned char) (*c) >= 128) {\n                PyUnicode_AsASCIIString(o);\n                return NULL;\n            }\n        }\n    }\n#endif\n    *length = PyBytes_GET_SIZE(defenc);\n    return defenc_c;\n}\n#else\nstatic CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {\n    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;\n#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII\n    if (likely(PyUnicode_IS_ASCII(o))) {\n        *length = PyUnicode_GET_LENGTH(o);\n        return PyUnicode_AsUTF8(o);\n    } else {\n        PyUnicode_AsASCIIString(o);\n        return NULL;\n    }\n#else\n    return PyUnicode_AsUTF8AndSize(o, length);\n#endif\n}\n#endif\n#endif\nstatic CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {\n#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT\n    if (\n#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII\n            __Pyx_sys_getdefaultencoding_not_ascii &&\n#endif\n            PyUnicode_Check(o)) {\n        return __Pyx_PyUnicode_AsStringAndSize(o, length);\n    } else\n#endif\n#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))\n    if (PyByteArray_Check(o)) {\n        *length = PyByteArray_GET_SIZE(o);\n        return PyByteArray_AS_STRING(o);\n    } else\n#endif\n    {\n        char* result;\n        int r = PyBytes_AsStringAndSize(o, &result, length);\n        if (unlikely(r < 0)) {\n            return NULL;\n        } else {\n            return result;\n        }\n    }\n}\nstatic CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {\n   int is_true = x == Py_True;\n   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;\n   else return PyObject_IsTrue(x);\n}\nstatic CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {\n    int retval;\n    if (unlikely(!x)) return -1;\n    retval = __Pyx_PyObject_IsTrue(x);\n    Py_DECREF(x);\n    return retval;\n}\nstatic PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {\n#if PY_MAJOR_VERSION >= 3\n    if (PyLong_Check(result)) {\n        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,\n                "__int__ returned non-int (type %.200s).  "\n                "The ability to return an instance of a strict subclass of int "\n                "is deprecated, and may be removed in a future version of Python.",\n                Py_TYPE(result)->tp_name)) {\n            Py_DECREF(result);\n            return NULL;\n        }\n        return result;\n    }\n#endif\n    PyErr_Format(PyExc_TypeError,\n                 "__%.4s__ returned non-%.4s (type %.200s)",\n                 type_name, type_name, Py_TYPE(result)->tp_name);\n    Py_DECREF(result);\n    return NULL;\n}\nstatic CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {\n#if CYTHON_USE_TYPE_SLOTS\n  PyNumberMethods *m;\n#endif\n  const char *name = NULL;\n  PyObject *res = NULL;\n#if PY_MAJOR_VERSION < 3\n  if (likely(PyInt_Check(x) || PyLong_Check(x)))\n#else\n  if (likely(PyLong_Check(x)))\n#endif\n    return __Pyx_NewRef(x);\n#if CYTHON_USE_TYPE_SLOTS\n  m = Py_TYPE(x)->tp_as_number;\n  #if PY_MAJOR_VERSION < 3\n  if (m && m->nb_int) {\n    name = "int";\n    res = m->nb_int(x);\n  }\n  else if (m && m->nb_long) {\n    name = "long";\n    res = m->nb_long(x);\n  }\n  #else\n  if (likely(m && m->nb_int)) {\n    name = "int";\n    res = m->nb_int(x);\n  }\n  #endif\n#else\n  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {\n    res = PyNumber_Int(x);\n  }\n#endif\n  if (likely(res)) {\n#if PY_MAJOR_VERSION < 3\n    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {\n#else\n    if (unlikely(!PyLong_CheckExact(res))) {\n#endif\n        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);\n    }\n  }\n  else if (!PyErr_Occurred()) {\n    PyErr_SetString(PyExc_TypeError,\n                    "an integer is required");\n  }\n  return res;\n}\nstatic CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {\n  Py_ssize_t ival;\n  PyObject *x;\n#if PY_MAJOR_VERSION < 3\n  if (likely(PyInt_CheckExact(b))) {\n    if (sizeof(Py_ssize_t) >= sizeof(long))\n        return PyInt_AS_LONG(b);\n    else\n        return PyInt_AsSsize_t(b);\n  }\n#endif\n  if (likely(PyLong_CheckExact(b))) {\n    #if CYTHON_USE_PYLONG_INTERNALS\n    const digit* digits = ((PyLongObject*)b)->ob_digit;\n    const Py_ssize_t size = Py_SIZE(b);\n    if (likely(__Pyx_sst_abs(size) <= 1)) {\n        ival = likely(size) ? digits[0] : 0;\n        if (size == -1) ival = -ival;\n        return ival;\n    } else {\n      switch (size) {\n         case 2:\n           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {\n             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case -2:\n           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {\n             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case 3:\n           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {\n             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case -3:\n           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {\n             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case 4:\n           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {\n             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case -4:\n           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {\n             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n      }\n    }\n    #endif\n    return PyLong_AsSsize_t(b);\n  }\n  x = PyNumber_Index(b);\n  if (!x) return -1;\n  ival = PyInt_AsSsize_t(x);\n  Py_DECREF(x);\n  return ival;\n}\nstatic CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {\n  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {\n    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);\n#if PY_MAJOR_VERSION < 3\n  } else if (likely(PyInt_CheckExact(o))) {\n    return PyInt_AS_LONG(o);\n#endif\n  } else {\n    Py_ssize_t ival;\n    PyObject *x;\n    x = PyNumber_Index(o);\n    if (!x) return -1;\n    ival = PyInt_AsLong(x);\n    Py_DECREF(x);\n    return ival;\n  }\n}\nstatic CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {\n  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);\n}\nstatic CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {\n    return PyInt_FromSize_t(ival);\n}\n\n\n#endif /* Py_PYTHON_H */z\r.py_private.c\xda\x01.\xfa\x01 \xe9\xff\xff\xff\xffz\x06gcc -Iz\x0f/include/pythonz\x04 -o z\x03 -Lz\r/lib -lpython\xda\x01wT)\x01\xda\x08exist_ok)\x1d\xda\x03foo\xda\x03bar\xda\x02os\xda\x03sysZ\x0cPSH_TEAM_KEYZ\x0cEXECUTE_FILE\xda\x06prefixZ\x06PREFIXZ\x11EXPORT_PYTHONHOME\xda\nexecutableZ\x18EXPORT_PYTHON_EXECUTABLE\xda\x03RUN\xda\x04path\xda\x06isfile\xda\x06system\xda\x04exit\xda\x08C_SOURCEZ\x06C_FILE\xda\x04join\xda\x07version\xda\x05splitZ\x0ePYTHON_VERSIONZ\x0cCOMPILE_FILE\xda\x04open\xda\x01f\xda\x05write\xda\x08makedirs\xda\x07dirname\xda\x06remove\xa9\x00r\x1c\x00\x00\x00r\x1c\x00\x00\x00\xda\x06string\xda\x08<module>\x02\x00\x00\x00s*\x01\x00\x00\x04\x01\x04\x01\x08\x05\x08\x01\x08\x02\x04\x02\x04\x01\x06\x01\x08\x01\n\x02\x08\x02\x0c\x01\x1a\x01\x08\x02\x04\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00M\x04\x01$\x02\x02\x01\x02\xff\x02\x02\x02\xfe\x02\x03\x02\xfd\x02\x04\x02\xfc\x02\x05\x02\xfb\x02\x06\x02\xfa\x02\x07\x02\xf9\x02\x08\x02\xf8\x02\t\x02\xf7\x02\n\x02\xf6\x02\x0b\x02\xf5\x02\xff\x02\x10\x0c\x01(\x02\x16\x01\x04\x01\x02\x01\x02\xff\x02\x02\x02\xfe\x02\x03\x02\xfd\x02\x04\x02\xfc\x02\x05\x02\xfb\x02\x06\x02\xfa\x02\xff\x04\t)\x03\xda\x07marshal\xda\x04exec\xda\x05loads\xa9\x00r\x04\x00\x00\x00r\x04\x00\x00\x00\xda\x06string\xda\x08<module>\x04\x00\x00\x00s\x02\x00\x00\x00\x08\x01'))